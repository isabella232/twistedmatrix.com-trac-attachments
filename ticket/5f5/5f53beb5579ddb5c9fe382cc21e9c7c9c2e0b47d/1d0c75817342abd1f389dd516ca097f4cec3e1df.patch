Index: twisted/internet/task.py
===================================================================
--- twisted/internet/task.py	(revision 20335)
+++ twisted/internet/task.py	(working copy)
@@ -72,7 +72,6 @@
         self.running = True
         d = self.deferred = defer.Deferred()
         self.starttime = self.clock.seconds()
-        self.count = 0
         self.interval = interval
         if now:
             self()
@@ -115,15 +114,12 @@
             self.call = self.clock.callLater(0, self)
             return
 
-        fromNow = self.starttime - self.clock.seconds()
+        curtime = self.clock.seconds()
 
-        while self.running:
-            self.count += 1
-            fromStart = self.count * self.interval
-            delay = fromNow + fromStart
-            if delay > 0:
-                self.call = self.clock.callLater(delay, self)
-                return
+        delay = (self.starttime-curtime) % self.interval
+        if delay == 0:
+            delay = self.interval
+        self.call = self.clock.callLater(delay, self)
 
     def __repr__(self):
         if hasattr(self.f, 'func_name'):
