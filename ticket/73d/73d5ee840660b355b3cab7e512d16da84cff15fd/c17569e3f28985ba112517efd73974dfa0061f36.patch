Index: twisted/test/test_paths.py
===================================================================
--- twisted/test/test_paths.py	(revision 27354)
+++ twisted/test/test_paths.py	(working copy)
@@ -1,4 +1,4 @@
-# Copyright (c) 2001-2008 Twisted Matrix Laboratories.
+# Copyright (c) 2001-2009 Twisted Matrix Laboratories.
 # See LICENSE for details.
 
 """
@@ -277,13 +277,16 @@
 
 
 class ZipFilePathTestCase(AbstractFilePathTestCase):
-
+    """
+    Test various L{ZipPath} path manipulations as well as reprs for L{ZipPath}
+    and L{ZipArchive}.
+    """
     def setUp(self):
         AbstractFilePathTestCase.setUp(self)
-        zipit(self.cmn, self.cmn+'.zip')
-        self.path = ZipArchive(self.cmn+'.zip')
+        zipit(self.cmn, self.cmn + '.zip')
+        self.path = ZipArchive(self.cmn + '.zip')
         self.root = self.path
-        self.all = [x.replace(self.cmn, self.cmn+'.zip') for x in self.all]
+        self.all = [x.replace(self.cmn, self.cmn + '.zip') for x in self.all]
 
 
     def test_zipPathRepr(self):
@@ -292,20 +295,19 @@
         and an absolute path to the zip file.
         """
         child = self.path.child("foo")
+        path = "ZipPath(%r)" % (
+            os.path.abspath(self.cmn + ".zip" + os.sep + 'foo'),)
+
         # Check for an absolute path
-        self.assertEquals(
-            repr(child),
-            "ZipPath('%s/%s')" % (os.path.abspath(self.cmn + '.zip'), 'foo'))
+        self.assertEquals(repr(child), path)
 
         # Create a path to the file rooted in the current working directory
-        relativeCommon = self.cmn.replace(os.getcwd() + "/", "", 1) + ".zip"
+        relativeCommon = self.cmn.replace(os.getcwd() + os.sep, "", 1) + ".zip"
         relpath = ZipArchive(relativeCommon)
         child = relpath.child("foo")
 
         # Check using a path without the cwd prepended
-        self.assertEquals(
-            repr(child),
-            "ZipPath('%s/%s')" % (os.path.abspath(self.cmn + '.zip'), 'foo'))
+        self.assertEquals(repr(child), path)
 
 
     def test_zipArchiveRepr(self):
@@ -313,16 +315,17 @@
         Make sure that invoking ZipArchive's repr prints the correct method name
         and an absolute path to the zip file.
         """
+        path = 'ZipArchive(%r)' % (os.path.abspath(self.cmn + '.zip'),)
+
         # Check for an absolute path
-        self.assertEquals(repr(self.path),
-                          'ZipArchive(%r)' % os.path.abspath(self.cmn + '.zip'))
+        self.assertEquals(repr(self.path), path)
 
         # Create a path to the file rooted in the current working directory
-        relativeCommon = self.cmn.replace(os.getcwd() + "/", "", 1) + ".zip"
+        relativeCommon = self.cmn.replace(os.getcwd() + os.sep, "", 1) + ".zip"
         relpath = ZipArchive(relativeCommon)
+
         # Check using a path without the cwd prepended
-        self.assertEquals(repr(relpath),
-                          'ZipArchive(%r)' % os.path.abspath(self.cmn + '.zip'))
+        self.assertEquals(repr(relpath), path)
 
 
 
