Index: twisted/lore/test/test_lore.py
===================================================================
--- twisted/lore/test/test_lore.py	(revision 20593)
+++ twisted/lore/test/test_lore.py	(working copy)
@@ -48,7 +48,7 @@
 
 from twisted.lore.scripts import lore
 
-from twisted.web import microdom
+from twisted.web import microdom, domhelpers
 
 def sp(originalFileName):
     return sibpath(__file__, originalFileName)
@@ -91,6 +91,12 @@
             self.assertEquals(e, a, "differ at %d: %s vs. %s" % (i, e, a))
         self.assertEquals(expected, act)
 
+    def assertGreaterThanOrEqual(self, expected, act):
+        if act >= expected:
+	    self.assertEquals(0,0)
+	else:
+	    self.assertEquals(1,0)
+
     def makeTemp(self, *filenames):
         tmp = self.mktemp()
         os.mkdir(tmp)
@@ -284,9 +290,37 @@
         #                       VVV change to new, numbered files  
         self.assertEqualFiles("lore_numbering_test_out.html", "lore_numbering_test.tns")
         self.assertEqualFiles("lore_numbering_test_out2.html", "lore_numbering_test2.tns")
+	
+    def test_setIndexLink(self):
+        """
+	Tests the setIndexLink function
+	"""
+	templ = microdom.parse(open(d['template']))
+	indexFilename = 'theIndexFile'
+	numLinks = len(domhelpers.findElementsWithAttribute(templ, "class", "index-link"))
+	
+	#if our testing template has no index-link nodes, complain about it
+	self.assertNotEquals([], domhelpers.findElementsWithAttribute(templ, "class", "index-link"))
 
+	tree.setIndexLink(templ, indexFilename)
 
+        self.assertEquals([], domhelpers.findElementsWithAttribute(templ, "class", "index-link"))	
+	
+	indexLinks = domhelpers.findElementsWithAttribute(templ, "href", indexFilename)
+	self.assertGreaterThanOrEqual(numLinks, len(indexLinks))
+	for link in indexLinks:
+	    self.assertEquals('a', link.nodeName)
+	    self.assertEquals('a', link.tagName)
+	    self.assertEquals('a', link.endTagName)
 
+	indexFilename = None
+
+	tree.setIndexLink(templ, indexFilename)
+
+	self.assertEquals([], domhelpers.findElementsWithAttribute(templ, "class", "index-link"))
+	
+
+
 class LatexSpitterTestCase(unittest.TestCase):
     """
     Tests for the Latex output plugin.
Index: twisted/lore/tree.py
===================================================================
--- twisted/lore/tree.py	(revision 20593)
+++ twisted/lore/tree.py	(working copy)
@@ -551,16 +551,17 @@
 
     @type indexFilename: C{str}
     @param indexFilename: The address of the index document to which to link.
-    If any C{False} value, this function will do nothing.
+    If any C{False} value, this function will remove all index-link nodes
 
     @return: C{None}
     """
-    if not indexFilename:
-        return
     indexLinks = domhelpers.findElementsWithAttribute(template, "class", "index-link")
     for link in indexLinks:
-        link.nodeName = link.tagName = link.endTagName = 'a'
-        link.attributes = InsensitiveDict({'href': indexFilename})
+        if not indexFilename:
+	    link.parentNode.removeChild(link)
+	else:
+	    link.nodeName = link.tagName = link.endTagName = 'a'
+            link.attributes = InsensitiveDict({'href': indexFilename})
 
 
 
