Index: twisted/lore/test/test_lore.py
===================================================================
--- twisted/lore/test/test_lore.py	(revision 20593)
+++ twisted/lore/test/test_lore.py	(working copy)
@@ -48,7 +48,7 @@
 
 from twisted.lore.scripts import lore
 
-from twisted.web import microdom
+from twisted.web import microdom, domhelpers
 
 def sp(originalFileName):
     return sibpath(__file__, originalFileName)
@@ -284,9 +284,48 @@
         #                       VVV change to new, numbered files  
         self.assertEqualFiles("lore_numbering_test_out.html", "lore_numbering_test.tns")
         self.assertEqualFiles("lore_numbering_test_out2.html", "lore_numbering_test2.tns")
+
+    def test_setIndexLink(self):
+        """
+        Tests to make sure that index links are processed when an index page
+        exists and removed when there is not.
+        """
+        templ = microdom.parse(open(d['template']))
+        indexFilename = 'theIndexFile'
+        numLinks = len(domhelpers.findElementsWithAttribute(templ,
+                                                            "class",
+                                                            "index-link"))

+        #if our testing template has no index-link nodes, complain about it
+        (self.assertNotEquals([], domhelpers.
+                                  findElementsWithAttribute(templ,
+                                                            "class",
+                                                            "index-link")))

+        tree.setIndexLink(templ, indexFilename)

+        (self.assertEquals([], domhelpers.
+                               findElementsWithAttribute(templ,
+                                                         "class",
+                                                         "index-link")))
+
+        indexLinks = domhelpers.findElementsWithAttribute(templ,
+                                                          "href",
+                                                          indexFilename)
+        self.assertTrue(len(indexLinks) >= numLinks)
+
+        templ = microdom.parse(open(d['template']))
+        (self.assertNotEquals([], domhelpers.
+                                  findElementsWithAttribute(templ,
+                                                            "class",
+                                                            "index-link")))
+        indexFilename = None
+
+        tree.setIndexLink(templ, indexFilename)
+
+        (self.assertEquals([], domhelpers.
+                               findElementsWithAttribute(templ,
+	                                                  "class",
+                                                         "index-link")))
+
+
+
 class LatexSpitterTestCase(unittest.TestCase):
     """
     Tests for the Latex output plugin.
Index: twisted/lore/tree.py
===================================================================
--- twisted/lore/tree.py	(revision 20593)
+++ twisted/lore/tree.py	(working copy)
@@ -551,16 +551,19 @@
 
     @type indexFilename: C{str}
     @param indexFilename: The address of the index document to which to link.
-    If any C{False} value, this function will do nothing.
+    If any C{False} value, this function will remove all index-link nodes
 
     @return: C{None}
     """
-    if not indexFilename:
-        return
-    indexLinks = domhelpers.findElementsWithAttribute(template, "class", "index-link")
+    indexLinks = domhelpers.findElementsWithAttribute(template,
+                                                      "class",
+                                                      "index-link")
     for link in indexLinks:
-        link.nodeName = link.tagName = link.endTagName = 'a'
-        link.attributes = InsensitiveDict({'href': indexFilename})
+        if indexFilename == None:
+            link.parentNode.removeChild(link)
+        else:
+            link.nodeName = link.tagName = link.endTagName = 'a'
+            link.attributes = InsensitiveDict({'href': indexFilename})



