diff --git twisted/internet/tcp.py twisted/internet/tcp.py
index 222ae9b..9fefe6b 100644
--- twisted/internet/tcp.py
+++ twisted/internet/tcp.py
@@ -17,6 +17,7 @@ import types
 import socket
 import sys
 import operator
+import warnings
 
 from zope.interface import implements, classImplements
 
@@ -26,7 +27,7 @@ except ImportError:
     SSL = None
 
 from twisted.python.runtime import platformType
-
+from twisted.python import versions, deprecate
 
 if platformType == 'win32':
     # no such thing as WSAEPERM or error code 10001 according to winsock.h or MSDN
@@ -457,8 +458,14 @@ class Connection(abstract.FileDescriptor, _SocketCloser):
                 return main.CONNECTION_LOST
         if not data:
             return main.CONNECTION_DONE
-        return self.protocol.dataReceived(data)
-
+        rval = self.protocol.dataReceived(data)
+        if rval:
+            warningFormat = 'Returning a value other than None from %(fqpn)s was deprecated in %(version)s'
+            warningString = deprecate.getDeprecationWarningString(self.protocol.dataReceived, 
+                                                                  versions.Version('twisted', 11, 0, 0),
+                                                                  format = warningFormat)
+            warnings.warn(warningString, category=DeprecationWarning, stacklevel=2)
+        return rval
 
     def writeSomeData(self, data):
         """
diff --git twisted/internet/test/test_tcpconnection.py twisted/internet/test/test_tcpconnection.py
new file mode 100644
index 0000000..422986a
--- /dev/null
+++ twisted/internet/test/test_tcpconnection.py
@@ -0,0 +1,64 @@
+# Copyright (c) 20011 Twisted Matrix Laboratories.
+# See LICENSE for details.
+
+"""
+Tests for TCP Connection.
+"""
+
+
+from twisted.internet.tcp import Connection
+from twisted.internet.protocol import Protocol
+from twisted.trial.unittest import TestCase
+
+
+class FakeSocket(object):
+    """
+    A Fake Socket object
+    """
+    fileno = 1
+    
+    def __init__(self, data='someData'):
+        self.data = data
+
+    def setblocking(self, blocking):
+        self.blocking = blocking
+
+    def recv(self, size):
+        return self.data
+
+
+
+class TestFakeSocket(TestCase):
+
+    def test_blocking(self):
+        skt = FakeSocket()
+        skt.setblocking(0)
+        self.assertEquals(skt.blocking, 0)
+
+
+    def test_recv(self):
+        skt = FakeSocket()
+        self.assertEquals(skt.recv(10), "someData")
+
+
+
+class FakeProtocol(object):
+    def dataReceived(self, data):
+        return "Returning something I shouldn't"
+
+
+
+class TestTCPConnection(TestCase):
+    """
+    """
+    def test_doread(self):
+        skt = FakeSocket()
+        protocol = FakeProtocol()
+        conn = Connection(skt, protocol)
+        conn.doRead()
+        warnings = self.flushWarnings([self.test_doread])
+        self.assertEquals(warnings[0]['category'], DeprecationWarning)
+        self.assertEquals(
+            warnings[0]['message'],
+            "Returning a value other than None from twisted.internet.test.test_tcpconnection.FakeProtocol.dataReceived was deprecated in twisted 11.0.0")
+        self.assertEquals(len(warnings), 1)
diff --git twisted/topfiles/2491.removal twisted/topfiles/2491.removal
new file mode 100644
index 0000000..cee4baf
--- /dev/null
+++ twisted/topfiles/2491.removal
@@ -0,0 +1 @@
+returning a value other than None from IProtocol.dataReceived was deprecated
