Index: usage.py
===================================================================
--- usage.py	(revision 12007)
+++ usage.py	(working copy)
@@ -102,6 +102,7 @@
         super(Options, self).__init__()
 
         self.opts = self
+        self.defaults = {}
 
         # These are strings/lists we will pass to getopt
         self.longOpt = []
@@ -124,6 +125,7 @@
             self.docs.update(docs)
 
             self.opts.update(settings)
+            self.defaults.update(settings)
 
             self.synonyms.update(synonyms)
             self.__dispatch.update(dispatch)
@@ -151,7 +153,6 @@
 
         if options is None:
             options = sys.argv[1:]
-
         try:
             opts, args = getopt.getopt(options,
                                        self.shortOpt, self.longOpt)
@@ -371,6 +372,10 @@
         return self.getSynopsis() + '\n' + self.getUsage(width=None)
 
     def getSynopsis(self):
+        """ Returns a string containing a description of these options and how to
+            pass them to the executed file.
+        """
+
         default = "%s%s" % (path.basename(sys.argv[0]),
                             (self.longOpt and " [options]") or '')
         if self.parent is None:
@@ -435,7 +440,7 @@
                  'short': longToShort[opt],
                  'doc': self.docs[opt],
                  'optType': optType,
-                 'default': self.opts.get(opt, None)
+                 'default': self.defaults.get(opt, None)
                  })
 
         if not (getattr(self, "longdesc", None) is None):
