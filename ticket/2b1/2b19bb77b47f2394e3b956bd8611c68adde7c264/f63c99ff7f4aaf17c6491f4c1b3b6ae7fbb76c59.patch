=== modified file 'twisted/conch/telnet.py'
--- twisted/conch/telnet.py	2011-02-14 04:45:15 +0000
+++ twisted/conch/telnet.py	2011-09-30 20:44:51 +0000
@@ -155,10 +155,23 @@
 class ITelnetProtocol(iinternet.IProtocol):
     def unhandledCommand(command, argument):
         """A command was received but not understood.
+
+        @param command: the command received.
+        @type command: C{str}, a single character.
+        @param argument: the argument to the received command.
+        @type argument: C{str}, a single character, or None if the command that
+            was unhandled does not provide an argument.
         """
 
-    def unhandledSubnegotiation(bytes):
+    def unhandledSubnegotiation(command, bytes):
         """A subnegotiation command was received but not understood.
+
+        @param command: the command being subnegotiated. That is, the first
+            byte after the SB command.
+        @type command: C{str}, a single character.
+        @param bytes: all other bytes of the subneogation. That is, all but the
+            first bytes between SB and SE, with IAC un-escaping applied.
+        @type bytes: C{list} of C{str}, each a single character
         """
 
     def enableLocal(option):
@@ -168,6 +181,9 @@
         telnet connection and return True.  If False is returned,
         the option will be treated as still disabled and the peer
         will be notified.
+
+        @param option: the option to be enabled.
+        @type option: C{str}, a single character.
         """
 
     def enableRemote(option):
@@ -175,6 +191,9 @@
 
         Returns True if the peer should be allowed to enable this option,
         False otherwise.
+
+        @param option: the option to be enabled.
+        @type option: C{str}, a single character.
         """
 
     def disableLocal(option):
@@ -182,10 +201,16 @@
 
         Unlike enableLocal, this method cannot fail.  The option must be
         disabled.
+
+        @param option: the option to be disabled.
+        @type option: C{str}, a single character.
         """
 
     def disableRemote(option):
         """Indicate that the peer has disabled this option.
+
+        @param option: the option to be disabled.
+        @type option: C{str}, a single character.
         """
 
 

=== modified file 'twisted/conch/test/test_telnet.py'
--- twisted/conch/test/test_telnet.py	2011-07-14 18:05:14 +0000
+++ twisted/conch/test/test_telnet.py	2011-09-30 20:11:07 +0000
@@ -7,6 +7,7 @@
 """
 
 from zope.interface import implements
+from zope.interface.verify import verifyObject
 
 from twisted.internet import defer
 
@@ -69,6 +70,16 @@
 
 
 
+class TestInterfaces(unittest.TestCase):
+    def test_interface(self):
+        """
+        L{telnet.TelnetProtocol} implements L{telnet.ITelnetProtocol}
+        """
+        p = telnet.TelnetProtocol()
+        verifyObject(telnet.ITelnetProtocol, p)
+
+
+
 class TelnetTransportTestCase(unittest.TestCase):
     """
     Tests for L{telnet.TelnetTransport}.

=== added file 'twisted/conch/topfiles/4751.bugfix'
--- twisted/conch/topfiles/4751.bugfix	1970-01-01 00:00:00 +0000
+++ twisted/conch/topfiles/4751.bugfix	2011-09-30 20:41:32 +0000
@@ -0,0 +1,2 @@
+twisted.conch.telnet.ITelnetProtocol now has the correct signature for its
+unhandledSubnegotiation() method.

