diff --git a/doc/core/man/trial.1 b/doc/core/man/trial.1
index 086b401..355a56d 100644
--- a/doc/core/man/trial.1
+++ b/doc/core/man/trial.1
@@ -60,8 +60,8 @@ the normal test output.
 .SH OPTIONS
 .TP
 \fB-j\fR, \fB--jobs\fR \fInumber\fR
-Set the number of process workers to run. It conflicts with the debug and
-profile options.
+Set the number of process workers to run. It conflicts with the debug,
+exitfirst and profile options.
 .TP
 \fB-b\fR, \fB--debug\fR
 Run the tests in a debugger. If that debugger is 'pdb' (which is the default if
@@ -156,7 +156,8 @@ option to see a list of valid reporters.
 .TP
 \fB-x\fR, \fB--exitfirst\fR
 Stop the test run after the first test which does not succeed. This includes
-failures, errors, or unexpected successes.
+failures, errors, or unexpected successes. Won't work with the --jobs option
+currently.
 .TP
 \fB--spew\fR
 Print an insanely verbose log of everything that happens. Useful when
diff --git a/twisted/topfiles/1518.feature b/twisted/topfiles/1518.feature
index 0628b66..c32d5a1 100644
--- a/twisted/topfiles/1518.feature
+++ b/twisted/topfiles/1518.feature
@@ -1 +1 @@
-trial now has --stop and --stop-failed flags which stop the test run after the first non-success or first failure respectively.
+trial now has an --exitfirst flag which stops the test run after the first error or failure.
diff --git a/twisted/trial/reporter.py b/twisted/trial/reporter.py
index c57cb86..e6d8365 100644
--- a/twisted/trial/reporter.py
+++ b/twisted/trial/reporter.py
@@ -242,29 +242,15 @@ class _ExitWrapper(TestResultDecorator):
     """
 
     def addError(self, *args, **kwargs):
-        """
-        See L{itrial.IReporter}.
-        """
         self.shouldStop = True
         return self._originalReporter.addError(*args, **kwargs)
 
 
     def addFailure(self, *args, **kwargs):
-        """
-        See L{itrial.IReporter}.
-        """
         self.shouldStop = True
         return self._originalReporter.addFailure(*args, **kwargs)
 
 
-    def addUnexpectedSuccess(self, *args, **kwargs):
-        """
-        See L{itrial.IReporter}.
-        """
-        self.shouldStop = True
-        return self._originalReporter.addUnexpectedSuccess(*args, **kwargs)
-
-
 
 class _AdaptedReporter(TestResultDecorator):
     """
diff --git a/twisted/trial/test/test_reporter.py b/twisted/trial/test/test_reporter.py
index cc0fa06..0d1958c 100644
--- a/twisted/trial/test/test_reporter.py
+++ b/twisted/trial/test/test_reporter.py
@@ -1695,7 +1695,6 @@ class ExitWrapperTests(unittest.SynchronousTestCase):
         L{reporter._ExitWrapper} causes a wrapped reporter to stop after its
         first failure.
         """
-
         self.wrapped.addFailure(self.test, self.failure)
         self.assertTrue(self.wrapped.shouldStop)
         self.assertEqual(self.result.failures, [(self.test, self.failure)])
@@ -1706,19 +1705,17 @@ class ExitWrapperTests(unittest.SynchronousTestCase):
         L{reporter._ExitWrapper} causes a wrapped reporter to stop after its
         first error.
         """
-
         self.wrapped.addError(self.test, self.failure)
         self.assertTrue(self.wrapped.shouldStop)
         self.assertEqual(self.result.errors, [(self.test, self.failure)])
 
 
-    def test_stopOnUnexpectedSuccess(self):
+    def test_doesNotStopOnUnexpectedSuccess(self):
         """
-        L{reporter._StopWrapper} causes a wrapped reporter to stop after an
-        unexpected success if C{onlyAfterFailure} is C{False}.
+        L{reporter._ExitWrapper} does not cause a wrapped reporter to stop
+        after an unexpected success.
         """
-
         self.wrapped.addUnexpectedSuccess(self.test, self.failure)
-        self.assertTrue(self.wrapped.shouldStop)
+        self.assertFalse(self.wrapped.shouldStop)
         self.assertEqual(
             self.result.unexpectedSuccesses, [(self.test, self.failure)])
diff --git a/twisted/trial/test/test_runner.py b/twisted/trial/test/test_runner.py
index 985e7b1..e30743c 100644
--- a/twisted/trial/test/test_runner.py
+++ b/twisted/trial/test/test_runner.py
@@ -567,7 +567,6 @@ class TestRunner(unittest.SynchronousTestCase):
         If trial was passed the C{--exitfirst} option, the constructed test
         result object is wrapped with L{reporter._ExitWrapper}.
         """
-
         self.parseOptions(["--exitfirst"])
         runner = self.getRunner()
         result = runner._makeResult()
