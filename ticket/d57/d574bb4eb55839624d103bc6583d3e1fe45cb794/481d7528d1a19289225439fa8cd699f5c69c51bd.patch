Index: twisted/internet/test/test_posixprocess.py
===================================================================
--- twisted/internet/test/test_posixprocess.py	(revision 0)
+++ twisted/internet/test/test_posixprocess.py	(revision 0)
@@ -0,0 +1,52 @@
+# Copyright (c) 2010 Twisted Matrix Laboratories.
+# See LICENSE for details.
+
+"""
+Tests for POSIX-based L{IReactorProcess} implementations.
+"""
+
+import errno, os, sys
+
+from twisted.internet import process
+from twisted.python.runtime import platformType
+from twisted.trial.unittest import TestCase
+
+
+class FileDescriptorTests(TestCase):
+    """
+    Tests for L{twisted.internet.process._listOpenFDs}
+    """
+
+    if platformType != "posix":
+        skip = "non-POSIX platform"
+
+
+    def test_openFDs(self):
+        """
+        File descriptors returned by L{_listOpenFDs} are mostly open.
+
+        This test assumes that zero-legth writes fail with EBADF on closed
+        file descriptors.
+        """
+        for fd in process._listOpenFDs():
+            try:
+                os.write(fd, "")
+            except OSError, err:
+                self.assertEquals(errno.EBADF, err.errno)
+
+
+    def test_expectedFDs(self):
+        """
+        L{_listOpenFDs} lists expected file descriptors.
+        """
+        openfds = process._listOpenFDs()
+        for f in sys.stdin, sys.stdout, sys.stderr:
+            self.assertIn(f.fileno(), openfds)
+
+        f = file(os.devnull)
+        new_openfds = process._listOpenFDs()
+        self.assertTrue(len(new_openfds) > len(openfds))
+
+        f.close()
+        new_openfds = process._listOpenFDs()
+        self.assertEqual(len(new_openfds), len(openfds))
Index: twisted/internet/test/test_process.py
===================================================================
--- twisted/internet/test/test_process.py	(revision 29522)
+++ twisted/internet/test/test_process.py	(working copy)
@@ -478,21 +478,6 @@
         self.runReactor(reactor)
 
 
-    def test_listOpenFDs(self):
-        """
-        File descriptors returned by L{_listOpenFDs} are mostly open.
-
-        This test assumes that zero-legth writes fail with EBADF on closed
-        file descriptors.
-        """
-        from twisted.internet import process
-        for fd in process._listOpenFDs():
-            try:
-                os.write(fd, "")
-            except OSError, err:
-                self.assertEquals(errno.EBADF, err.errno)
-
-
     def test_openFileDescriptors(self):
         """
         A spawned process has only stdin, stdout and stderr open
