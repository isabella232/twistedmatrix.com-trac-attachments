Index: twisted/trial/test/test_runner.py
===================================================================
--- twisted/trial/test/test_runner.py	(revision 19664)
+++ twisted/trial/test/test_runner.py	(working copy)
@@ -357,10 +357,13 @@
     def test_runUntilFailure(self):
         stream = StringIO.StringIO()
         trialRunner = runner.TrialRunner(reporter.Reporter, stream=stream)
-        result = trialRunner.runUntilFailure(self.test)
-        self.failUnlessEqual(result.testsRun, 1)
-        self.failIf(result.wasSuccessful())
-        self.failUnlessEqual(len(result.failures), 1)
+        try:
+            result = trialRunner.runUntilFailure(self.test)
+            self.failUnlessEqual(result.testsRun, 1)
+            self.failIf(result.wasSuccessful())
+            self.failUnlessEqual(len(result.failures), 1)
+        finally:
+            trialRunner._tearDownLogFile()
 
 
 
@@ -459,14 +462,15 @@
 
     def _test(self, method):
         stream = StringIO.StringIO()
-        wd = self.mktemp()
-        os.mkdir(wd)
-        trialRunner = runner.TrialRunner(reporter.Reporter, stream=stream, workingDirectory=wd)
-        test = TestMalformedMethod.ContainMalformed(method)
-        result = trialRunner.run(test)
-        self.failUnlessEqual(result.testsRun, 1)
-        self.failIf(result.wasSuccessful())
-        self.failUnlessEqual(len(result.errors), 1)
+        trialRunner = runner.TrialRunner(reporter.Reporter, stream=stream)
+        try:
+            test = TestMalformedMethod.ContainMalformed(method)
+            result = trialRunner.run(test)
+            self.failUnlessEqual(result.testsRun, 1)
+            self.failIf(result.wasSuccessful())
+            self.failUnlessEqual(len(result.errors), 1)
+        finally:
+            trialRunner._tearDownLogFile()
 
     def test_extraArg(self):
         """
