Index: twisted/web/test/test_webclient.py
===================================================================
--- twisted/web/test/test_webclient.py	(revision 26463)
+++ twisted/web/test/test_webclient.py	(working copy)
@@ -221,6 +221,10 @@
         r.putChild("redirect", util.Redirect("/file"))
         self.infiniteRedirectResource = CountingRedirect("/infiniteRedirect")
         r.putChild("infiniteRedirect", self.infiniteRedirectResource)
+        subdir = resource.Resource()
+        subdir.putChild("redirect-target", static.Data("success", "text/plain"))
+        subdir.putChild("relative-redirect", util.Redirect("redirect-target"))
+        r.putChild("subdir", subdir)
         r.putChild("wait", ForeverTakingResource())
         r.putChild("write-then-wait", ForeverTakingResource(write=True))
         r.putChild("error", ErrorResource())
@@ -488,7 +492,15 @@
             ).addCallback(lambda dummy: d1)
         return d
 
+    def test_relativeRedirect(self):
+        d = client.getPage(self.getURL("subdir/relative-redirect"))
+        d.addCallback(self._cbRelativeRedirect)
+        return d
 
+    def _cbRelativeRedirect(self, page):
+        self.assertEqual(page, "success")
+        return page
+
     def testPartial(self):
         name = self.mktemp()
         f = open(name, "wb")
Index: twisted/web/client.py
===================================================================
--- twisted/web/client.py	(revision 26463)
+++ twisted/web/client.py	(working copy)
@@ -7,7 +7,7 @@
 """
 
 import os, types
-from urlparse import urlunparse
+from urlparse import urlunparse, urljoin
 
 from twisted.python import log
 from twisted.web import http
@@ -277,6 +277,8 @@
             self.scheme = scheme
             self.host = host
             self.port = port
+        elif not path.startswith('/'):
+            path = urljoin(self.path, url)
         self.path = path
 
     def buildProtocol(self, addr):
