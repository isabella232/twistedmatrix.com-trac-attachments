Index: twisted/python/zippath.py
===================================================================
--- twisted/python/zippath.py	(revision 43669)
+++ twisted/python/zippath.py	(working copy)
@@ -1,4 +1,4 @@
-# -*- test-case-name: twisted.test.test_paths.ZipFilePathTestCase -*-
+# -*- test-case-name: twisted.test.test_paths.ZipFilePathTests -*-
 # Copyright (c) Twisted Matrix Laboratories.
 # See LICENSE for details.
 
Index: twisted/python/test/test_release.py
===================================================================
--- twisted/python/test/test_release.py	(revision 43669)
+++ twisted/python/test/test_release.py	(working copy)
@@ -163,7 +163,7 @@
 
 
 
-class ChangeVersionTest(TestCase, StructureAssertingMixin):
+class ChangeVersionTests(TestCase, StructureAssertingMixin):
     """
     Twisted has the ability to change versions.
     """
@@ -391,7 +391,7 @@
 
 
 
-class ProjectTest(TestCase):
+class ProjectTests(TestCase):
     """
     There is a first-class representation of a project.
     """
@@ -496,7 +496,7 @@
 
 
 
-class UtilityTest(TestCase):
+class UtilityTests(TestCase):
     """
     Tests for various utility functions for releasing.
     """
@@ -542,7 +542,7 @@
 
 
 
-class VersionWritingTest(TestCase):
+class VersionWritingTests(TestCase):
     """
     Tests for L{replaceProjectVersion}.
     """
@@ -574,7 +574,7 @@
 
 
 
-class APIBuilderTestCase(TestCase):
+class APIBuilderTests(TestCase):
     """
     Tests for L{APIBuilder}.
     """
@@ -714,7 +714,7 @@
 
 
 
-class FilePathDeltaTest(TestCase):
+class FilePathDeltaTests(TestCase):
     """
     Tests for L{filePathDelta}.
     """
@@ -1450,7 +1450,7 @@
 
 
 
-class DistributionBuilderTest(DistributionBuilderTestBase):
+class DistributionBuilderTests(DistributionBuilderTestBase):
 
     def test_twistedDistribution(self):
         """
@@ -1673,7 +1673,7 @@
 
 
 
-class BuildAllTarballsTest(DistributionBuilderTestBase):
+class BuildAllTarballsTests(DistributionBuilderTestBase):
     """
     Tests for L{DistributionBuilder.buildAllTarballs}.
     """
Index: twisted/python/test/test_components.py
===================================================================
--- twisted/python/test/test_components.py	(revision 43669)
+++ twisted/python/test/test_components.py	(working copy)
@@ -105,7 +105,7 @@
 
 
 
-class ComponentizedTestCase(unittest.SynchronousTestCase, RegistryUsingMixin):
+class ComponentizedTests(unittest.SynchronousTestCase, RegistryUsingMixin):
     """
     Simple test case for caching in Componentized.
     """
@@ -227,7 +227,7 @@
 
 
 
-class AdapterTestCase(unittest.SynchronousTestCase):
+class AdapterTests(unittest.SynchronousTestCase):
     """Test adapters."""
 
     def testAdapterGetComponent(self):
@@ -307,7 +307,7 @@
         return cmp(self.num, other.num)
 
 
-class TestMetaInterface(RegistryUsingMixin, unittest.SynchronousTestCase):
+class MetaInterfaceTests(RegistryUsingMixin, unittest.SynchronousTestCase):
     def testBasic(self):
         components.registerAdapter(MetaAdder, MetaNumber, IMeta)
         n = MetaNumber(1)
@@ -327,7 +327,7 @@
         self.assertEqual(('x!', 'x!'), xx.xx())
 
 
-class RegistrationTestCase(RegistryUsingMixin, unittest.SynchronousTestCase):
+class RegistrationTests(RegistryUsingMixin, unittest.SynchronousTestCase):
     """
     Tests for adapter registration.
     """
Index: twisted/python/test/test_shellcomp.py
===================================================================
--- twisted/python/test/test_shellcomp.py	(revision 43669)
+++ twisted/python/test/test_shellcomp.py	(working copy)
@@ -125,7 +125,7 @@
 
 
 
-class ZshTestCase(unittest.TestCase):
+class ZshTests(unittest.TestCase):
     """
     Tests for zsh completion code
     """
@@ -384,7 +384,7 @@
 
 
 
-class EscapeTestCase(unittest.TestCase):
+class EscapeTests(unittest.TestCase):
     def test_escape(self):
         """
         Verify _shellcomp.escape() function
@@ -399,7 +399,7 @@
 
 
 
-class CompleterNotImplementedTestCase(unittest.TestCase):
+class CompleterNotImplementedTests(unittest.TestCase):
     """
     Test that using an unknown shell constant with SubcommandAction
     raises NotImplementedError
Index: twisted/python/test/test_deprecate.py
===================================================================
--- twisted/python/test/test_deprecate.py	(revision 43669)
+++ twisted/python/test/test_deprecate.py	(working copy)
@@ -548,7 +548,7 @@
 
 
 
-class TestDeprecationWarnings(SynchronousTestCase):
+class DeprecationWarningsTests(SynchronousTestCase):
     def test_getDeprecationWarningString(self):
         """
         L{getDeprecationWarningString} returns a string that tells us that a
@@ -558,7 +558,7 @@
         self.assertEqual(
             getDeprecationWarningString(self.test_getDeprecationWarningString,
                                         version),
-            "%s.TestDeprecationWarnings.test_getDeprecationWarningString "
+            "%s.DeprecationWarningsTests.test_getDeprecationWarningString "
             "was deprecated in Twisted 8.0.0" % (__name__,))
 
 
@@ -573,7 +573,7 @@
         self.assertEqual(
             getDeprecationWarningString(self.test_getDeprecationWarningString,
                                         version, format),
-            '%s.TestDeprecationWarnings.test_getDeprecationWarningString was '
+            '%s.DeprecationWarningsTests.test_getDeprecationWarningString was '
             'deprecated in Twisted 8.0.0: This is a message' % (__name__,))
 
 
@@ -725,7 +725,7 @@
 
 
 
-class TestAppendToDocstring(SynchronousTestCase):
+class AppendToDocstringTests(SynchronousTestCase):
     """
     Test the _appendToDocstring function.
 
Index: twisted/python/test/test_sendmsg.py
===================================================================
--- twisted/python/test/test_sendmsg.py	(revision 43669)
+++ twisted/python/test/test_sendmsg.py	(working copy)
@@ -150,7 +150,7 @@
 
 
 
-class SendmsgTestCase(TestCase):
+class SendmsgTests(TestCase):
     """
     Tests for sendmsg extension module and associated file-descriptor sending
     functionality.
@@ -333,7 +333,7 @@
         """
         # Just exercise one flag with simple, well-known behavior.  MSG_DONTWAIT
         # makes the send a non-blocking call, even if the socket is in blocking
-        # mode.  See also test_flags in RecvmsgTestCase
+        # mode.  See also test_flags in RecvmsgTests
         for i in range(1024):
             try:
                 send1msg(self.input.fileno(), "x" * 1024, MSG_DONTWAIT)
@@ -408,7 +408,7 @@
 
 
 
-class RecvmsgTestCase(TestCase):
+class RecvmsgTests(TestCase):
     """
     Tests for L{recv1msg} (primarily error handling cases).
     """
@@ -465,7 +465,7 @@
         The C{flags} argument to L{recv1msg} is passed on to the underlying
         C{recvmsg} call, to affect it in whatever way is defined by those flags.
         """
-        # See test_flags in SendmsgTestCase
+        # See test_flags in SendmsgTests
         reader, writer = socketpair(AF_UNIX)
         exc = self.assertRaises(
             error, recv1msg, reader.fileno(), MSG_DONTWAIT)
Index: twisted/python/test/test_dist.py
===================================================================
--- twisted/python/test/test_dist.py	(revision 43669)
+++ twisted/python/test/test_dist.py	(working copy)
@@ -20,7 +20,7 @@
 
 
 
-class SetupTest(TestCase):
+class SetupTests(TestCase):
     """
     Tests for L{get_setup_args}.
     """
@@ -59,7 +59,7 @@
 
 
 
-class GetExtensionsTest(TestCase):
+class GetExtensionsTests(TestCase):
     """
     Tests for L{dist.getExtensions}.
     """
@@ -160,7 +160,7 @@
 
 
 
-class GetVersionTest(TestCase):
+class GetVersionTests(TestCase):
     """
     Tests for L{dist.getVersion}.
     """
@@ -198,7 +198,7 @@
 
 
 
-class GetScriptsTest(TestCase):
+class GetScriptsTests(TestCase):
     """
     Tests for L{dist.getScripts} which returns the scripts which should be
     included in the distribution of a project.
@@ -311,7 +311,7 @@
 
 
 
-class BuildScriptsTest(TestCase):
+class BuildScriptsTests(TestCase):
     """
     Tests for L{dist.build_scripts_twisted}.
     """
Index: twisted/python/test/test_versions.py
===================================================================
--- twisted/python/test/test_versions.py	(revision 43669)
+++ twisted/python/test/test_versions.py	(working copy)
@@ -64,7 +64,7 @@
 """
 
 
-class VersionsTest(TestCase):
+class VersionsTests(TestCase):
 
     def test_versionComparison(self):
         """
Index: twisted/python/test/test_util.py
===================================================================
--- twisted/python/test/test_util.py	(revision 43669)
+++ twisted/python/test/test_util.py	(working copy)
@@ -34,7 +34,7 @@
 
 
 
-class UtilTestCase(unittest.TestCase):
+class UtilTests(unittest.TestCase):
 
     def testUniq(self):
         l = ["a", 1, "ab", "a", 3, 4, 1, 2, 2, 4, 6]
@@ -147,7 +147,7 @@
 
 
 
-class SwitchUIDTest(unittest.TestCase):
+class SwitchUIDTests(unittest.TestCase):
     """
     Tests for L{util.switchUID}.
     """
@@ -223,7 +223,7 @@
 
 
 
-class TestMergeFunctionMetadata(unittest.TestCase):
+class MergeFunctionMetadataTests(unittest.TestCase):
     """
     Tests for L{mergeFunctionMetadata}.
     """
@@ -320,7 +320,7 @@
 
 
 
-class OrderedDictTest(unittest.TestCase):
+class OrderedDictTests(unittest.TestCase):
     def testOrderedDict(self):
         d = util.OrderedDict()
         d['a'] = 'b'
@@ -348,7 +348,7 @@
 
 
 
-class InsensitiveDictTest(unittest.TestCase):
+class InsensitiveDictTests(unittest.TestCase):
     """
     Tests for L{util.InsensitiveDict}.
     """
@@ -431,7 +431,7 @@
         self.finished.callback((reason, self.output))
 
 
-class GetPasswordTest(unittest.TestCase):
+class GetPasswordTests(unittest.TestCase):
     if not IReactorProcess.providedBy(reactor):
         skip = "Process support required to test getPassword"
 
@@ -464,7 +464,7 @@
 
 
 
-class SearchUpwardsTest(unittest.TestCase):
+class SearchUpwardsTests(unittest.TestCase):
     def testSearchupwards(self):
         os.makedirs('searchupwards/a/b/c')
         file('searchupwards/foo.txt', 'w').close()
@@ -488,7 +488,7 @@
 
 
 
-class IntervalDifferentialTestCase(unittest.TestCase):
+class IntervalDifferentialTests(unittest.TestCase):
     def testDefault(self):
         d = iter(util.IntervalDifferential([], 10))
         for i in range(100):
@@ -1079,7 +1079,7 @@
 
 
 
-class PadToTest(unittest.TestCase):
+class PadToTests(unittest.TestCase):
     """
     Tests for L{util.padTo}.
     """
@@ -1149,8 +1149,8 @@
 
 
 if _PY3:
-    del (SwitchUIDTest, SearchUpwardsTest, RunAsEffectiveUserTests,
-         OrderedDictTest, IntervalDifferentialTestCase, UtilTestCase,
-         TestMergeFunctionMetadata, DeprecationTests, InitGroupsTests,
-         GetPasswordTest,
+    del (SwitchUIDTests, SearchUpwardsTests, RunAsEffectiveUserTests,
+         OrderedDictTests, IntervalDifferentialTests, UtilTests,
+         MergeFunctionMetadataTests, DeprecationTests, InitGroupsTests,
+         GetPasswordTests,
          )
Index: twisted/python/test/test_zipstream.py
===================================================================
--- twisted/python/test/test_zipstream.py	(revision 43669)
+++ twisted/python/test/test_zipstream.py	(working copy)
@@ -120,7 +120,7 @@
 
 
 
-class DeflatedZipFileEntryTest(FileEntryMixin, unittest.TestCase):
+class DeflatedZipFileEntryTests(FileEntryMixin, unittest.TestCase):
     """
     DeflatedZipFileEntry should be file-like
     """
@@ -128,7 +128,7 @@
 
 
 
-class ZipFileEntryTest(FileEntryMixin, unittest.TestCase):
+class ZipFileEntryTests(FileEntryMixin, unittest.TestCase):
    """
    ZipFileEntry should be file-like
    """
@@ -136,7 +136,7 @@
 
 
 
-class ZipstreamTest(unittest.TestCase):
+class ZipstreamTests(unittest.TestCase):
     """
     Tests for twisted.python.zipstream
     """
Index: twisted/python/test/test_zippath.py
===================================================================
--- twisted/python/test/test_zippath.py	(revision 43669)
+++ twisted/python/test/test_zippath.py	(working copy)
@@ -26,7 +26,7 @@
 
 
 
-class ZipFilePathTestCase(AbstractFilePathTestCase):
+class ZipFilePathTests(AbstractFilePathTestCase):
     """
     Test various L{ZipPath} path manipulations as well as reprs for L{ZipPath}
     and L{ZipArchive}.
Index: twisted/python/test/test_urlpath.py
===================================================================
--- twisted/python/test/test_urlpath.py	(revision 43669)
+++ twisted/python/test/test_urlpath.py	(working copy)
@@ -9,7 +9,7 @@
 from twisted.python import urlpath
 
 
-class URLPathTestCase(unittest.TestCase):
+class URLPathTests(unittest.TestCase):
     def setUp(self):
         self.path = urlpath.URLPath.fromString("http://example.com/foo/bar?yes=no&no=yes#footer")
 
Index: twisted/topfiles/7748.misc
===================================================================
