diff --git a/twisted/web/http.py b/twisted/web/http.py
index df4281b..50a273d 100644
--- a/twisted/web/http.py
+++ b/twisted/web/http.py
@@ -1746,7 +1746,12 @@ class HTTPChannel(basic.LineReceiver, policies.TimeoutMixin):
         @param line: A line from the header section of a request, excluding the
             line delimiter.
         """
-        header, data = line.split(b':', 1)
+        try:
+            header, data = line.split(b':', 1)
+        except ValueError:
+            _respondToBadRequestAndDisconnect(self.transport)
+            return
+
         header = header.lower()
         data = data.strip()
         if header == b'content-length':
diff --git a/twisted/web/test/test_http.py b/twisted/web/test/test_http.py
index da83d37..c3e433c 100644
--- a/twisted/web/test/test_http.py
+++ b/twisted/web/test/test_http.py
@@ -773,7 +773,7 @@ class ParsingTests(unittest.TestCase):
             b"HTTP/1.1 400 Bad Request\r\n\r\n")
 
 
-    def test_invalidHeaders(self):
+    def test_invalidContentLengthHeader(self):
         """
         If a Content-Length header with a non-integer value is received, a 400
         (Bad Request) response is sent to the client and the connection is
@@ -787,6 +787,19 @@ class ParsingTests(unittest.TestCase):
         self.assertTrue(channel.transport.disconnecting)
 
 
+    def test_invalidHeaderNoColon(self):
+        """
+        If a header without colon is received a 400 (Bad Request) response
+        is sent to the client and the connection is closed.
+        """
+        requestLines = [b"GET / HTTP/1.0", b"HeaderName ", b"", b""]
+        channel = self.runRequest(b"\n".join(requestLines), http.Request, 0)
+        self.assertEqual(
+            channel.transport.value(),
+            b"HTTP/1.1 400 Bad Request\r\n\r\n")
+        self.assertTrue(channel.transport.disconnecting)
+
+
     def test_headerLimitPerRequest(self):
         """
         L{HTTPChannel} enforces the limit of C{HTTPChannel.maxHeaders} per
diff --git a/twisted/web/topfiles/8101.bugfix b/twisted/web/topfiles/8101.bugfix
new file mode 100644
index 0000000..e69de29
