Index: twisted/protocols/socks.py
===================================================================
RCS file: /cvs/Twisted/twisted/protocols/socks.py,v
retrieving revision 1.16
diff -u -r1.16 socks.py
--- twisted/protocols/socks.py	26 Dec 2002 22:05:34 -0000	1.16
+++ twisted/protocols/socks.py	21 Oct 2003 00:18:00 -0000
@@ -38,6 +38,7 @@
         junk, host, port = self.transport.getPeer()
         self.socks.makeReply(90, 0, port=port, ip=host)
         self.socks.otherConn=self
+        foo,self.socks.theirHost,self.socks.theirPort=self.transport.getPeer()
 
     def connectionLost(self, reason):
         self.socks.transport.loseConnection()
@@ -75,6 +76,8 @@
     def connectionMade(self):
         self.buf=""
         self.otherConn=None
+        if self.logging:
+            foo,self.ourHost,self.ourPort=self.transport.getPeer()
 
     def dataReceived(self,data):
         if self.otherConn:
@@ -129,16 +132,14 @@
 
     def log(self,proto,data):
         if not self.logging: return
-        foo,ourhost,ourport=self.transport.getPeer()
-        foo,theirhost,theirport=self.otherConn.transport.getPeer()
         f=open(self.logging,"a")
         f.write("%s\t%s:%d %s %s:%d\n"%(time.ctime(),
-                                        ourhost,ourport,
+                                        self.ourHost,self.ourPort,
                                         ((proto==self and '<') or '>'),
-                                        theirhost,theirport))
+                                        self.theirHost,self.theirPort))
         while data:
             p,data=data[:16],data[16:]
-            f.write(string.join(map(lambda x:'%02X'%ord(x),p),' ')+' ')
+            f.write(' '.join([x.encode('hex') for x in p]).upper() + ' ')
             f.write((16-len(p))*3*' ')
             for c in p:
                 if len(repr(c))>3: f.write('.')
