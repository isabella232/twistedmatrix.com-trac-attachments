--- F:\Grant\Programming\Python\SVN repositories\twistedsvn\trunk\twisted\test\test_application.py	Sat Jun 18 21:46:07 2005
+++ F:\Grant\Programming\Python\SVN repositories\twistedsvn\grant's trunk\twisted\test\test_application.py	Sat Jun 25 21:15:25 2005
@@ -1,3 +1,4 @@
+# -*- test-case-name: twisted.test.test_application -*-
 # Copyright (c) 2001-2004 Twisted Matrix Laboratories.
 # See LICENSE for details.
 
@@ -267,7 +268,7 @@
 
     def testLoadApplication(self):
         a = service.Application("hello")
-        baseconfig = {'file': None, 'xml': None, 'source': None, 'python':None}
+        baseconfig = {'file': None, 'xml': None, 'source': None, 'python':None, 'zipfile':None}
         for style in 'source xml pickle'.split():
             if style == 'xml' and not gotMicrodom:
                 continue
@@ -285,6 +286,33 @@
         ])
         a1 = app.getApplication(config, None)
         self.assertEqual(service.IService(a1).name, "hello")
+
+    def testLoadApplicationZip(self):
+        import os, os.path, zipfile
+        src = ["from twisted.application import service\n",
+               "application = service.Application('hello')\n"]
+
+        appname = '_tempapptest.py'
+        zipname = '_tempcompressed.zip'
+        cwd = os.getcwd()
+        appfile = os.path.join(cwd,appname)
+        myzipfile = os.path.join(cwd,zipname)
+        
+        self.assert_(not os.access(appfile, os.F_OK))
+        self.assert_(not os.access(myzipfile, os.F_OK))
+        
+        f = file(appfile, 'w')
+        f.writelines(src)
+        f.close()
+        
+        zip = zipfile.PyZipFile(myzipfile, 'w', zipfile.ZIP_DEFLATED)
+        zip.writepy(appfile)
+        zip.close()
+        
+        config = {'file': None, 'xml': None, 'source': None, 'python':'_tempapptest', 'zipfile':myzipfile}
+        a1 = app.getApplication(config, None)
+        self.assertEqual(service.IService(a1).name, "hello")
+
 
     def test_convertStyle(self):
         appl = service.Application("lala")
