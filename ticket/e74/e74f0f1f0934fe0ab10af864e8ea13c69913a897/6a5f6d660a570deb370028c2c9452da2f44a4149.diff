Index: doc/web2/howto/authentication.xhtml
===================================================================
--- doc/web2/howto/authentication.xhtml	(revision 16842)
+++ doc/web2/howto/authentication.xhtml	(working copy)
@@ -154,36 +154,39 @@
     <h3>Things HTTPAuthResource doesn't do</h3>
 
     <p><code class="API"
-    base="twisted.web2.auth.wrapper">HTTPAuthResource</code> is
-    provided largely as a lowest common denominator authentication
-    solution, as a result there are a few things it doesn't do which
-    you may want or need.</p>
+    base="twisted.web2.auth.wrapper">HTTPAuthResource</code> is provided
+    largely as a lowest common denominator authentication solution. As a
+    result, it has a few limitations:</p>
 
     <ul>
       <li>Never gives up on the client
-        <p>Which means is there is no
-      maximum number of authentication attempts after which it
-      returns a 403 FORBIDDEN response code.  It will always respond
-      to a failed authentication with a 401 UNAUTHORIZED message, and
-      the client will always be issued a new challenge to which it is
-      welcome to respond again and again.</p></li>
 
+        <p>There's no limit to the number of authentication attempts that a
+        client can make. <code class="API"
+        base="twisted.web2.auth.wrapper">HTTPAuthResource</code>will always
+        respond to a failed authentication with a 401 UNAUTHORIZED message, and
+        the client will always be issued a new challenge to which it is welcome
+        to respond again and again. A better solution, not yet implemented,
+        would be to issue a 403 FORBIDDEN response code for a particular client
+        at some point.</p></li>
+
       <li>Doesn't propagate the Avatar 
         <p>Currently nothing is done with the avatar returned by a successful
-      login, one thing it might do in the future is attach this
-      avatar to the request so that resources below it might benefit
-      from the information.</p></li>
+        login. In a future version, this avatar may be attached to the request
+        so that resources below it benefit from the information.</p></li>
       
       <li>Method limiting
-        <p>Currently there is no provided means of limiting only a
-        subset of possible HTTP methods to require HTTP Auth.  GET,
-        PUT, POST are all treated exactly the same causing a total
-        lockdown of the resource</p></li>
+        <p>Currently there is no provided means of limiting only a subset of
+        possible HTTP methods to require HTTP Authentication. The HTTP mmethods
+        GET, PUT, POST are all treated exactly the same, which permits only the
+        choices of a total lockdown of the resource or leaving it wide
+        open.</p></li>
     </ul>
 
     <p>As a result of these limitations <code class="API"
-    base="twisted.web2.auth.wrapper">HTTPAuthResource</code> is largely
-    provided as an example of working
-    with <code class="API">twisted.web2.auth</code></p>
+    base="twisted.web2.auth.wrapper">HTTPAuthResource</code> is provided more
+    as an example of how you can work with <code
+    class="API">twisted.web2.auth</code> rather than as a definitive
+    solution.</p>
   </body>
 </html>
