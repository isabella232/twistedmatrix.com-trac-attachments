Index: twisted/python/filepath.py
===================================================================
--- twisted/python/filepath.py	(revision 23332)
+++ twisted/python/filepath.py	(working copy)
@@ -401,6 +401,16 @@
             if reraise:
                 raise
 
+    def chmod(self, mode):
+        """
+        Changes the permissions on self, if possible.  Propagates errors from
+        os.chmod up.
+        
+        @param mode: int representing the new permissions desired.  (same as
+        the command line chmod)
+        """
+        os.chmod(self.path, mode)
+
     def getsize(self):
         st = self.statinfo
         if not st:
Index: twisted/test/test_paths.py
===================================================================
--- twisted/test/test_paths.py	(revision 23332)
+++ twisted/test/test_paths.py	(working copy)
@@ -5,7 +5,7 @@
 Test cases covering L{twisted.python.filepath} and L{twisted.python.zippath}.
 """
 
-import os, time, pickle, errno, zipfile
+import os, time, pickle, errno, zipfile, stat
 
 from twisted.python.win32 import WindowsError, ERROR_DIRECTORY
 from twisted.python import filepath
@@ -257,6 +257,16 @@
 
 class FilePathTestCase(AbstractFilePathTestCase):
 
+    def test_chmod(self):
+        """
+        Make sure that calling os.chmod works
+        """
+        for mode in (0555, 0777):
+            self.path.child("sub1").chmod(mode)
+            self.assertEquals(
+                stat.S_IMODE(os.stat(self.path.child("sub1").path).st_mode), 
+                mode)
+        
     def test_getAndSet(self):
         content = 'newcontent'
         self.path.child('new').setContent(content)
