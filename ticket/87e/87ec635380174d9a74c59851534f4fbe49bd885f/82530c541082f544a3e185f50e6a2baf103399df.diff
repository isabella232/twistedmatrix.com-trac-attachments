Index: twisted/web/http.py
===================================================================
--- twisted/web/http.py	(revision 35367)
+++ twisted/web/http.py	(working copy)
@@ -952,7 +952,7 @@
             else:
                 self.transport.write(data)
 
-    def addCookie(self, k, v, expires=None, domain=None, path=None, max_age=None, comment=None, secure=None):
+    def addCookie(self, k, v, expires=None, domain=None, path=None, max_age=None, comment=None, secure=None, httponly=None):
         """
         Set an outgoing HTTP cookie.
 
@@ -973,6 +973,8 @@
             cookie = cookie +"; Comment=%s" % comment
         if secure:
             cookie = cookie +"; Secure"
+        if httponly:
+            cookie = cookie +"; HttpOnly"
         self.cookies.append(cookie)
 
     def setResponseCode(self, code, message=None):
Index: twisted/web/iweb.py
===================================================================
--- twisted/web/iweb.py	(revision 35367)
+++ twisted/web/iweb.py	(working copy)
@@ -218,7 +218,7 @@
         """
 
 
-    def addCookie(k, v, expires=None, domain=None, path=None, max_age=None, comment=None, secure=None):
+    def addCookie(k, v, expires=None, domain=None, path=None, max_age=None, comment=None, secure=None, httponly=None):
         """
         Set an outgoing HTTP cookie.
 
Index: twisted/web/test/test_webclient.py
===================================================================
--- twisted/web/test/test_webclient.py	(revision 35367)
+++ twisted/web/test/test_webclient.py	(working copy)
@@ -2329,7 +2329,8 @@
             cookieJar,
             'http://example.com:1234/foo?bar',
             ['foo=1; cow=moo; Path=/foo; Comment=hello',
-             'bar=2; Comment=goodbye'])
+             'bar=2; Comment=goodbye',
+             'baz=3; HttpOnly'])
         return cookieJar, reqres
 
 
@@ -2357,7 +2358,14 @@
         self.assertEqual(cookie.comment, 'goodbye')
         self.assertIdentical(cookie.get_nonstandard_attr('cow'), None)
 
+        cookie = cookies['baz']
+        self.assertEqual(cookie.version, 0)
+        self.assertEqual(cookie.name, 'baz')
+        self.assertEqual(cookie.value, '3')
+        self.assertEqual(cookie.secure, False)
+        self.assertEqual(cookie.has_nonstandard_attr('HttpOnly'), True)
 
+
     def test_sendCookie(self):
         """
         L{cookielib.CookieJar.add_cookie_header} adds a cookie header to a fake
@@ -2372,7 +2380,7 @@
         jar.add_cookie_header(request)
         self.assertEqual(
             request.get_header('Cookie', None),
-            'foo=1; bar=2')
+            'foo=1; bar=2; baz=3')
 
 
 
