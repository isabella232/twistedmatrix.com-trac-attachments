Index: twisted/protocols/pcp.py
===================================================================
--- twisted/protocols/pcp.py	(revision 25936)
+++ twisted/protocols/pcp.py	(working copy)
@@ -154,7 +154,9 @@
             elif self.outstandingPull:
                 # I did not have any data to write in response to a pull,
                 # so I'd better pull some myself.
-                self.producer.resumeProducing()
+                # If I`m not streaming of course.
+                if not self.producerIsStreaming:
+                    self.producer.resumeProducing()
 
     def write(self, data):
         if self.paused or (not self.iAmStreaming and not self.outstandingPull):
Index: twisted/test/test_pcp.py
===================================================================
--- twisted/test/test_pcp.py	(revision 25936)
+++ twisted/test/test_pcp.py	(working copy)
@@ -360,7 +360,32 @@
         # but there should be some left over
         self.failUnlessEqual(self.proxy._buffer, ["datum"])
 
+    def testEmptyBufferStreamingProducer(self):
+        """
+        Streaming producer doesn`t have to be resumed
+        when a buffer is empty. 
+        """
+        self.parentProducer.resumed = False
+        self.proxy.outstandingPull = True
 
+        self.proxy.producerIsStreaming = True 
+        self.proxy.resumeProducing()
+
+        self.failIf(self.parentProducer.resumed)
+
+    def testEmptyBufferNotStreamingProducer(self):
+        """
+        Streaming producer has to be resumed
+        when a buffer is empty. 
+        """
+        self.parentProducer.resumed = False
+        self.proxy.outstandingPull = True
+
+        self.proxy.producerIsStreaming = False 
+        self.proxy.resumeProducing()
+
+        self.failUnless(self.parentProducer.resumed)
+
 # TODO:
 #  test that web request finishing bug (when we weren't proxying
 #    unregisterProducer but were proxying finish, web file transfers
