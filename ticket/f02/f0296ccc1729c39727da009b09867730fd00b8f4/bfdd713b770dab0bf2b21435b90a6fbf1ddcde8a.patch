Index: doc/names/examples/testdns.py
===================================================================
--- doc/names/examples/testdns.py	(revision 37471)
+++ doc/names/examples/testdns.py	(working copy)
@@ -77,7 +77,7 @@
         raise SystemExit(1)
 
     domainname = options['domainname']
-    r = client.Resolver('/etc/resolv.conf')
+    r = client.Resolver('/etc/resolv.conf', reactor=reactor)
     d = defer.gatherResults([
             r.lookupAddress(domainname).addCallback(
                 formatRecords, 'Addresses'),
Index: twisted/names/client.py
===================================================================
--- twisted/names/client.py	(revision 37471)
+++ twisted/names/client.py	(working copy)
@@ -209,7 +209,7 @@
         Return a new L{DNSDatagramProtocol} bound to a randomly selected port
         number.
         """
-        proto = dns.DNSDatagramProtocol(self)
+        proto = dns.DNSDatagramProtocol(self, reactor=self._reactor)
         while True:
             try:
                 self._reactor.listenUDP(dns.randomSource(), proto)
Index: twisted/names/test/test_examples.py
===================================================================
--- twisted/names/test/test_examples.py	(revision 37478)
+++ twisted/names/test/test_examples.py	(working copy)
@@ -11,10 +11,9 @@
 from twisted.names import client, error
 from twisted.test.testutils import StandardExecutableExampleTestBase
 from twisted.trial.unittest import TestCase
+from twisted.names.test.test_rootresolve import MemoryReactor
 
 
-
-
 class TestDnsTests(StandardExecutableExampleTestBase, TestCase):
     """
     Test the testdns.py example script.
@@ -24,7 +23,19 @@
     positionalArgCount = 1
 
 
+    def test_mainReturnsDeferred(self):
+        """
+        L{testdns.main} when called with valid arguments, returns a
+        deferred which is important for compatibility with
+        L{twisted.internet.task.react}.
+        """
 
+        # DelayedCall.debug = True
+        d = self.example.main(MemoryReactor(), 'foo.bar.example.com')
+        self.assertIsInstance(d, defer.Deferred)
+
+
+
 class GetHostByNameTests(StandardExecutableExampleTestBase, TestCase):
     """
     Test the gethostbyname.py example script.
