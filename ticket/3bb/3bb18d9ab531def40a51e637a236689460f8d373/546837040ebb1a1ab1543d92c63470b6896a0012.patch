Index: twisted/protocols/policies.py
===================================================================
--- twisted/protocols/policies.py	(revision 33642)
+++ twisted/protocols/policies.py	(working copy)
@@ -217,11 +217,14 @@
         self.transport.resumeProducing()
 
     def throttleWrites(self):
-        if hasattr(self, "producer"):
-            self.producer.pauseProducing()
+        if hasattr(self, "producer") and self.producer is not None:
+            self.transport.producerPaused = 1
+            if hasattr(self.producer, 'pauseProducing'):
+                self.producer.pauseProducing()
 
     def unthrottleWrites(self):
-        if hasattr(self, "producer"):
+        if hasattr(self, "producer") and self.producer is not None:
+            self.transport.producerPaused = 0
             self.producer.resumeProducing()
 
 
Index: twisted/internet/abstract.py
===================================================================
--- twisted/internet/abstract.py	(revision 33642)
+++ twisted/internet/abstract.py	(working copy)
@@ -252,7 +252,9 @@
             self.stopWriting()
             # If I've got a producer who is supposed to supply me with data,
             if self.producer is not None and ((not self.streamingProducer)
-                                              or self.producerPaused):
+                                              and not self.producerPaused
+                                              or self.streamingProducer
+                                              and self.producerPaused):
                 # tell them to supply some more.
                 self.producerPaused = 0
                 self.producer.resumeProducing()
