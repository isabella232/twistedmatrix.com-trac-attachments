diff --git twisted/python/filepath.py twisted/python/filepath.py
index ac65801..57824e6 100644
--- twisted/python/filepath.py
+++ twisted/python/filepath.py
@@ -1411,14 +1411,14 @@ class FilePath(AbstractFilePath):
         self.changed()
 
 
-    def makedirs(self, ignoreAlreadyExist=False):
+    def makedirs(self, ignoreExistingDirectories=False):
         """
         Create all directories not yet existing in C{path} segments, using
         L{os.makedirs}.
 
-        @param ignoreAlreadyExist: Don't raise L{OSError} if directory already
-            exists.
-        @type ignoreAlreadyExist: L{bool}
+        @param ignoreExistingDirectories: Don't raise L{OSError} if directory
+            already exists.
+        @type ignoreExistingDirectories: L{bool}
 
         @return: C{None}
         """
@@ -1427,9 +1427,8 @@ class FilePath(AbstractFilePath):
         except OSError as e:
             if not (
                 e.errno == errno.EEXIST and
-                ignoreAlreadyExist and
-                self.isdir()
-                    ):
+                ignoreExistingDirectories and
+                    self.isdir()):
                 raise
 
 
diff --git twisted/test/test_paths.py twisted/test/test_paths.py
index 2dead29..edd3a9a 100644
--- twisted/test/test_paths.py
+++ twisted/test/test_paths.py
@@ -1345,15 +1345,15 @@ class FilePathTests(AbstractFilePathTests):
         self.assertTrue(fp.isdir())
 
 
-    def test_makedirsMakesDirectoriesWithignoreAlreadyExist(self):
+    def test_makedirsMakesDirectoriesWithignoreExistingDirectories(self):
         """
-        Calling C{FilePath.makedirs} with ignoreAlreadyExist set to C{True} has
-        no effect if directory does not exist.
+        Calling C{FilePath.makedirs} with ignoreExistingDirectories set to
+        C{True} has no effect if directory does not exist.
         """
         fp = filepath.FilePath(self.mktemp())
         self.assertFalse(fp.exists())
 
-        fp.makedirs(ignoreAlreadyExist=True)
+        fp.makedirs(ignoreExistingDirectories=True)
 
         self.assertTrue(fp.exists())
         self.assertTrue(fp.isdir())
@@ -1372,49 +1372,49 @@ class FilePathTests(AbstractFilePathTests):
         self.assertEqual(exception.errno, errno.EEXIST)
 
 
-    def test_makedirsAcceptsIgnoreAlreadyExist(self):
+    def test_makedirsAcceptsIgnoreExistingDirectories(self):
         """
         C{FilePath.makedirs} succeeds when called on a directory that already
-        exists and the ignoreAlreadyExist argument is set to C{True}.
+        exists and the ignoreExistingDirectories argument is set to C{True}.
         """
         fp = filepath.FilePath(self.mktemp())
         fp.makedirs()
         self.assertTrue(fp.exists())
 
-        fp.makedirs(ignoreAlreadyExist=True)
+        fp.makedirs(ignoreExistingDirectories=True)
 
         self.assertTrue(fp.exists())
 
 
-    def test_makedirsIgnoreAlreadyExistAlreadyAFile(self):
+    def test_makedirsIgnoreExistingDirectoriesExistAlreadyAFile(self):
         """
-        When C{FilePath.makedirs} is called with ignoreAlreadyExist set to
-        C{True} it throws an C{OSError} exceptions if path is a file.
+        When C{FilePath.makedirs} is called with ignoreExistingDirectories set
+        to C{True} it throws an C{OSError} exceptions if path is a file.
         """
         fp = filepath.FilePath(self.mktemp())
         fp.create()
         self.assertTrue(fp.isfile())
 
         exception = self.assertRaises(
-            OSError, fp.makedirs, ignoreAlreadyExist=True)
+            OSError, fp.makedirs, ignoreExistingDirectories=True)
 
         self.assertEqual(exception.errno, errno.EEXIST)
 
 
-    def test_makedirsRaisesNonEexistErrorsIgnoreAlreadyExist(self):
+    def test_makedirsRaisesNonEexistErrorsIgnoreExistingDirectories(self):
         """
-        When C{FilePath.makedirs} is called with ignoreAlreadyExist set to
-        C{True} it raises an C{OSError} exception if exception errno is not
+        When C{FilePath.makedirs} is called with ignoreExistingDirectories set
+        to C{True} it raises an C{OSError} exception if exception errno is not
         EEXIST.
         """
         def faultyMakedirs(path):
-            raise OSError(errno.EACCES, b'Permission Denied')
+            raise OSError(errno.EACCES, 'Permission Denied')
 
         self.patch(os, 'makedirs', faultyMakedirs)
         fp = filepath.FilePath(self.mktemp())
 
         exception = self.assertRaises(
-            OSError, fp.makedirs, ignoreAlreadyExist=True)
+            OSError, fp.makedirs, ignoreExistingDirectories=True)
 
         self.assertEqual(exception.errno, errno.EACCES)
 
diff --git twisted/topfiles/5704.feature twisted/topfiles/5704.feature
index 640dabf..02a1add 100644
--- twisted/topfiles/5704.feature
+++ twisted/topfiles/5704.feature
@@ -1 +1 @@
-twisted.python.filepath.makedirs accepts an ignoreAlreadyExist option which ignore the OSError raised by os.makedirs if directory already exists.
+twisted.python.filepath.makedirs accepts an ignoreExistingDirectories option which ignore the OSError raised by os.makedirs if directory already exists.
