# Bazaar merge directive format 2 (Bazaar 0.90)
# revision_id: hs@ox.cx-20130120124642-pgr0f3yq3ug6dwon
# target_branch: file:///Users/hynek/Projects/Twisted/trunk/
# testament_sha1: c3f38b9e19287651fbbde79db2cca74dbbae9a11
# timestamp: 2013-01-20 13:46:53 +0100
# base_revision_id: svn-v4:bbbe8e31-12d6-0310-92fd-\
#   ac37d47ddeeb:trunk:36856
# 
# Begin patch
=== modified file 'doc/core/howto/components.xhtml'
--- doc/core/howto/components.xhtml	2011-03-14 20:18:54 +0000
+++ doc/core/howto/components.xhtml	2013-01-20 12:30:47 +0000
@@ -227,18 +227,16 @@
 <p>Let's look at how we declare that a class implements an interface:</p>
 
 <pre class="python">
-from zope.interface import implements
+from zope.interface import implementer
 
+@implementer(IAmericanSocket)
 class AmericanSocket:
-
-    implements(IAmericanSocket)
-
     def voltage(self):
         return 120
 </pre>
 
 <p>So, to declare that a class implements an interface, we simply
-call <code>zope.interface.implements</code> at the class level.</p>
+decorate it with <code>zope.interface.implementer</code>.</p>
 
 <p>Now, let's say we want to rewrite
 the <code>AdaptToAmericanSocket</code> class as a real adapter. In
@@ -246,12 +244,10 @@
 implementing <code>IAmericanSocket</code>:</p>
 
 <pre class="python">
-from zope.interface import implements
+from zope.interface import implementer
 
+@implementer(IAmericanSocket)
 class AdaptToAmericanSocket:
-
-    implements(IAmericanSocket)
-
     def __init__(self, original):
         """
         Pass the original UKSocket object as original
@@ -274,7 +270,7 @@
 done in code than to describe it:</p>
 
 <pre class="python">
-from zope.interface import Interface, implements
+from zope.interface import Interface, implementer
 from twisted.python import components
 
 class IAmericanSocket(Interface):
@@ -282,9 +278,8 @@
       """Return the voltage produced by this socket object, as an integer.
       """
     
+@implementer(IAmericanSocket)
 class AmericanSocket:
-    implements(IAmericanSocket)
-
     def voltage(self):
         return 120
 
@@ -292,10 +287,8 @@
     def voltage(self):
         return 240
 
+@implementer(IAmericanSocket)
 class AdaptToAmericanSocket:
-
-    implements(IAmericanSocket)
-
     def __init__(self, original):
         self.original = original
 
@@ -392,23 +385,25 @@
 like:</p>
 
 <pre class="python">
-from zope.interface import implements
+from zope.interface import implementer
 
+@implementer(IPBRoot)
 class Root(Referenceable):
-    implements(IPBRoot)
+    pass
 </pre>
 
 <p>Suppose you have your own class which implements your 
 <code>IMyInterface</code> interface:</p>
 
 <pre class="python">
-from zope.interface import implements, Interface
+from zope.interface import implementer, Interface
 
 class IMyInterface(Interface):
     pass
 
+@implementer(IMyInterface)
 class MyThing:
-    implements(IMyInterface)
+    pass
 </pre>
 
 <p>Now if you want to make this class inherit from <code>pb.Root</code>, 
@@ -417,13 +412,14 @@
 
 <pre class="python">
 from twisted.spread import pb
-from zope.interface import implements, Interface
+from zope.interface import implementer, Interface
 
 class IMyInterface(Interface):
     pass
 
+@implementer(IMyInterface)
 class MyThing(pb.Root):
-    implements(IMyInterface)
+    pass
 </pre>
 
 <pre class="python-interpreter">
@@ -433,17 +429,18 @@
 </pre>
 
 <p>If you want <code>MyThing</code> to inherit from <code>pb.Root</code> but <em>not</em> implement <code>IPBRoot</code> like <code>pb.Root</code> does,
-use <code>implementOnly</code>:</p>
+use <code>@implementer_only</code>:</p>
 
 <pre class="python">
 from twisted.spread import pb
-from zope.interface import implementsOnly, Interface
+from zope.interface import implementer_only, Interface
 
 class IMyInterface(Interface):
     pass
 
+@implementer_only(IMyInterface)
 class MyThing(pb.Root):
-    implementsOnly(IMyInterface)
+    pass
 </pre>
 
 <pre class="python-interpreter">

=== added file 'twisted/topfiles/6269.doc'
--- twisted/topfiles/6269.doc	1970-01-01 00:00:00 +0000
+++ twisted/topfiles/6269.doc	2013-01-20 12:46:42 +0000
@@ -0,0 +1,1 @@
+"Components: Interfaces and Adapters" howto now uses zope.interface's decorator-based API.

# Begin bundle
IyBCYXphYXIgcmV2aXNpb24gYnVuZGxlIHY0CiMKQlpoOTFBWSZTWfWnpn0AA9HfgEAQUuf/93ti
WgC/7//wYAb80fA1SFEooAAAccwCYATAACYAAmAAJRT0E0xGRNER6gNAAAA9QaHMAmAEwAAmAAJg
ADTIlNqepqNqAM0Q9QAABtEaAcwCYATAACYAAmAAFSSmCARhGQE00yNTTRqfpQBkeogKbuQDTiSR
IJ1eKSSh3e+8aNI37Tiy5HYAZ9uuMrs0ixIJJAYHZFuZ2YRIEIZxQIynSVYrpD4NIaRuCMGHI+NV
BVQE1+yAVpGDgF0Vlzq/5gSGMo4SUCQFYkaEUIoUkFRCqqyIZ6jCeZaowQSySGGZOCFg2r9I0Nc2
PngWytQmI/QuCYwkB2aZgT8uNww/KtX0zbFm8lcM9cSF3Fmn3Bg8cjhsmebpvrcnGvLdF013L83a
PBtH/oaVJ0jUM695Q3NbveCa9i87dN+Xy1wfCZ5HKctHF+q2vC1rZmniwZ2b45jzq1FqSZqnXRy4
otlMYMILsrIbsrfUePBdlDVb/enTpXY4u3MS+TTqWdia9WwhtpWVprrTmy1ssrxpfFYelej4nj6t
WP2rR99kxZNu+DGoMK3Kx5ukZoOhr60yaJzKD2jWdHPFK7jGfqinK8Ho4NDjfib9Ou5lLGLIvPdd
0JvtZjB1wZWws2cMKZUwhUarrZhSYQTUZlcpNR8ZsEYIntQNH7c7QAymIPQKTUw7s7KCoaFcRsHH
Bdlqt0ZOlnu0MXF2aZnhsxoupbXw22fxD+U4Jryl+/Lho29Cs+RnTtnNfi/RZkjcRkL5GLIqoRwZ
ymIFwXQQmA1XDyn+DAqFk3UuZRG0m+kpkM3jiiA+iZDy4UkmOV8CgxiHPf0E5a6mJm81rgUsusbA
WajzAY62wGepbwLvR7xG4y4QlAuUoi5o8U3KIY5EOoSd/NZu2Lb5bLKyNrx2dSunpW25Zul0pi7t
mcahnFyxOA1quYyrbaDs8mLrFJEaBRVIQrDPga5wqU1GaByAy27UDGPB5w2z1SGFshuTtvCBoPhW
Cjju8dFfephJSuwW4008uOxt2Ap5+rMe5QkYEyKPKqukwYsxmWSmKrjPJhpM6zgNHn69vV1P1Up5
O+cumrVavHNVd7yeq+fRXGbtI59kGybfYywVVBVVV6fjN3cQIjz6gSTiimQfc7GNwx5TVWKk5zo/
a89LDjZ32eKzd6d9z54/L5jo+H0Q93lbVv9G9wk+3U6m0udfX7NtbEdaj3mNKfV29nPO+q1cXHiO
7pc3M/wdI1brC1z0ST3T6bdfRnRjr2d88ztCRa5bmGZnUQO1e8P5/0cjGwew+hY6GvBMJ+8Fmrrs
3Dl5u65sWHPDgOvs0xoTfZ89Cen02sLeDYOs0c2Ix7tbF8jjylNjTwTcfHrpVpPX5S0VWhF6sPf4
vfzF05q545dLP28Bn/T6VXI8PHfaqtVaWiT2zDtxnU459rf3sBmcW/jZnaXwi+zDCzr0fdmOmQ5n
CD8JpLMydETbTqpI23ltrdxv09zE/BpGdMzv69fUnZ2cqcl7Qhazi7hywO6zoPL1d6zl2Wnkukpb
NDjC+HsnCF2ZLu2dgrKmXrP0h7PZWBSyrbH4m1E0zi5JtaH5Sl7kdYsbT7SU9rWrYsPKTXej36GC
5xHqPvnr5LnpzcVTgKOEmEuGEmCw/R4RdTukK79jwZNU9ZO2MGmQ/Y3tBsc5kxXl8hmKkpVHAqf2
UvKcVpfJmfhUW+8LvF0i+Y7Ij8TKFFVZLUTFZPHDYfBPc7ThpqS0fx3mhVJ+63aeEx/9V6KakZ02
RiMybPqru+B6QeUeD5t/ipSfwXGdGBU8Yd6XJJs782Tt8U4NsO8uqGl/RLC0n2Umi9Gd6Okxkjtx
jr5SdF1NDDCSlYCk3mb+adFXnRBV7Mx/O1e23VN6tbxFL3xqVXvDI0GGJM2uTNcbe5S9Z9jazWWz
RNCkjdwPZ4w052jU1nCeZ++DZJrkwFGNDO43b/onNiMt2d2bsORULk6hibtrPlqS485JUFPtMk1u
pRX5n5dKbYa+Eya4f38F3JFOFCQ9aemfQA==
