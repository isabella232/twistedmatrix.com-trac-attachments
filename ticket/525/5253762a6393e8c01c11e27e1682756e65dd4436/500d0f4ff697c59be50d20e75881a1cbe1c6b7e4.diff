Index: twisted/python/deprecate.py
===================================================================
--- twisted/python/deprecate.py	(révision 22408)
+++ twisted/python/deprecate.py	(copie de travail)
@@ -16,24 +16,7 @@
 from twisted.python.util import mergeFunctionMetadata
 
 
-def getWarningMethod():
-    """
-    Return the warning method currently used to record deprecation warnings.
-    """
-    return warn
 
-
-def setWarningMethod(newMethod):
-    """
-    Set the warning method to use to record deprecation warnings.
-
-    The callable should take message, category and stacklevel. The return
-    value is ignored.
-    """
-    global warn
-    warn = newMethod
-
-
 def getVersionString(version):
     """
     Get a friendly string for the given version object.
Index: twisted/trial/unittest.py
===================================================================
--- twisted/trial/unittest.py	(révision 22408)
+++ twisted/trial/unittest.py	(copie de travail)
@@ -833,19 +833,19 @@
         """
         Call C{f} and capture all deprecation warnings.
         """
-        warnings = []
-        def accumulateDeprecations(message, category, stacklevel):
+        warningsOutput = []
+        def accumulateDeprecations(message, category, filename, lineno,
+                module=None, registry=None, module_globals=None):
             self.assertEqual(DeprecationWarning, category)
-            self.assertEqual(stacklevel, 2)
-            warnings.append(message)
+            warningsOutput.append(message)
 
-        originalMethod = deprecate.getWarningMethod()
-        deprecate.setWarningMethod(accumulateDeprecations)
+        origExplicit = warnings.warn_explicit
         try:
+            warnings.warn_explicit = accumulateDeprecations
             result = f(*args, **kwargs)
         finally:
-            deprecate.setWarningMethod(originalMethod)
-        return (warnings, result)
+            warnings.warn_explicit = origExplicit
+        return (warningsOutput, result)
 
 
     def callDeprecated(self, version, f, *args, **kwargs):
