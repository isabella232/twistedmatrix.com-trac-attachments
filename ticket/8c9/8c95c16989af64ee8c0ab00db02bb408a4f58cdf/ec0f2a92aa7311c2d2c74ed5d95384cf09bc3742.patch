--- _dumbwin32proc.py	2 Feb 2007 15:04:24 -0000	1.1
+++ _dumbwin32proc.py	2 Feb 2007 15:44:11 -0000
@@ -16,7 +16,7 @@
 import win32process
 import win32security
 
-import pywintypes
+import pywintypes, winerror
 
 # security attributes for pipes
 PIPE_ATTRS_INHERITABLE = win32security.SECURITY_ATTRIBUTES()
@@ -52,6 +52,8 @@
             err = error.ProcessTerminated(exitCode)
         self.deactivate()
         self.proc.protocol.processEnded(failure.Failure(err))
+        win32api.CloseHandle(self.proc.hProcess)
+        self.proc.hProcess = None
         return 0
 
 
@@ -243,8 +238,14 @@
 
 
     def signalProcess(self, signalID):
-        if signalID in ("INT", "TERM", "KILL"):
-            win32process.TerminateProcess(self.hProcess, 1)
+        if self.hProcess:
+            if signalID in ("INT", "TERM", "KILL"):
+                win32process.TerminateProcess(self.hProcess, 1)
+        else:
+            # This is the error that would be raised for a process
+            # that already exited if we hadn't already closed the
+            # handle.
+            raise pywintypes.error(winerror.ERROR_ACCESS_DENIED)
 
     def write(self, data):
         """Write data to the process' stdin."""
