commit 9d795fcb4f77eb05f57d4fe9f61924f25d19a130
Author: Wolfgang Rohdewald <wolfgang@rohdewald.de>
Date:   Thu Sep 4 15:48:03 2014 +0200

    Ticket 7628: NEWS with new change type "port"

diff --git twisted/python/_release.py twisted/python/_release.py
index 8d80d45..af4a071 100644
--- twisted/python/_release.py
+++ twisted/python/_release.py
@@ -359,7 +359,7 @@ class NewsBuilder(object):
     """
     Generate the new section of a NEWS file.
 
-    The C{_FEATURE}, C{_BUGFIX}, C{_DOC}, C{_REMOVAL}, and C{_MISC}
+    The C{_FEATURE}, C{_BUGFIX}, C{_DOC}, C{_REMOVAL}, C{_PORT} and C{_MISC}
     attributes of this class are symbolic names for the news entry types
     which are supported.  Conveniently, they each also take on the value of
     the file name extension which indicates a news entry of that type.
@@ -380,6 +380,7 @@ class NewsBuilder(object):
     _BUGFIX = ".bugfix"
     _DOC = ".doc"
     _REMOVAL = ".removal"
+    _PORT = ".port"
     _MISC = ".misc"
 
     _headings = {
@@ -387,6 +388,7 @@ class NewsBuilder(object):
         _BUGFIX: "Bugfixes",
         _DOC: "Improved Documentation",
         _REMOVAL: "Deprecations and Removals",
+        _PORT: "Porting efforts to new environments like Python 3",
         _MISC: "Other"}
 
     _NO_CHANGES = "No significant changes have been made for this release.\n"
@@ -412,7 +414,8 @@ class NewsBuilder(object):
 
         @param ticketType: The type of news entries to search for.  One of
             L{NewsBuilder._FEATURE}, L{NewsBuilder._BUGFIX},
-            L{NewsBuilder._REMOVAL}, or L{NewsBuilder._MISC}.
+            L{NewsBuilder._REMOVAL}, L{NewsBuilder._PORT}
+            or L{NewsBuilder._MISC}.
 
         @return: A C{list} of two-tuples.  The first element is the ticket
             number as an C{int}.  The second element of each tuple is the
@@ -528,7 +531,8 @@ class NewsBuilder(object):
         @raise NotWorkingDirectory: If the C{path} is not an SVN checkout.
         """
         changes = []
-        for part in (self._FEATURE, self._BUGFIX, self._DOC, self._REMOVAL):
+        for part in (self._FEATURE, self._BUGFIX, self._DOC, self._REMOVAL,
+                     self._PORT):
             tickets = self._findChanges(path, part)
             if tickets:
                 changes.append((part, tickets))
diff --git twisted/python/test/test_release.py twisted/python/test/test_release.py
index 9a8dcf3..eb23261 100644
--- twisted/python/test/test_release.py
+++ twisted/python/test/test_release.py
@@ -793,7 +793,21 @@ class NewsBuilderTests(TestCase, StructureAssertingMixin):
                 '30.misc': '',
                 '35.misc': '',
                 '40.doc': 'foo.bar.Baz.quux',
-                '41.doc': 'writing Foo servers'})
+                '41.doc': 'writing Foo servers',
+                '50.port': 'Replaced implements() by @implementer'})
+
+
+    def test_allHeadings(self):
+        """
+        Make sure that all types of change are covered with those tests
+        """
+        self.builder.build(
+            self.project, self.project.child('NEWS'),
+            "Super Awesometastic 32.16")
+        results = self.project.child('NEWS').getContent()
+        for key, value in NewsBuilder._headings.items():
+            self.assertIn(value, results,
+                "There is no test covering %s." % (value))
 
 
     def svnCommit(self, project=None):
@@ -895,6 +909,19 @@ class NewsBuilderTests(TestCase, StructureAssertingMixin):
              (35, '')])
 
 
+    def test_findPort(self):
+        """
+        When called with L{NewsBuilder._PORT}, L{NewsBuilder._findChanges}
+        returns a list of porting ticket numbers and descriptions
+        as a list of two-tuples.
+        """
+        port = self.builder._findChanges(
+            self.project, self.builder._PORT)
+        self.assertEqual(
+            port,
+            [(50, 'Replaced implements() by @implementer')])
+
+
     def test_writeHeader(self):
         """
         L{NewsBuilder._writeHeader} accepts a file-like object opened for
@@ -994,6 +1021,10 @@ class NewsBuilderTests(TestCase, StructureAssertingMixin):
             '-------------------------\n'
             ' - Stupid stuff was deprecated. (#25)\n'
             '\n'
+            'Porting efforts to new environments like Python 3\n'
+            '-------------------------------------------------\n'
+            ' - Replaced implements() by @implementer (#50)\n'
+            '\n'
             'Other\n'
             '-----\n'
             ' - #30, #35\n'
@@ -1070,6 +1101,10 @@ class NewsBuilderTests(TestCase, StructureAssertingMixin):
             '-------------------------\n'
             ' - Stupid stuff was deprecated. (#25)\n'
             '\n'
+            'Porting efforts to new environments like Python 3\n'
+            '-------------------------------------------------\n'
+            ' - Replaced implements() by @implementer (#50)\n'
+            '\n'
             'Other\n'
             '-----\n'
             ' - #30, #35\n'
@@ -1083,7 +1118,7 @@ class NewsBuilderTests(TestCase, StructureAssertingMixin):
         section for that type is written by L{NewsBuilder.build}.
         """
         for ticket in self.project.children():
-            if ticket.splitext()[1] in ('.feature', '.misc', '.doc'):
+            if ticket.splitext()[1] in ('.feature', '.misc', '.doc', 'port'):
                 ticket.remove()
 
         self.builder.build(
@@ -1102,6 +1137,10 @@ class NewsBuilderTests(TestCase, StructureAssertingMixin):
             'Deprecations and Removals\n'
             '-------------------------\n'
             ' - Stupid stuff was deprecated. (#25)\n'
+            '\n'
+            'Porting efforts to new environments like Python 3\n'
+            '-------------------------------------------------\n'
+            ' - Replaced implements() by @implementer (#50)\n'
             '\n\n'
             'Here is stuff which was present previously.\n')
 
@@ -1143,6 +1182,10 @@ class NewsBuilderTests(TestCase, StructureAssertingMixin):
             '-------------------------\n'
             ' - Stupid stuff was deprecated. (#25)\n'
             '\n'
+            'Porting efforts to new environments like Python 3\n'
+            '-------------------------------------------------\n'
+            ' - Replaced implements() by @implementer (#50)\n'
+            '\n'
             'Other\n'
             '-----\n'
             ' - #30, #35\n'
diff --git twisted/python/topfiles/7628.feature twisted/python/topfiles/7628.feature
new file mode 100644
index 0000000..83cfb6d
--- /dev/null
+++ twisted/python/topfiles/7628.feature
@@ -0,0 +1 @@
+twisted.python._release The NEWS builder gets a new change type 'port' for porting efforts
