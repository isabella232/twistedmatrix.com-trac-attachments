Index: twisted/words/test/test_irc.py
===================================================================
--- twisted/words/test/test_irc.py	(revision 39533)
+++ twisted/words/test/test_irc.py	(working copy)
@@ -1667,6 +1667,28 @@
             "me:  ")
 
 
+    def test_sendMessageWithPrefix(self):
+        """
+        Passing a command and parameters with a specified prefix to
+        L{IRC.sendMessage} results in a proper query string including the
+        specified line prefix.
+        """
+        self.p.sendMessage('CMD', 'param1', 'param2', prefix='irc.example.com')
+        self.check(':irc.example.com CMD param1 param2\r\n')
+
+
+    def test_sendMessageWithTags(self):
+        """
+        Passing a command and parameters with a specified prefix and tags
+        to L{IRC.sendMessage} results in a proper query string including
+        the specified line prefix and appropriate tags syntax.
+        """
+        self.p.sendMessage('CMD', 'param1', 'param2', prefix='irc.example.com',
+            tags=[('aaa', 'bbb'), ('ccc', ), ('example.com/ddd', 'eee')])
+        self.check('@aaa=bbb;ccc;example.com/ddd=eee :irc.example.com '
+            'CMD param1 param2\r\n')
+
+
     def testPrivmsg(self):
         self.p.privmsg("this-is-sender", "this-is-recip", "this is message")
         self.check(":this-is-sender PRIVMSG this-is-recip :this is message\r\n")
Index: twisted/words/protocols/irc.py
===================================================================
--- twisted/words/protocols/irc.py	(revision 39533)
+++ twisted/words/protocols/irc.py	(working copy)
@@ -265,6 +265,10 @@
         First argument is the command, all subsequent arguments are parameters
         to that command.  If a prefix is desired, it may be specified with the
         keyword argument 'prefix'.
+        
+        Message tags may be specified using the keyword argument 'tags', passing
+        a list of 1- or 2-tuples.  One-tuples should be passed for tags whose
+        presence has a meaning (i.e. those that do not show a value).
         """
         if not command:
             raise ValueError("IRC message requires a command.")
@@ -278,6 +282,9 @@
         line = ' '.join([command] + list(parameter_list))
         if 'prefix' in prefix:
             line = ":%s %s" % (prefix['prefix'], line)
+        if 'tags' in prefix:
+            line = "@%s %s" % (";".join(
+               ["=".join(tag) for tag in prefix['tags']]), line)
         self.sendLine(line)
 
         if len(parameter_list) > 15:
