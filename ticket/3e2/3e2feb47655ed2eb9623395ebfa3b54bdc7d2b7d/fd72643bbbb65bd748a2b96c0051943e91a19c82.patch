Index: trial-test-discovery/twisted/python/reflect.py
===================================================================
--- trial-test-discovery/twisted/python/reflect.py   (revision 27382)
+++ trial-test-discovery/twisted/python/reflect.py   (working copy)
@@ -616,9 +616,10 @@
         addMethodNamesToDict(base, dict, prefix, baseClass)
 
     if baseClass is None or baseClass in classObj.__bases__:
-        for name, method in classObj.__dict__.items():
+        for name in classObj.__dict__:
+            method = getattr(classObj, name)
             optName = name[len(prefix):]
-            if ((type(method) is types.FunctionType)
+            if (hasattr(method, "__call__") and hasattr(method, "im_class")
                 and (name[:len(prefix)] == prefix)
                 and (len(optName))):
                 dict[optName] = 1
Index: trial-test-discovery/twisted/test/test_reflect.py
===================================================================
--- trial-test-discovery/twisted/test/test_reflect.py   (revision 27382)
+++ trial-test-discovery//twisted/test/test_reflect.py  (working copy)
@@ -824,8 +824,8 @@
     Test for L{reflect.addMethodNamesToDict}.
     """
     non_base = object()
-    groups = ['def', 'fdecor', 'lambda', 'class1', 'class2', 'class3']
-    fail_groups = ['methdesc', 'decor', 'desc', 'builtin']
+    groups = ['def', 'fdecor', 'lambda', 'class1', 'class2', 'class3', 'methdesc']
+    fail_groups = ['decor', 'desc', 'builtin']
     prefix = "prefix_"
     postfix = "_method"
 
