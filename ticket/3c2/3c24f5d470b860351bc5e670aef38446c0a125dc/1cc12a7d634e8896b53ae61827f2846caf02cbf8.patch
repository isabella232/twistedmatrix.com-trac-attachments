diff --git a/twisted/internet/task.py b/twisted/internet/task.py
index e4c0490..c12f7d5 100644
--- a/twisted/internet/task.py
+++ b/twisted/internet/task.py
@@ -798,7 +798,7 @@ def deferLater(clock, delay, callable, *args, **kw):
 
 
 
-def react(main, argv, _reactor=None):
+def react(main, argv=(), _reactor=None):
     """
     Call C{main} and run the reactor until the L{Deferred} it returns fires.
 
@@ -817,7 +817,8 @@ def react(main, argv, _reactor=None):
     @param main: A callable which returns a L{Deferred}.  It should take as
         many arguments as there are elements in the list C{argv}.
 
-    @param argv: A list of arguments to pass to C{main}.
+    @param argv: A list of arguments to pass to C{main}. If unprovided the
+        default will be an empty tuple.
 
     @param _reactor: An implementation detail to allow easier unit testing.  Do
         not supply this parameter.
diff --git a/twisted/test/test_task.py b/twisted/test/test_task.py
index 9de3c3c..e28ce92 100644
--- a/twisted/test/test_task.py
+++ b/twisted/test/test_task.py
@@ -839,7 +839,7 @@ class ReactTests(unittest.SynchronousTestCase):
             return finished
         r = _FakeReactor()
         exitError = self.assertRaises(
-            SystemExit, task.react, main, [], _reactor=r)
+            SystemExit, task.react, main, _reactor=r)
         self.assertEqual(0, exitError.code)
         self.assertEqual(timePassed, [True])
         self.assertEqual(r.seconds(), 2)
@@ -855,7 +855,7 @@ class ReactTests(unittest.SynchronousTestCase):
             return defer.succeed(None)
         r = _FakeReactor()
         exitError = self.assertRaises(
-            SystemExit, task.react, main, [], _reactor=r)
+            SystemExit, task.react, main, _reactor=r)
         self.assertEqual(0, exitError.code)
         self.assertEqual(r.seconds(), 0)
 
@@ -875,7 +875,7 @@ class ReactTests(unittest.SynchronousTestCase):
             return finished
         r = _FakeReactor()
         exitError = self.assertRaises(
-            SystemExit, task.react, main, [], _reactor=r)
+            SystemExit, task.react, main, _reactor=r)
 
         self.assertEqual(1, exitError.code)
 
@@ -896,7 +896,7 @@ class ReactTests(unittest.SynchronousTestCase):
             return defer.fail(ExpectedException())
         r = _FakeReactor()
         exitError = self.assertRaises(
-            SystemExit, task.react, main, [], _reactor=r)
+            SystemExit, task.react, main, _reactor=r)
         self.assertEqual(1, exitError.code)
         self.assertEqual(r.seconds(), 0)
         errors = self.flushLoggedErrors(ExpectedException)
@@ -917,7 +917,7 @@ class ReactTests(unittest.SynchronousTestCase):
             return finished
         r = _FakeReactor()
         exitError = self.assertRaises(
-            SystemExit, task.react, main, [], _reactor=r)
+            SystemExit, task.react, main, _reactor=r)
         self.assertEqual(r.seconds(), 1)
 
         self.assertEqual(0, exitError.code)
@@ -940,7 +940,7 @@ class ReactTests(unittest.SynchronousTestCase):
             return finished
         r = _FakeReactor()
         exitError = self.assertRaises(
-            SystemExit, task.react, main, [], _reactor=r)
+            SystemExit, task.react, main, _reactor=r)
 
         self.assertEqual(1, exitError.code)
 
diff --git a/twisted/topfiles/6389.misc b/twisted/topfiles/6389.misc
new file mode 100644
index 0000000..e69de29
