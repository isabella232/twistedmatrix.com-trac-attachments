=== modified file 'twisted/conch/insults/insults.py'
--- old/twisted/conch/insults/insults.py	2011-02-14 04:45:15 +0000
+++ new/twisted/conch/insults/insults.py	2012-03-14 07:42:25 +0000
@@ -51,7 +51,6 @@
     implements(ITerminalProtocol)
 
     def makeConnection(self, terminal):
-        # assert ITerminalTransport.providedBy(transport), "TerminalProtocol.makeConnection must be passed an ITerminalTransport implementor"
         self.terminal = terminal
         self.connectionMade()
 
@@ -401,7 +400,6 @@
         @param a: Any positional arguments to pass to protocolFactory.
         @param kw: Any keyword arguments to pass to protocolFactory.
         """
-        # assert protocolFactory is None or ITerminalProtocol.implementedBy(protocolFactory), "ServerProtocol.__init__ must be passed an ITerminalProtocol implementor"
         if protocolFactory is not None:
             self.protocolFactory = protocolFactory
         self.protocolArgs = a
@@ -571,22 +569,18 @@
 
     # ITerminalTransport
     def cursorUp(self, n=1):
-        assert n >= 1
         self.cursorPos.y = max(self.cursorPos.y - n, 0)
         self.write('\x1b[%dA' % (n,))
 
     def cursorDown(self, n=1):
-        assert n >= 1
         self.cursorPos.y = min(self.cursorPos.y + n, self.termSize.y - 1)
         self.write('\x1b[%dB' % (n,))
 
     def cursorForward(self, n=1):
-        assert n >= 1
         self.cursorPos.x = min(self.cursorPos.x + n, self.termSize.x - 1)
         self.write('\x1b[%dC' % (n,))
 
     def cursorBackward(self, n=1):
-        assert n >= 1
         self.cursorPos.x = max(self.cursorPos.x - n, 0)
         self.write('\x1b[%dD' % (n,))
 
@@ -828,7 +822,6 @@
         @param a: Any positional arguments to pass to terminalFactory.
         @param kw: Any keyword arguments to pass to terminalFactory.
         """
-        # assert terminalFactory is None or ITerminalTransport.implementedBy(terminalFactory), "ClientProtocol.__init__ must be passed an ITerminalTransport implementor"
         if terminalFactory is not None:
             self.terminalFactory = terminalFactory
         self.terminalArgs = a

=== modified file 'twisted/conch/insults/text.py'
--- old/twisted/conch/insults/text.py	2011-02-14 04:45:15 +0000
+++ new/twisted/conch/insults/text.py	2012-03-14 07:42:48 +0000
@@ -59,7 +59,6 @@
         self.children = []
 
     def __getitem__(self, item):
-        assert isinstance(item, (list, tuple, _Attribute, str))
         if isinstance(item, (list, tuple)):
             self.children.extend(item)
         else:

=== modified file 'twisted/conch/insults/window.py'
--- old/twisted/conch/insults/window.py	2011-05-15 13:25:06 +0000
+++ new/twisted/conch/insults/window.py	2012-03-14 07:46:41 +0000
@@ -123,7 +123,6 @@
         self.children = []
 
     def addChild(self, child):
-        assert child.parent is None
         child.parent = self
         self.children.append(child)
         if self.focusedChild is None and self.focused:
@@ -136,7 +135,6 @@
         self.repaint()
 
     def remChild(self, child):
-        assert child.parent is self
         child.parent = None
         self.children.remove(child)
         self.repaint()

=== modified file 'twisted/conch/recvline.py'
--- old/twisted/conch/recvline.py	2011-09-02 12:02:18 +0000
+++ new/twisted/conch/recvline.py	2012-03-14 07:51:18 +0000
@@ -64,7 +64,6 @@
     BACKSPACE = '\x7f'
 
     def __init__(self, *transports):
-        assert transports, "Cannot construct a TransportSequence with no transports"
         self.transports = transports
 
     for method in insults.ITerminalTransport:
@@ -257,7 +256,6 @@
         self.lineReceived(line)
 
     def handle_INSERT(self):
-        assert self.mode in ('typeover', 'insert')
         if self.mode == 'typeover':
             self.setInsertMode()
         else:

=== modified file 'twisted/conch/ssh/agent.py'
--- old/twisted/conch/ssh/agent.py	2011-02-14 04:45:15 +0000
+++ new/twisted/conch/ssh/agent.py	2012-03-14 07:54:00 +0000
@@ -176,7 +176,6 @@
         """
         Return all of the identities that have been added to the server
         """
-        assert data == ''
         numKeys = len(self.factory.keys)
         resp = []
 
@@ -197,7 +196,6 @@
         if blob not in self.factory.keys:
             return self.sendResponse(AGENT_FAILURE, '')
         signData, data = getNS(data)
-        assert data == '\000\000\000\000'
         self.sendResponse(AGENT_SIGN_RESPONSE, NS(self.factory.keys[blob][0].sign(signData)))
 
 
@@ -239,7 +237,6 @@
         """
         Remove all keys from the agent's collection of identities.
         """
-        assert data == ''
         self.factory.keys = {}
         self.sendResponse(AGENT_SUCCESS, '')
 

=== modified file 'twisted/conch/ssh/common.py'
--- old/twisted/conch/ssh/common.py	2011-02-14 04:45:15 +0000
+++ new/twisted/conch/ssh/common.py	2012-03-14 07:55:48 +0000
@@ -40,7 +40,6 @@
 
 def MP(number):
     if number==0: return '\000'*4
-    assert number>0
     bn = Util.number.long_to_bytes(number)
     if ord(bn[0])&128:
         bn = '\000' + bn

=== modified file 'twisted/conch/ssh/filetransfer.py'
--- old/twisted/conch/ssh/filetransfer.py	2011-09-09 16:48:29 +0000
+++ new/twisted/conch/ssh/filetransfer.py	2012-03-14 07:56:43 +0000
@@ -146,7 +146,6 @@
         flags ,= struct.unpack('!L', data[:4])
         data = data[4:]
         attrs, data = self._parseAttributes(data)
-        assert data == '', 'still have data in OPEN: %s' % repr(data)
         d = defer.maybeDeferred(self.client.openFile, filename, flags, attrs)
         d.addCallback(self._cbOpenFile, requestId)
         d.addErrback(self._ebStatus, requestId, "open failed")
@@ -162,7 +161,6 @@
         requestId = data[:4]
         data = data[4:]
         handle, data = getNS(data)
-        assert data == '', 'still have data in CLOSE: %s' % repr(data)
         if handle in self.openFiles:
             fileObj = self.openFiles[handle]
             d = defer.maybeDeferred(fileObj.close)
@@ -188,7 +186,6 @@
         data = data[4:]
         handle, data = getNS(data)
         (offset, length), data = struct.unpack('!QL', data[:12]), data[12:]
-        assert data == '', 'still have data in READ: %s' % repr(data)
         if handle not in self.openFiles:
             self._ebRead(failure.Failure(KeyError()), requestId)
         else:
@@ -209,7 +206,6 @@
         offset, = struct.unpack('!Q', data[:8])
         data = data[8:]
         writeData, data = getNS(data)
-        assert data == '', 'still have data in WRITE: %s' % repr(data)
         if handle not in self.openFiles:
             self._ebWrite(failure.Failure(KeyError()), requestId)
         else:
@@ -222,7 +218,6 @@
         requestId = data[:4]
         data = data[4:]
         filename, data = getNS(data)
-        assert data == '', 'still have data in REMOVE: %s' % repr(data)
         d = defer.maybeDeferred(self.client.removeFile, filename)
         d.addCallback(self._cbStatus, requestId, "remove succeeded")
         d.addErrback(self._ebStatus, requestId, "remove failed")
@@ -232,7 +227,6 @@
         data = data[4:]
         oldPath, data = getNS(data)
         newPath, data = getNS(data)
-        assert data == '', 'still have data in RENAME: %s' % repr(data)
         d = defer.maybeDeferred(self.client.renameFile, oldPath, newPath)
         d.addCallback(self._cbStatus, requestId, "rename succeeded")
         d.addErrback(self._ebStatus, requestId, "rename failed")
@@ -242,7 +236,6 @@
         data = data[4:]
         path, data = getNS(data)
         attrs, data = self._parseAttributes(data)
-        assert data == '', 'still have data in MKDIR: %s' % repr(data)
         d = defer.maybeDeferred(self.client.makeDirectory, path, attrs)
         d.addCallback(self._cbStatus, requestId, "mkdir succeeded")
         d.addErrback(self._ebStatus, requestId, "mkdir failed")
@@ -251,7 +244,6 @@
         requestId = data[:4]
         data = data[4:]
         path, data = getNS(data)
-        assert data == '', 'still have data in RMDIR: %s' % repr(data)
         d = defer.maybeDeferred(self.client.removeDirectory, path)
         d.addCallback(self._cbStatus, requestId, "rmdir succeeded")
         d.addErrback(self._ebStatus, requestId, "rmdir failed")
@@ -260,7 +252,6 @@
         requestId = data[:4]
         data = data[4:]
         path, data = getNS(data)
-        assert data == '', 'still have data in OPENDIR: %s' % repr(data)
         d = defer.maybeDeferred(self.client.openDirectory, path)
         d.addCallback(self._cbOpenDirectory, requestId)
         d.addErrback(self._ebStatus, requestId, "opendir failed")
@@ -276,7 +267,6 @@
         requestId = data[:4]
         data = data[4:]
         handle, data = getNS(data)
-        assert data == '', 'still have data in READDIR: %s' % repr(data)
         if handle not in self.openDirs:
             self._ebStatus(failure.Failure(KeyError()), requestId)
         else:
@@ -317,7 +307,6 @@
         requestId = data[:4]
         data = data[4:]
         path, data = getNS(data)
-        assert data == '', 'still have data in STAT/LSTAT: %s' % repr(data)
         d = defer.maybeDeferred(self.client.getAttrs, path, followLinks)
         d.addCallback(self._cbStat, requestId)
         d.addErrback(self._ebStatus, requestId, 'stat/lstat failed')
@@ -329,7 +318,6 @@
         requestId = data[:4]
         data = data[4:]
         handle, data = getNS(data)
-        assert data == '', 'still have data in FSTAT: %s' % repr(data)
         if handle not in self.openFiles:
             self._ebStatus(failure.Failure(KeyError('%s not in self.openFiles'
                                         % handle)), requestId)
@@ -359,7 +347,6 @@
         data = data[4:]
         handle, data = getNS(data)
         attrs, data = self._parseAttributes(data)
-        assert data == '', 'still have data in FSETSTAT: %s' % repr(data)
         if handle not in self.openFiles:
             self._ebStatus(failure.Failure(KeyError()), requestId)
         else:
@@ -372,7 +359,6 @@
         requestId = data[:4]
         data = data[4:]
         path, data = getNS(data)
-        assert data == '', 'still have data in READLINK: %s' % repr(data)
         d = defer.maybeDeferred(self.client.readLink, path)
         d.addCallback(self._cbReadLink, requestId)
         d.addErrback(self._ebStatus, requestId, 'readlink failed')
@@ -393,7 +379,6 @@
         requestId = data[:4]
         data = data[4:]
         path, data = getNS(data)
-        assert data == '', 'still have data in REALPATH: %s' % repr(data)
         d = defer.maybeDeferred(self.client.realPath, path)
         d.addCallback(self._cbReadLink, requestId) # same return format
         d.addErrback(self._ebStatus, requestId, 'realpath failed')

=== modified file 'twisted/conch/ssh/keys.py'
--- old/twisted/conch/ssh/keys.py	2011-11-01 21:37:17 +0000
+++ new/twisted/conch/ssh/keys.py	2012-03-14 08:00:36 +0000
@@ -253,7 +253,6 @@
         @raises BadKeyError: if the key type is unknown
         """
         sexp = sexpy.parse(base64.decodestring(data[1:-1]))
-        assert sexp[0] == 'public-key'
         kd = {}
         for name, data in sexp[1][1:]:
             kd[name] = common.getMP(common.NS(data))[0]
@@ -279,16 +278,13 @@
         @raises BadKeyError: if the key type is unknown
         """
         sexp = sexpy.parse(data)
-        assert sexp[0] == 'private-key'
         kd = {}
         for name, data in sexp[1][1:]:
             kd[name] = common.getMP(common.NS(data))[0]
         if sexp[1][0] == 'dsa':
-            assert len(kd) == 5, len(kd)
             return Class(DSA.construct((kd['y'], kd['g'], kd['p'],
                 kd['q'], kd['x'])))
         elif sexp[1][0] == 'rsa-pkcs1':
-            assert len(kd) == 8, len(kd)
             if kd['p'] > kd['q']: # make p smaller than q
                 kd['p'], kd['q'] = kd['q'], kd['p']
             return Class(RSA.construct((kd['n'], kd['e'], kd['d'],

=== modified file 'twisted/conch/ssh/sexpy.py'
--- old/twisted/conch/ssh/sexpy.py	2011-02-14 04:45:15 +0000
+++ new/twisted/conch/ssh/sexpy.py	2012-03-14 08:01:02 +0000
@@ -18,17 +18,14 @@
             aList = expr.pop()
             s=s[1:]
             if not expr:
-                assert not s
                 return aList
             continue
         i = 0
         while s[i].isdigit(): i+=1
-        assert i
         length = int(s[:i])
         data = s[i+1:i+1+length]
         expr[-1].append(data)
         s=s[i+1+length:]
-    assert 0, "this should not happen"
 
 def pack(sexp):
     s = ""

=== modified file 'twisted/conch/telnet.py'
--- old/twisted/conch/telnet.py	2011-10-01 07:11:41 +0000
+++ new/twisted/conch/telnet.py	2012-03-14 08:22:17 +0000
@@ -645,7 +645,7 @@
         d = state.him.onResult
         state.him.onResult = None
         d.callback(True)
-        assert self.enableRemote(option), "enableRemote must return True in this context (for option %r)" % (option,)
+        self.enableRemote(option)
 
     def will_yes_false(self, state, option):
         # He is unilaterally offering to enable an already-enabled option.
@@ -655,7 +655,7 @@
     def will_yes_true(self, state, option):
         # This is a bogus state.  It is here for completeness.  It will
         # never be entered.
-        assert False, "will_yes_true can never be entered, but was called with %r, %r" % (state, option)
+        pass
 
     willMap = {('no', False): will_no_false,   ('no', True): will_no_true,
                ('yes', False): will_yes_false, ('yes', True): will_yes_true}
@@ -724,7 +724,7 @@
     def do_yes_true(self, state, option):
         # This is a bogus state.  It is here for completeness.  It will never be
         # entered.
-        assert False, "do_yes_true can never be entered, but was called with %r, %r" % (state, option)
+        pass
 
     doMap = {('no', False): do_no_false,   ('no', True): do_no_true,
              ('yes', False): do_yes_false, ('yes', True): do_yes_true}
@@ -858,7 +858,6 @@
     def connectionMade(self):
         if self.protocolFactory is not None:
             self.protocol = self.protocolFactory(*self.protocolArgs, **self.protocolKwArgs)
-            assert ITelnetProtocol.providedBy(self.protocol)
             try:
                 factory = self.factory
             except AttributeError:
@@ -1058,7 +1057,6 @@
 
     def _cbLogin(self, ial):
         interface, protocol, logout = ial
-        assert interface is ITelnetProtocol
         self.protocol = protocol
         self.logout = logout
         self.state = 'Command'

