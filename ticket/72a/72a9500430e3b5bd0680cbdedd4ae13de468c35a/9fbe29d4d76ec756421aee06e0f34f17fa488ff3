Index: twisted/python/versions.py
===================================================================
--- twisted/python/versions.py	(revision 18211)
+++ twisted/python/versions.py	(working copy)
@@ -79,6 +79,25 @@
                     other.minor,
                     other.micro))
 
+
+    def _parseSVNEntries(self, entriesFile):
+        """
+        Given a readable file object which represents a .svn/entries
+        file, return the revision as a string. If the file cannot be
+        parsed, return the string "Unknown".
+        """
+        try:
+            from xml.dom.minidom import parse
+            doc = parse(entriesFile).documentElement
+            for node in doc.childNodes:
+                if hasattr(node, 'getAttribute'):
+                    rev = node.getAttribute('revision')
+                    if rev is not None:
+                        return rev.encode('ascii')
+        except:
+            return "Unknown"
+        
+
     def _getSVNVersion(self):
         """
         Figure out the SVN revision number based on the existance of
@@ -94,14 +113,9 @@
                                '.svn',
                                'entries')
             if os.path.exists(ent):
-                from xml.dom.minidom import parse
-                doc = parse(file(ent)).documentElement
-                for node in doc.childNodes:
-                    if hasattr(node, 'getAttribute'):
-                        rev = node.getAttribute('revision')
-                        if rev is not None:
-                            return rev.encode('ascii')
+                return self._parseSVNEntries(open(ent))
 
+
     def _formatSVNVersion(self):
         ver = self._getSVNVersion()
         if ver is None:
Index: twisted/test/test_versions.py
===================================================================
--- twisted/test/test_versions.py	(revision 18211)
+++ twisted/test/test_versions.py	(working copy)
@@ -1,6 +1,8 @@
 # Copyright (c) 2006 Twisted Matrix Laboratories.
 # See LICENSE for details.
 
+from cStringIO import StringIO
+
 from twisted.python.versions import Version, IncomparableVersions
 
 from twisted.trial import unittest
@@ -41,3 +43,36 @@
     def testShort(self):
         self.assertEquals(Version('dummy', 1, 2, 3).short(),
                           '1.2.3')
+
+
+    def test_goodSVNEntries(self):
+        """
+        Version should be able to parse an SVN entries file.
+        """
+        version = Version("dummy", 1, 0, 0)
+        crap = '''<?xml version="1.0" encoding="utf-8"?>
+<wc-entries
+   xmlns="svn:">
+<entry
+   committed-rev="18210"
+   name=""
+   committed-date="2006-09-21T04:43:09.542953Z"
+   url="svn+ssh://svn.twistedmatrix.com/svn/Twisted/trunk/twisted"
+   last-author="exarkun"
+   kind="dir"
+   uuid="bbbe8e31-12d6-0310-92fd-ac37d47ddeeb"
+   repos="svn+ssh://svn.twistedmatrix.com/svn/Twisted"
+   revision="18211"/>
+</wc-entries>
+'''
+        self.assertEquals(version._parseSVNEntries(StringIO(crap)), '18211')
+
+
+    def test_parseBrokenSVNEntries(self):
+        """
+        If there is a broken SVN entries file, it should return an SVN
+        revision of "Unknown".
+        """
+        version = Version("dummy", 1, 0, 0)
+        self.assertEquals(version._parseSVNEntries(StringIO('screw you')), 
+                          "Unknown")
