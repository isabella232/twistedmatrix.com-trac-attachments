From afce66ccc56a5ca52c00783c282cc5a2f97d9943 Mon Sep 17 00:00:00 2001
From: Sebastian Lauwers <sebastian.lauwers@interact-iv.com>
Date: Mon, 3 Mar 2014 01:23:54 +0100
Subject: [PATCH 1/3] Converted commented print statements to print functions

---
 twisted/test/crash_test_dummy.py |    2 +-
 twisted/test/test_banana.py      |    2 +-
 twisted/test/test_dirdbm.py      |    2 +-
 twisted/test/test_doc.py         |    6 +++---
 twisted/test/test_newcred.py     |    2 +-
 twisted/test/test_paths.py       |    2 +-
 twisted/test/test_persisted.py   |    2 +-
 twisted/test/test_process.py     |    4 ++--
 8 files changed, 11 insertions(+), 11 deletions(-)

diff --git twisted/test/crash_test_dummy.py twisted/test/crash_test_dummy.py
index 5a30bd4..f99972d 100644
--- twisted/test/crash_test_dummy.py
+++ twisted/test/crash_test_dummy.py
@@ -14,7 +14,7 @@ class X:
         self.x = x
 
     def do(self):
-        #print 'X',self.x,'doing!'
+        #print('X', self.x, 'doing!')
         pass
 
 
diff --git twisted/test/test_banana.py twisted/test/test_banana.py
index c4b69de..b5cbbb9 100644
--- twisted/test/test_banana.py
+++ twisted/test/test_banana.py
@@ -203,7 +203,7 @@ class BananaTestCase(unittest.TestCase):
         # This variant doesn't segfault straight out in my environment.
         # Instead, it takes up large amounts of CPU and memory...
         #crashString = '\x00\x00\x00\x00\x01\x80'
-        # print repr(crashString)
+        # print(repr(crashString))
         #self.failUnlessRaises(Exception, self.enc.dataReceived, crashString)
         try:
             # should now raise MemoryError
diff --git twisted/test/test_dirdbm.py twisted/test/test_dirdbm.py
index 8bd240f..d017831 100644
--- twisted/test/test_dirdbm.py
+++ twisted/test/test_dirdbm.py
@@ -34,7 +34,7 @@ class DirDbmTestCase(unittest.TestCase):
         s = dirdbm.Shelf('dirdbm.rebuild.test')
         s['key'] = 'value'
         rebuild.rebuild(dirdbm)
-        # print s['key']
+        # print(s['key'])
 
 
     def testDbm(self):
diff --git twisted/test/test_doc.py twisted/test/test_doc.py
index 795fd87..f00f492 100644
--- twisted/test/test_doc.py
+++ twisted/test/test_doc.py
@@ -47,7 +47,7 @@ class DocCoverage(unittest.TestCase):
                 # This is testing doc coverage, not importability.
                 # (Really, I don't want to deal with the fact that I don't
                 #  have pyserial installed.)
-                # print e
+                # print(e)
                 pass
             else:
                 docless.extend(self.modulesInPackage(packageName, package))
@@ -71,7 +71,7 @@ class DocCoverage(unittest.TestCase):
                 module = reflect.namedModule('.'.join([packageName,
                                                        moduleName]))
             except Exception, e:
-                # print moduleName, "misbehaved:", e
+                # print(moduleName, "misbehaved:", e)
                 pass
             else:
                 if not inspect.getdoc(module):
@@ -91,7 +91,7 @@ class DocCoverage(unittest.TestCase):
                 # This is testing doc coverage, not importability.
                 # (Really, I don't want to deal with the fact that I don't
                 #  have pyserial installed.)
-                # print e
+                # print(e)
                 pass
             else:
                 if not inspect.getdoc(package):
diff --git twisted/test/test_newcred.py twisted/test/test_newcred.py
index 01660cd..b03cd70 100644
--- twisted/test/test_newcred.py
+++ twisted/test/test_newcred.py
@@ -102,7 +102,7 @@ class NewCredTest(unittest.TestCase):
             l.append).addErrback(f.append)
         if f:
             raise f[0]
-        # print l[0].getBriefTraceback()
+        # print(l[0].getBriefTraceback())
         iface, impl, logout = l[0]
         # whitebox
         self.assertEqual(iface, ITestable)
diff --git twisted/test/test_paths.py twisted/test/test_paths.py
index f2761df..fc15eee 100644
--- twisted/test/test_paths.py
+++ twisted/test/test_paths.py
@@ -284,7 +284,7 @@ def zipit(dirname, zfname):
         for fname in files:
             fspath = os.path.join(root, fname)
             arcpath = os.path.join(root, fname)[len(dirname)+1:]
-            # print fspath, '=>', arcpath
+            # print(fspath, '=>', arcpath)
             zf.write(fspath, arcpath)
     zf.close()
 
diff --git twisted/test/test_persisted.py twisted/test/test_persisted.py
index 4a80791..e0f0868 100644
--- twisted/test/test_persisted.py
+++ twisted/test/test_persisted.py
@@ -337,7 +337,7 @@ class AOTTestCase(unittest.TestCase):
         sio = StringIO.StringIO()
         sio.write(s)
         uj = aot.unjellyFromSource(aot.jellyToSource(sio))
-        # print repr(uj.__dict__)
+        # print(repr(uj.__dict__))
         assert uj.getvalue() == s
 
     def testFunkyReferences(self):
diff --git twisted/test/test_process.py twisted/test/test_process.py
index 84de9ae..f8833c1 100644
--- twisted/test/test_process.py
+++ twisted/test/test_process.py
@@ -886,7 +886,7 @@ class FDChecker(protocol.ProcessProtocol):
                           % (childFD, data))
                 return
             self.data += data
-            #print "len", len(self.data)
+            #print("len", len(self.data))
             if len(self.data) == 6:
                 if self.data != "righto":
                     self.fail("got '%s' on fd1, expected 'righto'" \
@@ -894,7 +894,7 @@ class FDChecker(protocol.ProcessProtocol):
                     return
                 self.data = ""
                 self.state = 2
-                #print "state2", self.state
+                #print("state2", self.state)
                 self.transport.writeToChild(3, "efgh")
                 return
         if self.state == 2:
-- 
1.7.10.4

