Index: twisted/words/protocols/irc.py
===================================================================
--- twisted/words/protocols/irc.py	(revision 24327)
+++ twisted/words/protocols/irc.py	(working copy)
@@ -822,6 +822,7 @@
     ### Your client will want to invoke these.
 
     def join(self, channel, key=None):
+        """Join the a channel"""
         if channel[0] not in '&#!+': channel = '#' + channel
         if key:
             self.sendLine("JOIN %s %s" % (channel, key))
@@ -829,6 +830,7 @@
             self.sendLine("JOIN %s" % (channel,))
 
     def leave(self, channel, reason=None):
+        """Leave a channel"""
         if channel[0] not in '&#!+': channel = '#' + channel
         if reason:
             self.sendLine("PART %s :%s" % (channel, reason))
@@ -836,6 +838,7 @@
             self.sendLine("PART %s" % (channel,))
 
     def kick(self, channel, user, reason=None):
+        """Attempt to kick a user off"""
         if channel[0] not in '&#!+': channel = '#' + channel
         if reason:
             self.sendLine("KICK %s %s :%s" % (channel, user, reason))
@@ -874,6 +877,7 @@
 
 
     def say(self, channel, message, length = None):
+        """Send a message to a channel"""
         if channel[0] not in '&#!+': channel = '#' + channel
         self.msg(channel, message, length)
 
@@ -913,12 +917,18 @@
                 lines)
 
     def notice(self, user, message):
+        """Send a notice to a user"""
         self.sendLine("NOTICE %s :%s" % (user, message))
 
     def away(self, message=''):
+        """Mark this client as away.
+
+        Use an empty string for the message parameter to remove the away status.
+        """
         self.sendLine("AWAY :%s" % message)
 
     def register(self, nickname, hostname='foo', servername='bar'):
+        """Login to the server"""
         if self.password is not None:
             self.sendLine("PASS %s" % self.password)
         self.setNick(nickname)
@@ -927,10 +937,12 @@
         self.sendLine("USER %s %s %s :%s" % (self.username, hostname, servername, self.realname))
 
     def setNick(self, nickname):
+        """Set this client's nickname"""
         self.nickname = nickname
         self.sendLine("NICK %s" % nickname)
 
     def quit(self, message = ''):
+        """Disconnect from the server"""
         self.sendLine("QUIT :%s" % message)
 
     ### user input commands, client->client
@@ -1008,15 +1020,19 @@
     ### but it is safe to leave them alone.
 
     def irc_ERR_NICKNAMEINUSE(self, prefix, params):
+        """Called when we try to register an invalid nickname."""
         self.register(self.nickname+'_')
 
     def irc_ERR_PASSWDMISMATCH(self, prefix, params):
+        """Called when the login was incorrect."""
         raise IRCPasswordMismatch("Password Incorrect.")
 
     def irc_RPL_WELCOME(self, prefix, params):
+        """Called when we have received the welcome from the server."""
         self.signedOn()
 
     def irc_JOIN(self, prefix, params):
+        """Called when a user joins a channel."""
         nick = string.split(prefix,'!')[0]
         channel = params[-1]
         if nick == self.nickname:
@@ -1025,6 +1041,7 @@
             self.userJoined(nick, channel)
 
     def irc_PART(self, prefix, params):
+        """Called when a user leaves a channel."""
         nick = string.split(prefix,'!')[0]
         channel = params[0]
         if nick == self.nickname:
@@ -1033,6 +1050,7 @@
             self.userLeft(nick, channel)
 
     def irc_QUIT(self, prefix, params):
+        """Called when a user has quit."""
         nick = string.split(prefix,'!')[0]
         self.userQuit(nick, params[0])
 
@@ -1074,9 +1092,11 @@
 
 
     def irc_PING(self, prefix, params):
+        """Called when some has pinged us."""
         self.sendLine("PONG %s" % params[-1])
 
     def irc_PRIVMSG(self, prefix, params):
+        """Called when we get a message."""
         user = prefix
         channel = params[0]
         message = params[-1]
@@ -1096,6 +1116,7 @@
         self.privmsg(user, channel, message)
 
     def irc_NOTICE(self, prefix, params):
+        """Called when a user gets a notice."""
         user = prefix
         channel = params[0]
         message = params[-1]
@@ -1113,6 +1134,7 @@
         self.noticed(user, channel, message)
 
     def irc_NICK(self, prefix, params):
+        """Called when a user changes their nickname."""
         nick = string.split(prefix,'!', 1)[0]
         if nick == self.nickname:
             self.nickChanged(params[0])
@@ -1120,8 +1142,7 @@
             self.userRenamed(nick, params[0])
 
     def irc_KICK(self, prefix, params):
-        """Kicked?  Who?  Not me, I hope.
-        """
+        """Called when a user is kicked from a channel."""
         kicker = string.split(prefix,'!')[0]
         channel = params[0]
         kicked = params[1]
