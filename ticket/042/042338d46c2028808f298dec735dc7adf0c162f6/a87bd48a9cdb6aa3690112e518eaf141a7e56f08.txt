Index: twisted/internet/iocpreactor/abstract.py
===================================================================
--- twisted/internet/iocpreactor/abstract.py    (revision 15093)
+++ twisted/internet/iocpreactor/abstract.py    (working copy)
@@ -145,11 +145,13 @@
             self.protocol.dataReceived(item)
             if not self.reading:
                 return
-        try:
-            self.read_op.initiateOp(self.socket.fileno(), self.readbuf)
-        except WindowsError, we:
-#            log.msg("initiating read failed with args %s" % (we,))
-            self.connectionLost(failure.Failure(main.CONNECTION_DONE))
+        log.callWithLogger(self, self.read_op.initiateOp,
+                           self.socket.fileno(), self.readbuf)
+        #try:
+        #    self.read_op.initiateOp(self.socket.fileno(), self.readbuf)
+        #except WindowsError, we:
+        #    #log.msg("initiating read failed with args %s" % (we,))
+        #    self.connectionLost(failure.Failure(main.CONNECTION_DONE))

     def stopReading(self):
         self.reading = False
@@ -181,11 +183,14 @@
         b = buffer(self.writebuf[0], self.offset)
 #        ll = map(len, self.writebuf)
 #        log.msg("buffer lengths are", ll, "total", sum(ll))
-        try:
-            self.write_op.initiateOp(self.socket.fileno(), b)
-        except WindowsError, we:
-#            log.msg("initiating write failed with args %s" % (we,))
-            self.connectionLost(failure.Failure(main.CONNECTION_DONE))
+        log.callWithLogger(self, self.write_op.initiateOp,
+                           self.socket.fileno(), b)
+        #try:
+        #    self.write_op.initiateOp(self.socket.fileno(), b)
+        #except WindowsError, we:
+        #    #log.msg("initiating write failed with args %s" % (we,))
+        #    print "ConnectedPort.startWriting: calling self.connectionLost"
+        #    self.connectionLost(failure.Failure(main.CONNECTION_DONE))

     def stopWriting(self):
         self.writing = False
