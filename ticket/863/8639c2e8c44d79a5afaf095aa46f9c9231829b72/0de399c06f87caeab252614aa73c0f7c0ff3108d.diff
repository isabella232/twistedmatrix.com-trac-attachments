Index: ftp.py
===================================================================
--- ftp.py	(revision 16309)
+++ ftp.py	(working copy)
@@ -989,12 +989,20 @@
                 log.err(err)
             return (FILE_NOT_FOUND, '/'.join(newsegs))
 
-        d = self.shell.openForWriting(newsegs)
-        d.addCallbacks(cbOpened, ebOpened)
-        d.addBoth(enableTimeout)
+        #
+        # Some shells, such as the anonymous shell, do not support write
+        # (STOR) and thus don't even have the method. So, we check first,
+        # and raise a catchable exception if it's not there.
+        #
+        if hasattr(self.shell, 'openForWriting'):
+            d = self.shell.openForWriting(newsegs)
+            d.addCallbacks(cbOpened, ebOpened)
+            d.addBoth(enableTimeout)
 
-        # Pass back Deferred that fires when the transfer is done
-        return d
+            # Pass back Deferred that fires when the transfer is done
+            return d
+        else:
+           raise PermissionDeniedError("STOR not allowed") 
 
 
     def ftp_SIZE(self, path):
