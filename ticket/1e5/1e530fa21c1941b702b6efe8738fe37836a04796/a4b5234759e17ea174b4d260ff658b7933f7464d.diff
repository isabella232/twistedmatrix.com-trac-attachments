Index: twisted/python/failure.py
===================================================================
--- twisted/python/failure.py	(revision 20264)
+++ twisted/python/failure.py	(working copy)
@@ -14,6 +14,7 @@
 import sys
 import linecache
 import inspect
+import weakref
 from cStringIO import StringIO
 
 from twisted.python import reflect
@@ -128,6 +129,7 @@
 
     pickled = 0
     stack = None
+    failure_of_exception = weakref.WeakValueDictionary()
 
     def __init__(self, exc_value=None, exc_type=None, exc_tb=None):
         """Initialize me with an explanation of the error.
@@ -168,6 +170,15 @@
         if isinstance(self.value, Failure):
             self.__dict__ = self.value.__dict__
             return
+
+        self.exc_key = (self.type, self.value)
+        
+        self.prev = self.failure_of_exception.get(self.exc_key, None)
+        # Create another strong reference to the exception (one
+        # already exists within the Failure object, so we are not
+        # delaying any object gc).
+        self.failure_of_exception[self.exc_key] = self
+
         if tb is None:
             if exc_tb:
                 tb = exc_tb
@@ -412,10 +423,11 @@
             w("%s: %s\n" % (reflect.qual(self.type),
                             reflect.safe_str(self.value)))
         # chaining
-        if isinstance(self.value, Failure):
-            # TODO: indentation for chained failures?
-            file.write(" (chained Failure)\n")
-            self.value.printTraceback(file, elideFrameworkCode, detail)
+        for value in [self.value, self.prev]:
+            if isinstance(value, Failure):
+                # TODO: indentation for chained failures?
+                file.write(" (chained Failure)\n")
+                value.printTraceback(file, elideFrameworkCode, detail)
         if detail == 'verbose':
             w('*--- End of Failure #%d ---\n' % self.count)
 
Index: twisted/internet/defer.py
===================================================================
--- twisted/internet/defer.py	(revision 20264)
+++ twisted/internet/defer.py	(working copy)
@@ -721,7 +721,7 @@
         try:
             # Send the last result back as the result of the yield expression.
             if isinstance(result, failure.Failure):
-                result = g.throw(result.type, result.value, result.tb)
+                result = g.throw(result.type, result.value)
             else:
                 result = g.send(result)
         except StopIteration:
