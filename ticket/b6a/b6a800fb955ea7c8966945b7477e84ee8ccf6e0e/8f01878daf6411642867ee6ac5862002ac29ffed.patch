diff --git twisted/web/proxy.py twisted/web/proxy.py
index 378cdd0..2a56b96 100644
--- twisted/web/proxy.py
+++ twisted/web/proxy.py
@@ -49,10 +49,10 @@ class ProxyClient(HTTPClient):
         headers.pop('keep-alive', None)
         self.headers = headers
         self.data = data
-        father.notifyFinish().addErrback(self.fatherFailed)
 
 
     def connectionMade(self):
+        self.father.notifyFinish().addErrback(self._fatherFailed)
         self.sendCommand(self.command, self.rest)
         for header, value in self.headers.items():
             self.sendHeader(header, value)
@@ -90,10 +90,14 @@ class ProxyClient(HTTPClient):
             self.transport.loseConnection()
 
 
-    def fatherFailed(self, failure):
-        if not self._finished:
-            self.transport.loseConnection()
-            self._finished = True
+    def _fatherFailed(self, failure):
+        """
+        This is called when the proxy's client disconnects or otherwise aborts.
+        We want to abort, too, so that we don't tie up resources on the
+        server we're connecting to.
+        """
+        self._finished = True
+        self.transport.loseConnection()
 
 
 
diff --git twisted/web/test/test_proxy.py twisted/web/test/test_proxy.py
index edc7ae7..d67244c 100644
--- twisted/web/test/test_proxy.py
+++ twisted/web/test/test_proxy.py
@@ -375,9 +375,10 @@ class ProxyClientTestCase(TestCase):
         self.assertForwardsResponse(
             request, 200, 'OK', headers.items(), '')
 
+
     def test_parentDisconnected(self):
         """
-        Check that the client disconnects if the parent request is dropped.
+        The client should disconnect if the parent request is dropped.
         """
         request = self.makeRequest('foo')
         client = self.makeProxyClient(request, headers={"accept": "text/html"})
@@ -391,6 +392,19 @@ class ProxyClientTestCase(TestCase):
         self.assertFalse(client.transport.connected)
 
 
+    def test_parentDisconnectedEarly(self):
+        """
+        The proxy should survive a parent disconnection before the client
+        connects.
+        """
+        request = self.makeRequest('foo')
+        client = self.makeProxyClient(request, headers={"accept": "text/html"})
+        request.processingFailed(main.CONNECTION_LOST)
+
+        # Note: this test is a little bit odd.  We're testing that the
+        # processingFailed call doesn't raise an exception.
+
+
 
 class ProxyClientFactoryTestCase(TestCase):
     """
