Index: trunk/twisted/python/reflect.py
===================================================================
--- trunk.orig/twisted/python/reflect.py
+++ trunk/twisted/python/reflect.py
@@ -362,9 +362,25 @@ def namedAny(name):
         except ImportError:
             # if the ImportError happened in the module being imported,
             # this is a failure that should be handed to our caller.
-            # count stack frames to tell the difference.
+            # We check two things:
+            # - is there a 'No module named (trialname)' error ?
+            # - is twisted/python/reflect in the last stack frame ?
+            # In those cases, we know we didn't find the module;
+            # in other cases, we re-raise because an ImportError happened
+            # inside our module
             exc_info = sys.exc_info()
-            if len(traceback.extract_tb(exc_info[2])) > 1:
+            tb = exc_info[2]
+            while tb.tb_next:
+                tb = tb.tb_next
+
+            notOurs = True
+            filename = tb.tb_frame.f_code.co_filename
+            if filename.find('twisted/python/reflect') > -1:
+                notOurs = False
+            if str(exc_info[1]).startswith("No module named %s" % trialname):
+                notOurs = False
+                
+            if notOurs:
                 try:
                     # Clean up garbage left in sys.modules.
                     del sys.modules[trialname]
Index: trunk/twisted/test/reflect_helper_IE.py
===================================================================
--- /dev/null
+++ trunk/twisted/test/reflect_helper_IE.py
@@ -0,0 +1,4 @@
+
+# Helper for a test_reflect test
+
+import idonotexist
Index: trunk/twisted/test/test_reflect.py
===================================================================
--- trunk.orig/twisted/test/test_reflect.py
+++ trunk/twisted/test/test_reflect.py
@@ -137,6 +137,25 @@ class LookupsTestCaseII(unittest.TestCas
             ValueError,
             reflect.namedAny, "tcelfer.nohtyp.detsiwt")
 
+class Ticket698TestCase(unittest.TestCase):
+    def setUp(self):
+        import ihooks
+        self.importer = ihooks.ModuleImporter()
+        self.importer.install()
+
+    def tearDown(self):
+        self.importer.uninstall()
+
+    def testClassLookup(self):
+        self.failUnlessIdentical(reflect.namedAny("twisted.python."
+                                                  "reflect.Summer"),
+                                 reflect.Summer)
+
+    def testModuleWithImportErrorLookup(self):
+        self.assertRaises(
+            ImportError,
+            reflect.namedAny, "twisted.test.reflect_helper_IE")
+
 class ObjectGrep(unittest.TestCase):
     def test_dictionary(self):
         """
