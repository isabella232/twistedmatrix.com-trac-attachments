Index: twisted/test/test_modules.py
===================================================================
--- twisted/test/test_modules.py	(revision 31654)
+++ twisted/test/test_modules.py	(working copy)
@@ -69,9 +69,6 @@
         pkg = entry.child("test_package")
         pkg.makedirs()
         pkg.child("__init__.py").setContent("")
-        def cleanUpPathEntry():
-            entry.remove()
-        self.addCleanup(cleanUpPathEntry)
         return entry
 
 
@@ -79,6 +76,10 @@
 class BasicTests(PySpaceTestCase):
 
     def test_namespacedPackages(self):
+        """
+        Verify that duplicate packages are not yielded when iterating over namespace
+        packages.
+        """
         namespaceBoilerplate = 'import pkgutil; __path__ = pkgutil.extend_path(__path__, __name__)'
 
         # Create two temporary directories with packages:
Index: twisted/python/modules.py
===================================================================
--- twisted/python/modules.py	(revision 31654)
+++ twisted/python/modules.py	(working copy)
@@ -158,7 +158,7 @@
                     modname = self._subModuleName(potentialTopLevel.basename())
                     for ext in PYTHON_EXTENSIONS:
                         initpy = potentialTopLevel.child("__init__"+ext)
-                        if initpy.exists() and not modname in yielded:
+                        if initpy.exists() and modname not in yielded:
                             yielded[modname] = True
                             pm = PythonModule(modname, initpy, self._getEntry())
                             assert pm != self
Index: twisted/topfiles/5030.bugfix
===================================================================
--- twisted/topfiles/5030.bugfix	(revision 0)
+++ twisted/topfiles/5030.bugfix	(revision 0)
@@ -0,0 +1 @@
+twisted.python.modules now supports iterating over namespace packages without yielding duplicates.
\ No newline at end of file
