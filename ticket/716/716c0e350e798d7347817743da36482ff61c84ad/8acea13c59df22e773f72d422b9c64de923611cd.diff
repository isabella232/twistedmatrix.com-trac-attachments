=== modified file 'twisted/protocols/memcache.py'
--- twisted/protocols/memcache.py	2008-02-02 15:22:00 +0000
+++ twisted/protocols/memcache.py	2009-02-18 00:13:58 +0000
@@ -589,7 +589,7 @@
         return cmdObj._deferred
 
 
-    def stats(self):
+    def stats(self, arg=None):
         """
         Get some stats from the server. It will be available as a dict.
 
@@ -597,7 +597,10 @@
             statistics.
         @rtype: L{Deferred}
         """
-        self.sendLine("stats")
+        cmd = "stats"
+        if arg:
+            cmd = "stats " + arg
+        self.sendLine(cmd)
         cmdObj = Command("stats", values={})
         self._current.append(cmdObj)
         return cmdObj._deferred

=== modified file 'twisted/test/test_memcache.py'
--- twisted/test/test_memcache.py	2008-02-02 15:22:00 +0000
+++ twisted/test/test_memcache.py	2009-02-18 00:20:41 +0000
@@ -190,6 +190,17 @@
             "STAT foo bar\r\nSTAT egg spam\r\nEND\r\n",
             {"foo": "bar", "egg": "spam"})
 
+    def test_stats_with_arg(self):
+        """
+        Test retrieving server statistics via the
+        L{MemCacheProtocol.stats} command with an argument: it should
+        parse the data sent by the server and call back the resulting
+        L{Deferred} with a dictionary of the received statistics.
+        """
+        return self._test(self.proto.stats("blah"), "stats blah\r\n",
+            "STAT foo bar\r\nSTAT egg spam\r\nEND\r\n",
+            {"foo": "bar", "egg": "spam"})
+
 
     def test_version(self):
         """

