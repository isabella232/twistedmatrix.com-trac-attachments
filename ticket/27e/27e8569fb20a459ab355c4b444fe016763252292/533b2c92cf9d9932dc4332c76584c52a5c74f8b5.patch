--- /cygdrive/d/tmpdl/_dumbwin32proc.py	2007-06-26 19:47:36.358000000 +0200
+++ /cygdrive/c/Python24/Lib/site-packages/twisted/internet/_dumbwin32proc.py	2007-06-27 12:41:18.414750000 +0200
@@ -6,6 +6,11 @@
 """
 
 import os
+from time import time
+from sys import getwindowsversion
+
+#fetch windows flavour
+WINDOWS_VERSION = getwindowsversion()[3]
 
 # Win32 imports
 import win32api
@@ -15,6 +20,8 @@
 import win32pipe
 import win32process
 import win32security
+import win32job
+from win32con import CREATE_SUSPENDED
 
 import pywintypes
 
@@ -172,8 +179,23 @@
         cmdline = quoteArguments(args)
         # TODO: error detection here.
         def doCreate():
-            self.hProcess, self.hThread, dwPid, dwTid = win32process.CreateProcess(
-                command, cmdline, None, None, 1, 0, env, path, StartupInfo)
+            # due to windows limitation, the following fix only works on windows > win9x/ME
+            if WINDOWS_VERSION == 2: 
+                # This fix to kill child processes on windows is based on
+                # http://www.microsoft.com/msj/0698/win320698.aspx
+                # create a uniquely named job object that will contain our processes
+                self.job = win32job.CreateJobObject(None, str(time()))
+                # start the process as suspended
+                self.hProcess, self.hThread, self.dwPid, self.dwTid = win32process.CreateProcess(
+                    command, cmdline, None, None, 1, CREATE_SUSPENDED, env, path, StartupInfo)
+                # map the process to our newly created job object
+                win32job.AssignProcessToJobObject(self.job, self.hProcess)
+                # resume the process, from now on every child it will create 
+                # will be assigned to the job object it now belongs to
+                win32process.ResumeThread(self.hThread)
+            else:
+                self.hProcess, self.hThread, dwPid, dwTid = win32process.CreateProcess(
+                    command, cmdline, None, None, 1, 0, env, path, StartupInfo)
         try:
             doCreate()
         except pywintypes.error, pwte:
@@ -244,7 +266,10 @@
 
     def signalProcess(self, signalID):
         if signalID in ("INT", "TERM", "KILL"):
-            win32process.TerminateProcess(self.hProcess, 1)
+            if WINDOWS_VERSION != 2:
+                win32process.TerminateProcess(self.hProcess, 1)
+            else:
+                win32job.TerminateJobObject(self.job, 1)
 
     def write(self, data):
         """Write data to the process' stdin."""
