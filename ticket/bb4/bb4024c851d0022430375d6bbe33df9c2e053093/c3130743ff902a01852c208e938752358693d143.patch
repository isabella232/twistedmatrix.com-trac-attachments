From 440743b7b2431b30d3840c47950fe25287d32b1a Mon Sep 17 00:00:00 2001
From: Jason Michalski <armooo@armooo.net>
Date: Sun, 27 Feb 2011 22:43:11 -0500
Subject: [PATCH] web.http.Request.setHost now sets the port in the host header if it is not the default.

---
 twisted/web/http.py              |   12 ++++++++++--
 twisted/web/test/test_http.py    |   38 ++++++++++++++++++++++++++++++++++++++
 twisted/web/topfiles/4918.bugfix |    1 +
 3 files changed, 49 insertions(+), 2 deletions(-)
 create mode 100644 twisted/web/topfiles/4918.bugfix

diff --git a/twisted/web/http.py b/twisted/web/http.py
index 9732397..0a639c4 100644
--- a/twisted/web/http.py
+++ b/twisted/web/http.py
@@ -1180,8 +1180,16 @@ class Request:
         @param ssl: A flag which, if C{True}, indicates that the request is
             considered secure (if C{True}, L{isSecure} will return C{True}).
         """
-        self._forceSSL = ssl
-        self.requestHeaders.setRawHeaders("host", [host])
+        self._forceSSL = ssl # set first so isSecure will work
+        if self.isSecure():
+            default = 443
+        else:
+            default = 80
+        if port == default:
+            host_header = host
+        else:
+            host_header = '%s:%d' % (host, port)
+        self.requestHeaders.setRawHeaders("host", [host_header])
         self.host = address.IPv4Address("TCP", host, port)
 
 
diff --git a/twisted/web/test/test_http.py b/twisted/web/test/test_http.py
index 0b7a2e8..c5827aa 100644
--- a/twisted/web/test/test_http.py
+++ b/twisted/web/test/test_http.py
@@ -1149,13 +1149,51 @@ class RequestTests(unittest.TestCase, ResponseTestMixin):
     def test_setHost(self):
         """
         L{http.Request.setHost} sets the value of the host request header.
+        The port should not be added because it is the default.
         """
         req = http.Request(DummyChannel(), None)
+        req.setHost("example.com", 80)
+        self.assertEqual(
+            req.requestHeaders.getRawHeaders("host"), ["example.com"])
+
+
+    def test_setHostSSL(self):
+        """
+        L{http.Request.setHost} sets the value of the host request header.
+        The port should not be added because it is the default.
+        """
+        d = DummyChannel()
+        d.transport = DummyChannel.SSL()
+        req = http.Request(d, None)
         req.setHost("example.com", 443)
         self.assertEqual(
             req.requestHeaders.getRawHeaders("host"), ["example.com"])
 
 
+    def test_setHostNonDefaultPort(self):
+        """
+        L{http.Request.setHost} sets the value of the host request header.
+        The port should be added because it is not the default.
+        """
+        req = http.Request(DummyChannel(), None)
+        req.setHost("example.com", 81)
+        self.assertEqual(
+            req.requestHeaders.getRawHeaders("host"), ["example.com:81"])
+
+
+    def test_setHostSSLNonDefaultPort(self):
+        """
+        L{http.Request.setHost} sets the value of the host request header.
+        The port should be added because it is not the default.
+        """
+        d = DummyChannel()
+        d.transport = DummyChannel.SSL()
+        req = http.Request(d, None)
+        req.setHost("example.com", 81)
+        self.assertEqual(
+            req.requestHeaders.getRawHeaders("host"), ["example.com:81"])
+
+
     def test_setHeader(self):
         """
         L{http.Request.setHeader} sets the value of the given response header.
diff --git a/twisted/web/topfiles/4918.bugfix b/twisted/web/topfiles/4918.bugfix
new file mode 100644
index 0000000..22b5aa4
--- /dev/null
+++ b/twisted/web/topfiles/4918.bugfix
@@ -0,0 +1 @@
+web.http.Request.setHost now sets the port in the host header if it is not the default.
-- 
1.7.1

