Index: twisted/test/test_sslverify.py
===================================================================
--- twisted/test/test_sslverify.py	(revision 38118)
+++ twisted/test/test_sslverify.py	(working copy)
@@ -8,7 +8,7 @@
 
 from __future__ import division, absolute_import
 
-import itertools
+import itertools, warnings
 
 try:
     from OpenSSL import SSL
@@ -18,6 +18,8 @@
 except ImportError:
     pass
 
+from twisted.python.versions import Version
+
 from twisted.python.compat import nativeString
 from twisted.trial import unittest
 from twisted.internet import protocol, defer, reactor
@@ -26,6 +28,7 @@
 from twisted.internet import interfaces
 
 
+
 # A couple of static PEM-format certificates to be used by various tests.
 A_HOST_CERTIFICATE_PEM = """
 -----BEGIN CERTIFICATE-----
@@ -355,11 +358,19 @@
         context = firstOpts.getContext()
         self.assertIdentical(context, firstOpts._context)
         self.assertNotIdentical(context, None)
-        state = firstOpts.__getstate__()
+        with warnings.catch_warnings():
+            warnings.filterwarnings(action="ignore", category=DeprecationWarning,
+                message="twisted.internet._sslverify.OpenSSLCertificateOptions"
+                ".__getstate__ was deprecated in Twisted 13.1.0: Pickling is no longer supported.")
+            state = firstOpts.__getstate__()
         self.assertNotIn("_context", state)
 
         opts = sslverify.OpenSSLCertificateOptions()
-        opts.__setstate__(state)
+        with warnings.catch_warnings():
+            warnings.filterwarnings(action="ignore", category=DeprecationWarning,
+                message="twisted.internet._sslverify.OpenSSLCertificateOptions"
+                ".__setstate__ was deprecated in Twisted 13.1.0: Pickling is no longer supported.")
+            opts.__setstate__(state)
         self.assertEqual(opts.privateKey, self.sKey)
         self.assertEqual(opts.certificate, self.sCert)
         self.assertEqual(opts.method, SSL.SSLv3_METHOD)
@@ -648,3 +659,90 @@
 
 if interfaces.IReactorSSL(reactor, None) is None:
     Constructors.skip = "Reactor does not support SSL, cannot run SSL tests"
+
+class DeprecationTestCase(unittest.TestCase):
+    """
+    Test deprecations in twisted.internet._sslverify
+    """
+
+    def lookForDeprecationWarning(self, testMethod, className, methodName, warningMsg):
+        """
+        Test deprecation of class method '_sslverify.className.methodName' by calling
+        '_sslverify.testMethod' and verifying the warning message
+        '_sslverify.warningMsg'
+
+        @param testMethod: Name of the offending function to be used with
+            flushWarnings
+        @type testmethod: C{str}
+
+        @param className: Name of class containing the deprecated method
+        @type className: C{str}
+
+        @param methodName: Name of method to be checked for deprecation
+        @type methodName: C{str}
+
+        @param warningMsg: Deprecation warning message
+        @type warningMsg: C{str}
+        """
+        warningsShown = self.flushWarnings([testMethod])
+        self.assertEqual(len(warningsShown), 1)
+        self.assertIdentical(warningsShown[0]['category'], DeprecationWarning)
+        self.assertEqual(
+            warningsShown[0]['message'],
+            "twisted.internet._sslverify." + className + "." + methodName +
+            " was deprecated in Twisted 13.1.0: " + warningMsg)
+
+    def test_getstateDeprecationInOpenSSLCertificationOptions(self):
+        """
+        Test deprecation of L{_sslverify.OpenSSLCertificateOptions.__getstate__}
+        """
+        sslverify.OpenSSLCertificateOptions().__getstate__()
+        self.lookForDeprecationWarning(
+            self.test_getstateDeprecationInOpenSSLCertificationOptions, "OpenSSLCertificateOptions",
+            "__getstate__",
+            "Pickling is no longer supported.")
+
+    def test_setstateDeprecationInOpenSSLCertificationOptions(self):
+        """
+        Test deprecation of L{_sslverify.OpenSSLCertificateOptions.__setstate__}
+        """
+        with warnings.catch_warnings():
+            warnings.filterwarnings(action="ignore", category=DeprecationWarning,
+                message="twisted.internet._sslverify.OpenSSLCertificateOptions"
+                ".__getstate__ was deprecated in Twisted 13.1.0: Pickling is no longer supported.")
+            state = sslverify.OpenSSLCertificateOptions().__getstate__()
+        
+        sslverify.OpenSSLCertificateOptions().__setstate__(state)
+        self.lookForDeprecationWarning(
+            self.test_setstateDeprecationInOpenSSLCertificationOptions, "OpenSSLCertificateOptions",
+            "__setstate__",
+            "Pickling is no longer supported.")
+
+    def test_getstateDeprecationInKeyPair(self):
+        """
+        Test deprecation of L{_sslverify.KeyPair.__getstate__}
+        """
+        sKey = makeCertificate(
+            O=b"Server Test Certificate",
+            CN=b"server")[0]
+        sslverify.KeyPair(sKey).__getstate__()
+        self.lookForDeprecationWarning(
+            self.test_getstateDeprecationInKeyPair, "KeyPair", "__getstate__",
+            "Pickling is no longer supported.")
+
+    def test_setstateDeprecationInKeyPair(self):
+        """
+        Test deprecation of L{_sslverify.KeyPair.__setstate__}
+        """
+        sKey = makeCertificate(
+            O=b"Server Test Certificate",
+            CN=b"server")[0]
+        with warnings.catch_warnings():
+            warnings.filterwarnings(action="ignore", category=DeprecationWarning,
+                message="twisted.internet._sslverify.KeyPair"
+                ".__getstate__ was deprecated in Twisted 13.1.0: Pickling is no longer supported.")
+            state = sslverify.KeyPair(sKey).__getstate__()
+        sslverify.KeyPair(sKey).__setstate__(state)
+        self.lookForDeprecationWarning(
+            self.test_setstateDeprecationInKeyPair, "KeyPair", "__setstate__",
+            "Pickling is no longer supported.")
Index: twisted/topfiles/6166.removal
===================================================================
--- twisted/topfiles/6166.removal	(revision 0)
+++ twisted/topfiles/6166.removal	(revision 0)
@@ -0,0 +1,4 @@
+twisted.internet._sslverify.OpenSSLCertificateOptions.__getstate__ is now deprecated due to pickling not being supported anymore.
+twisted.internet._sslverify.OpenSSLCertificateOptions.__setstate__ is now deprecated due to pickling not being supported anymore.
+twisted.internet._sslverify.KeyPair.__getstate__ is now deprecated due to pickling not being supported anymore.
+twisted.internet._sslverify.KeyPair.__setstate__ is now deprecated due to pickling not being supported anymore.
Index: twisted/internet/_sslverify.py
===================================================================
--- twisted/internet/_sslverify.py	(revision 38118)
+++ twisted/internet/_sslverify.py	(working copy)
@@ -14,7 +14,11 @@
 from twisted.python import _reflectpy3 as reflect, util
 from twisted.internet.defer import Deferred
 from twisted.internet.error import VerifyError, CertificateError
+from twisted.python.deprecate import deprecated, getDeprecationWarningString
+from twisted.python.versions import Version
 
+import warnings
+
 def _sessionCounter(counter=itertools.count()):
     """
     Private - shared between all OpenSSLCertificateOptions, counts up to
@@ -508,12 +512,22 @@
     def dump(self, format=crypto.FILETYPE_ASN1):
         return crypto.dump_privatekey(format, self.original)
 
-
     def __getstate__(self):
+        """
+        Deprecated due to pickling not being supported anymore. See ticket #6166 for more information.
+        """
+        msg = getDeprecationWarningString(
+            self.__getstate__, Version("Twisted", 13, 1, 0)) + ": Pickling is no longer supported."
+        warnings.warn(msg, category=DeprecationWarning, stacklevel=2)
         return self.dump()
 
-
     def __setstate__(self, state):
+        """
+        Deprecated due to pickling not being supported anymore. See ticket #6166 for more information.
+        """
+        msg = getDeprecationWarningString(
+            self.__setstate__, Version("Twisted", 13, 1, 0)) + ": Pickling is no longer supported."
+        warnings.warn(msg, category=DeprecationWarning, stacklevel=2)
         self.__init__(crypto.load_privatekey(crypto.FILETYPE_ASN1, state))
 
 
@@ -717,9 +731,14 @@
         self.enableSessions = enableSessions
         self.fixBrokenPeers = fixBrokenPeers
         self.enableSessionTickets = enableSessionTickets
-
-
+  
     def __getstate__(self):
+        """
+        Deprecated due to pickling not being supported anymore. See ticket #6166 for more information.
+        """
+        msg = getDeprecationWarningString(
+            self.__getstate__, Version("Twisted", 13, 1, 0)) + ": Pickling is no longer supported."
+        warnings.warn(msg, category=DeprecationWarning, stacklevel=2)
         d = self.__dict__.copy()
         try:
             del d['_context']
@@ -727,8 +746,13 @@
             pass
         return d
 
-
     def __setstate__(self, state):
+        """
+        Deprecated due to pickling not being supported anymore. See ticket #6166 for more information.
+        """
+        msg = getDeprecationWarningString(
+            self.__setstate__, Version("Twisted", 13, 1, 0)) + ": Pickling is no longer supported."
+        warnings.warn(msg, category=DeprecationWarning, stacklevel=2)
         self.__dict__ = state
 
 
