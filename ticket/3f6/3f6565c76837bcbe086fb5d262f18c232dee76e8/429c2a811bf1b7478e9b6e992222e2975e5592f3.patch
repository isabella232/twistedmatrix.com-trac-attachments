Index: twisted/python/util.py
===================================================================
--- twisted/python/util.py	(revision 34400)
+++ twisted/python/util.py	(working copy)
@@ -215,7 +215,8 @@
     return result
 
 def padTo(n, seq, default=None):
-    """Pads a sequence out to n elements,
+    """
+    Pads a sequence out to n elements,
 
     filling in with a default value if it is not long enough.
 
@@ -235,7 +236,11 @@
 
     return blank
 
+
 def getPluginDirs():
+    warnings.warn(
+        "twisted.python.util.getPluginDirs is deprecated since Twisted 12.1.",
+        DeprecationWarning, stacklevel=2)
     import twisted
     systemPlugins = os.path.join(os.path.dirname(os.path.dirname(
                             os.path.abspath(twisted.__file__))), 'plugins')
@@ -244,13 +249,19 @@
     allPlugins = filter(os.path.isdir, [systemPlugins, userPlugins, confPlugins])
     return allPlugins
 
+
 def addPluginDir():
+    warnings.warn(
+        "twisted.python.util.addPluginDir is deprecated since Twisted 12.1.",
+        DeprecationWarning, stacklevel=2)
     sys.path.extend(getPluginDirs())
 
+
 def sibpath(path, sibling):
-    """Return the path to a sibling of a file in the filesystem.
+    """
+    Return the path to a sibling of a file in the filesystem.
 
-    This is useful in conjunction with the special __file__ attribute
+    This is useful in conjunction with the special C{__file__} attribute
     that Python provides for modules, so modules can load associated
     resource files.
     """
@@ -258,7 +269,9 @@
 
 
 def _getpass(prompt):
-    """Helper to turn IOErrors into KeyboardInterrupts"""
+    """
+    Helper to turn IOErrors into KeyboardInterrupts.
+    """
     import getpass
     try:
         return getpass.getpass(prompt)
Index: twisted/python/test/test_util.py
===================================================================
--- twisted/python/test/test_util.py	(revision 34400)
+++ twisted/python/test/test_util.py	(working copy)
@@ -890,3 +890,39 @@
 
     if util._c_initgroups is None:
         test_initgroupsInC.skip = "C initgroups not available"
+
+
+class DeprecationTests(unittest.TestCase):
+    """
+    Tests for deprecations in C{twisted.python.util}.
+    """
+    def test_getPluginDirs(self):
+        """
+        L{util.getPluginDirs} is deprecated.
+        """
+        util.getPluginDirs()
+        warnings = self.flushWarnings(offendingFunctions=[
+            self.test_getPluginDirs])
+        self.assertEqual(
+            warnings[0]['message'],
+            "twisted.python.util.getPluginDirs is deprecated since Twisted "
+            "12.1.")
+        self.assertEqual(warnings[0]['category'], DeprecationWarning)
+        self.assertEqual(len(warnings), 1)
+
+
+    def test_addPluginDir(self):
+        """
+        L{util.addPluginDir} is deprecated.
+        """
+        util.addPluginDir()
+        warnings = self.flushWarnings(offendingFunctions=[
+            self.test_addPluginDir])
+        self.assertEqual(
+            warnings[0]['message'],
+            "twisted.python.util.addPluginDir is deprecated since Twisted "
+            "12.1.")
+        self.assertEqual(warnings[0]['category'], DeprecationWarning)
+        self.assertEqual(len(warnings), 1)
+
+
