--- twisted-svn/trunk/twisted/web/client.py	2007-10-02 15:30:48.000000000 +0200
+++ /usr/share/pycentral/python-twisted-web/site-packages/twisted/web/client.py	2007-10-02 16:31:58.000000000 +0200
@@ -86,7 +86,8 @@
             self.handleStatusDefault()
             return
         url = l[0]
-        if self.followRedirect:
+        if self.followRedirect and (self.factory.redirectLimit is None or self.factory.redirectCount < self.factory.redirectLimit):
+            self.factory.redirectCount+=1
             scheme, host, port, path = \
                 _parse(url, defaultPort=self.transport.getPeer().port)
             self.factory.setURL(url)
@@ -200,13 +201,15 @@
     host = ''
     port = None
     path = None
+    redirectCount=0
 
     def __init__(self, url, method='GET', postdata=None, headers=None,
                  agent="Twisted PageGetter", timeout=0, cookies=None,
-                 followRedirect=1):
+                 followRedirect=1, redirectLimit=None):
         self.protocol.followRedirect = followRedirect
         self.timeout = timeout
         self.agent = agent
+        self.redirectLimit=redirectLimit
 
         if cookies is None:
             cookies = {}
@@ -289,7 +292,7 @@
 
     def __init__(self, url, fileOrName,
                  method='GET', postdata=None, headers=None,
-                 agent="Twisted client", supportPartial=0):
+                 agent="Twisted client", supportPartial=0, redirectLimit=None):
         self.requestedPartial = 0
         if isinstance(fileOrName, types.StringTypes):
             self.fileName = fileOrName
@@ -303,7 +306,7 @@
                     headers["range"] = "bytes=%d-" % fileLength
         else:
             self.file = fileOrName
-        HTTPClientFactory.__init__(self, url, method=method, postdata=postdata, headers=headers, agent=agent)
+        HTTPClientFactory.__init__(self, url, method=method, postdata=postdata, headers=headers, agent=agent, redirectLimit=redirectLimit)
         self.deferred = defer.Deferred()
         self.waiting = 1
 
@@ -390,7 +393,10 @@
     host, port = parsed[1], defaultPort
     if ':' in host:
         host, port = host.split(':')
-        port = int(port)
+        if port!='':
+            port = int(port)
+        else:
+            port = defaultPort
     if path == "":
         path = "/"
     return scheme, host, port, path
