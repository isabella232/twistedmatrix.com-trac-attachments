From f54ed5ad5d8f3933a2d3bf6c27eec2e668edf6f2 Mon Sep 17 00:00:00 2001
From: giadram <78812089+giadram@users.noreply.github.com>
Date: Tue, 9 Feb 2021 11:51:57 -0500
Subject: [PATCH] Constant compare time for check_password

---
 src/twisted/cred/credentials.py | 14 +++++++-------
 1 file changed, 7 insertions(+), 7 deletions(-)

diff --git a/src/twisted/cred/credentials.py b/src/twisted/cred/credentials.py
index 2a3a5bf579a..50a09c80222 100644
--- a/src/twisted/cred/credentials.py
+++ b/src/twisted/cred/credentials.py
@@ -159,7 +159,7 @@ def checkPassword(self, password):
             qop,
         )
 
-        return expected == response
+        return hmac.compare_digest(expected, response)
 
     def checkHash(self, digestHash):
         """
@@ -187,7 +187,7 @@ def checkHash(self, digestHash):
             qop,
         )
 
-        return expected == response
+        return hmac.compare_digest(expected, response)
 
 
 class DigestCredentialFactory:
@@ -320,7 +320,7 @@ def _verifyOpaque(self, opaque, nonce, clientip):
         if len(keyParts) != 3:
             raise error.LoginFailed("Invalid response, invalid opaque value")
 
-        if keyParts[0] != nonce:
+        if not hmac.compare_digest(keyParts[0], nonce):
             raise error.LoginFailed(
                 "Invalid response, incompatible opaque/nonce values"
             )
@@ -346,7 +346,7 @@ def _verifyOpaque(self, opaque, nonce, clientip):
 
         # Verify the digest
         digest = hexlify(md5(key + self.privateKey).digest())
-        if digest != opaqueParts[0]:
+        if not hmac.compare_digest(digest, opaqueParts[0]):
             raise error.LoginFailed("Invalid response, invalid opaque value")
 
         return True
@@ -439,7 +439,7 @@ def moreChallenges(self):
 
     def checkPassword(self, password):
         verify = hexlify(hmac.HMAC(password, self.challenge, digestmod=md5).digest())
-        return verify == self.response
+        return hmac.compare_digest(verify, self.response)
 
 
 @implementer(IUsernameHashedPassword)
@@ -457,7 +457,7 @@ def __init__(self, username, hashed):
         self.hashed = hashed
 
     def checkPassword(self, password):
-        return self.hashed == password
+        return hmac.compare_digest(self.hashed, password)
 
 
 @implementer(IUsernamePassword)
@@ -467,7 +467,7 @@ def __init__(self, username, password):
         self.password = password
 
     def checkPassword(self, password):
-        return self.password == password
+        return hmac.compare_digest(self.password, password)
 
 
 @implementer(IAnonymous)
