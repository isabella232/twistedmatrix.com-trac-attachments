diff --git twisted/conch/manhole_ssh.py twisted/conch/manhole_ssh.py
index a2297ef..7d55088 100644
--- twisted/conch/manhole_ssh.py
+++ twisted/conch/manhole_ssh.py
@@ -12,7 +12,6 @@ from zope.interface import implements
 
 from twisted.conch import avatar, interfaces as iconch, error as econch
 from twisted.conch.ssh import factory, keys, session
-from twisted.cred import credentials, checkers, portal
 from twisted.python import components
 
 from twisted.conch.insults import insults
@@ -35,11 +34,11 @@ class TerminalSessionTransport:
         self.avatar = avatar
         self.chainedProtocol = chainedProtocol
 
-        session = self.proto.session
+        protoSession = self.proto.session
 
         self.proto.makeConnection(
             _Glue(write=self.chainedProtocol.dataReceived,
-                  loseConnection=lambda: avatar.conn.sendClose(session),
+                  loseConnection=lambda: avatar.conn.sendClose(protoSession),
                   name="SSH Proto Transport"))
 
         def loseConnection():
diff --git twisted/conch/manhole_tap.py twisted/conch/manhole_tap.py
index 4df7c83..f53d606 100644
--- twisted/conch/manhole_tap.py
+++ twisted/conch/manhole_tap.py
@@ -11,8 +11,6 @@ from zope.interface import implements
 
 from twisted.internet import protocol
 from twisted.application import service, strports
-from twisted.conch.ssh import session
-from twisted.conch import interfaces as iconch
 from twisted.cred import portal, checkers
 from twisted.python import usage
 
diff --git twisted/conch/scripts/ckeygen.py twisted/conch/scripts/ckeygen.py
index 113f362..ac6d053 100644
--- twisted/conch/scripts/ckeygen.py
+++ twisted/conch/scripts/ckeygen.py
@@ -16,7 +16,7 @@ if getpass.getpass == getpass.unix_getpass:
         reload(getpass)
 
 from twisted.conch.ssh import keys
-from twisted.python import filepath, log, usage, randbytes
+from twisted.python import failure, filepath, log, usage, randbytes
 
 
 
@@ -74,11 +74,9 @@ def run():
 
 
 def handleError():
-    from twisted.python import failure
     global exitStatus
     exitStatus = 2
     log.err(failure.Failure())
-    reactor.stop()
     raise
 
 
@@ -108,7 +106,6 @@ def printFingerprint(options):
     try:
         key = keys.Key.fromFile(options['filename'])
         obj = key.keyObject
-        string = key.blob()
         print '%s %s %s' % (
             obj.size() + 1,
             key.fingerprint(),
diff --git twisted/conch/scripts/conch.py twisted/conch/scripts/conch.py
index 8c49544..91144ec 100644
--- twisted/conch/scripts/conch.py
+++ twisted/conch/scripts/conch.py
@@ -178,10 +178,6 @@ def doConnect():
 
 def _ebExit(f):
     global exitStatus
-    if hasattr(f.value, 'value'):
-        s = f.value.value
-    else:
-        s = str(f)
     exitStatus = "conch: exiting with error %s" % f
     reactor.callLater(0.1, _stopReactor)
 
@@ -469,11 +465,11 @@ def _leaveRawMode():
     if not _inRawMode:
         return
     fd = sys.stdin.fileno()
-    tty.tcsetattr(fd, tty.TCSANOW, _savedMode)
+    tty.tcsetattr(fd, tty.TCSANOW, _savedRawMode)
     _inRawMode = 0
 
 def _enterRawMode():
-    global _inRawMode, _savedMode
+    global _inRawMode, _savedRawMode
     if _inRawMode:
         return
     fd = sys.stdin.fileno()
@@ -502,7 +498,7 @@ def _enterRawMode():
         new[6][tty.VMIN] = 1
         new[6][tty.VTIME] = 0
 
-        _savedMode = old
+        _savedRawMode = old
         tty.tcsetattr(fd, tty.TCSANOW, new)
         #tty.setraw(fd)
         _inRawMode = 1
diff --git twisted/conch/scripts/tkconch.py twisted/conch/scripts/tkconch.py
index eb00186..80b18e9 100644
--- twisted/conch/scripts/tkconch.py
+++ twisted/conch/scripts/tkconch.py
@@ -6,7 +6,8 @@
 Implementation module for the `tkconch` command.
 """
 
-import Tkinter, tkFileDialog, tkFont, tkMessageBox, string
+import Tkinter, tkFileDialog, tkMessageBox
+from twisted.conch import error
 from twisted.conch.ui import tkvt100
 from twisted.conch.ssh import transport, userauth, connection, common, keys
 from twisted.conch.ssh import session, forwarding, channel
@@ -472,7 +473,7 @@ class SSHConnection(connection.SSHConnection):
                         (remotePort, hostport))
                 data = forwarding.packGlobal_tcpip_forward(
                     ('0.0.0.0', remotePort))
-                d = self.sendGlobalRequest('tcpip-forward', data)
+                self.sendGlobalRequest('tcpip-forward', data)
                 self.remoteForwards[remotePort] = hostport
 
 class SSHSession(channel.SSHChannel):
diff --git twisted/conch/ssh/agent.py twisted/conch/ssh/agent.py
index c1bf1a0..bbdf172 100644
--- twisted/conch/ssh/agent.py
+++ twisted/conch/ssh/agent.py
@@ -76,13 +76,13 @@ class SSHAgentClient(protocol.Protocol):
         if ord(data[0]) != AGENT_IDENTITIES_ANSWER:
             raise ConchError('unexpected response: %i' % ord(data[0]))
         numKeys = struct.unpack('!L', data[1:5])[0]
-        keys = []
+        result = []
         data = data[5:]
         for i in range(numKeys):
             blob, data = getNS(data)
             comment, data = getNS(data)
-            keys.append((blob, comment))
-        return keys
+            result.append((blob, comment))
+        return result
 
 
     def addIdentity(self, blob, comment = ''):
diff --git twisted/conch/ssh/common.py twisted/conch/ssh/common.py
index 3afa341..5e70d91 100644
--- twisted/conch/ssh/common.py
+++ twisted/conch/ssh/common.py
@@ -17,8 +17,6 @@ except ImportError:
     warnings.warn("PyCrypto not installed, but continuing anyways!",
             RuntimeWarning)
 
-from twisted.python import randbytes
-
 
 def NS(t):
     """
diff --git twisted/conch/ssh/filetransfer.py twisted/conch/ssh/filetransfer.py
index 9b11db0..44b7c69 100644
--- twisted/conch/ssh/filetransfer.py
+++ twisted/conch/ssh/filetransfer.py
@@ -51,11 +51,9 @@ class FileTransferBase(protocol.Protocol):
                 continue
             try:
                 f(data)
-            except:
+            except Exception:
                 log.err()
                 continue
-                reqId ,= struct.unpack('!L', data[:4])
-                self._ebStatus(failure.Failure(e), reqId)
 
     def _parseAttributes(self, data):
         flags ,= struct.unpack('!L', data[:4])
diff --git twisted/conch/telnet.py twisted/conch/telnet.py
index c90fe1a..7dccf18 100644
--- twisted/conch/telnet.py
+++ twisted/conch/telnet.py
@@ -974,7 +974,6 @@ class TelnetBootstrapProtocol(TelnetProtocol, ProtocolTransportMixin):
     linemodeSubcommands = {
         LINEMODE_SLC: 'SLC'}
     def telnet_LINEMODE(self, bytes):
-        revmap = {}
         linemodeSubcommand = bytes[0]
         if 0:
             # XXX TODO: This should be enabled to parse linemode subnegotiation.
diff --git twisted/conch/test/test_agent.py twisted/conch/test/test_agent.py
index 532a0e5..c53c1e6 100644
--- twisted/conch/test/test_agent.py
+++ twisted/conch/test/test_agent.py
@@ -7,11 +7,11 @@ Tests for L{twisted.conch.ssh.agent}.
 
 import struct
 
+from twisted.internet import reactor
+from twisted.internet.interfaces import ITLSTransport
 from twisted.trial import unittest
 
-try:
-    import OpenSSL
-except ImportError:
+if not ITLSTransport.providedBy(reactor):
     iosim = None
 else:
     from twisted.test import iosim
diff --git twisted/conch/test/test_checkers.py twisted/conch/test/test_checkers.py
index 98e4e6f..5f1bde7 100644
--- twisted/conch/test/test_checkers.py
+++ twisted/conch/test/test_checkers.py
@@ -26,8 +26,11 @@ from twisted.python.fakepwd import UserDatabase, ShadowDatabase
 from twisted.test.test_process import MockOS
 
 try:
-    import Crypto.Cipher.DES3
+    from Crypto.Cipher import DES3
     import pyasn1
+    # FIXME: #7014 Silence the linter.
+    DES3
+    pyasn1
 except ImportError:
     dependencySkip = "can't run without Crypto and PyASN1"
 else:
diff --git twisted/conch/test/test_ckeygen.py twisted/conch/test/test_ckeygen.py
index 272f947..8f66f13 100644
--- twisted/conch/test/test_ckeygen.py
+++ twisted/conch/test/test_ckeygen.py
@@ -12,6 +12,9 @@ from StringIO import StringIO
 try:
     import Crypto
     import pyasn1
+    # FIXME: #7014 Silence the linter.
+    Crypto
+    pyasn1
 except ImportError:
     skip = "PyCrypto and pyasn1 required for twisted.conch.scripts.ckeygen."
 else:
diff --git twisted/conch/test/test_default.py twisted/conch/test/test_default.py
index 109f23d..330352a 100644
--- twisted/conch/test/test_default.py
+++ twisted/conch/test/test_default.py
@@ -5,8 +5,11 @@
 Tests for L{twisted.conch.client.default}.
 """
 try:
-    import Crypto.Cipher.DES3
+    from Crypto.Cipher import DES3
     import pyasn1
+    # FIXME: #7014 Silence the linter.
+    DES3
+    pyasn1
 except ImportError:
     skip = "PyCrypto and PyASN1 required for twisted.conch.client.default."
 else:
diff --git twisted/conch/test/test_endpoints.py twisted/conch/test/test_endpoints.py
index 8597061..d945452 100644
--- twisted/conch/test/test_endpoints.py
+++ twisted/conch/test/test_endpoints.py
@@ -33,6 +33,9 @@ from twisted.conch.error import ConchError, UserRejectedKey, HostKeyChanged
 try:
     from Crypto.Cipher import AES
     from pyasn1 import type
+    # FIXME: #7014 Silence the linter.
+    AES
+    type
 except ImportError as e:
     skip = "can't run w/o PyCrypto and pyasn1 (%s)" % (e,)
     SSHFactory = SSHUserAuthServer = SSHConnection = Key = SSHChannel = \
diff --git twisted/conch/test/test_filetransfer.py twisted/conch/test/test_filetransfer.py
index 8216602..e6313c8 100644
--- twisted/conch/test/test_filetransfer.py
+++ twisted/conch/test/test_filetransfer.py
@@ -9,7 +9,6 @@ Tests for L{twisted.conch.ssh.filetransfer}.
 import os
 import re
 import struct
-import sys
 
 from twisted.trial import unittest
 try:
diff --git twisted/conch/test/test_insults.py twisted/conch/test/test_insults.py
index b3b0dfa..553ffb8 100644
--- twisted/conch/test/test_insults.py
+++ twisted/conch/test/test_insults.py
@@ -2,6 +2,7 @@
 # Copyright (c) Twisted Matrix Laboratories.
 # See LICENSE for details.
 
+from twisted.python.reflect import namedAny
 from twisted.trial import unittest
 from twisted.test.proto_helpers import StringTransport
 
@@ -480,7 +481,7 @@ class Deprecations(unittest.TestCase):
         """
         The L{insults.colors} module is deprecated
         """
-        from twisted.conch.insults import colors
+        namedAny('twisted.conch.insults.colors')
         self.ensureDeprecated("twisted.conch.insults.colors was deprecated "
                               "in Twisted 10.1.0: Please use "
                               "twisted.conch.insults.helper instead.")
@@ -490,7 +491,7 @@ class Deprecations(unittest.TestCase):
         """
         The L{insults.client} module is deprecated
         """
-        from twisted.conch.insults import client
+        namedAny('twisted.conch.insults.client')
         self.ensureDeprecated("twisted.conch.insults.client was deprecated "
                               "in Twisted 10.1.0: Please use "
                               "twisted.conch.insults.insults instead.")
diff --git twisted/conch/test/test_knownhosts.py twisted/conch/test/test_knownhosts.py
index f584cdf..19988e7 100644
--- twisted/conch/test/test_knownhosts.py
+++ twisted/conch/test/test_knownhosts.py
@@ -11,6 +11,9 @@ from binascii import Error as BinasciiError, b2a_base64, a2b_base64
 try:
     import Crypto
     import pyasn1
+    # FIXME: #7014 Silence the linter.
+    Crypto
+    pyasn1
 except ImportError:
     skip = "PyCrypto and PyASN1 required for twisted.conch.knownhosts."
 else:
diff --git twisted/conch/test/test_mixin.py twisted/conch/test/test_mixin.py
index 592aa48..bc718f2 100644
--- twisted/conch/test/test_mixin.py
+++ twisted/conch/test/test_mixin.py
@@ -2,10 +2,6 @@
 # Copyright (c) Twisted Matrix Laboratories.
 # See LICENSE for details.
 
-import time
-
-from twisted.internet import reactor, protocol
-
 from twisted.trial import unittest
 from twisted.test.proto_helpers import StringTransport
 
diff --git twisted/conch/test/test_openssh_compat.py twisted/conch/test/test_openssh_compat.py
index 2713fcc..c7f99d8 100644
--- twisted/conch/test/test_openssh_compat.py
+++ twisted/conch/test/test_openssh_compat.py
@@ -13,6 +13,9 @@ from twisted.python.filepath import FilePath
 try:
     import Crypto.Cipher.DES3
     import pyasn1
+    # FIXME: #7014 Silence the linter
+    Crypto.Cipher.DES3
+    pyasn1
 except ImportError:
     OpenSSHFactory = None
 else:
diff --git twisted/conch/test/test_scripts.py twisted/conch/test/test_scripts.py
index ae90e82..0abd79f 100644
--- twisted/conch/test/test_scripts.py
+++ twisted/conch/test/test_scripts.py
@@ -7,6 +7,7 @@ Tests for the command-line interfaces to conch.
 
 try:
     import pyasn1
+    pyasn1  # FIXME: #7014 Silence the linter.
 except ImportError:
     pyasn1Skip =  "Cannot run without PyASN1"
 else:
@@ -14,6 +15,7 @@ else:
 
 try:
     import Crypto
+    Crypto  # FIXME: #7014 Silence the linter.
 except ImportError:
     cryptoSkip = "can't run w/o PyCrypto"
 else:
@@ -21,6 +23,7 @@ else:
 
 try:
     import tty
+    tty  # FIXME: #7014 Silence the linter.
 except ImportError:
     ttySkip = "can't run w/o tty"
 else:
diff --git twisted/conch/test/test_tap.py twisted/conch/test/test_tap.py
index 9a88f98..94e6626 100644
--- twisted/conch/test/test_tap.py
+++ twisted/conch/test/test_tap.py
@@ -83,6 +83,7 @@ class MakeServiceTest(TestCase):
         numCheckers = 2
         try:
             from twisted.cred import pamauth
+            pamauth  # FIXME: #7014 Silence the linter.
             self.assertIn(IPluggableAuthenticationModules,
                 self.options['credInterfaces'],
                 "PAM should be one of the modules")
diff --git twisted/conch/test/test_telnet.py twisted/conch/test/test_telnet.py
index 9b5bf76..a1aa490 100644
--- twisted/conch/test/test_telnet.py
+++ twisted/conch/test/test_telnet.py
@@ -497,7 +497,7 @@ class TelnetTransportTestCase(unittest.TestCase):
         # fail quickly with the right exception.
         s = self.p.getOptionState('\x24')
         s.him.state = 'yes'
-        d2 = self.p.dont('\x24') # fires after the first line of _final
+        self.p.dont('\x24') # fires after the first line of _final
 
         def _do(x):
             d = self.p.do('\x24')
diff --git twisted/conch/test/test_userauth.py twisted/conch/test/test_userauth.py
index 1990cce..67e3f50 100644
--- twisted/conch/test/test_userauth.py
+++ twisted/conch/test/test_userauth.py
@@ -22,8 +22,11 @@ from twisted.protocols import loopback
 from twisted.trial import unittest
 
 try:
-    import Crypto.Cipher.DES3
+    from Crypto.Cipher import DES3
     import pyasn1
+    # FIXME: #7014 Silence the linter.
+    DES3
+    pyasn1
 except ImportError:
     keys = None
 
diff --git twisted/conch/ui/tkvt100.py twisted/conch/ui/tkvt100.py
index cd7581d..4824179 100644
--- twisted/conch/ui/tkvt100.py
+++ twisted/conch/ui/tkvt100.py
@@ -111,7 +111,7 @@ class VT100Frame(Tkinter.Frame):
                 if self.x:
                     self.x-=1
             elif b == 9: # TAB
-                [self._write(' ',fg,bg) for i in range(8)]
+                [self._write(' ',fg,bg) for index in range(8)]
             elif b == 10:
                 if self.y == self.height-1:
                     self._delete(0,0,self.width,0)
