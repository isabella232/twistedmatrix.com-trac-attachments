Index: twisted/manhole/telnet.py
===================================================================
--- twisted/manhole/telnet.py	(revision 17179)
+++ twisted/manhole/telnet.py	(working copy)
@@ -10,7 +10,7 @@
 from twisted.python import log, failure
 
 # system imports
-import string, copy, sys
+import string, copy, sys, pydoc
 from cStringIO import StringIO
 
 
@@ -98,6 +98,7 @@
 
     def __init__(self):
         self.namespace = {
+            'help': pydoc.Helper(file('/dev/null'), sys.stdout),
             'factory': self,
             'service': None,
             '_': None
Index: twisted/manhole/service.py
===================================================================
--- twisted/manhole/service.py	(revision 17179)
+++ twisted/manhole/service.py	(working copy)
@@ -24,8 +24,8 @@
 import sys
 import traceback
 import types
+import pydoc
 
-
 class FakeStdIO:
     def __init__(self, type_, list):
         self.type = type_
@@ -192,6 +192,7 @@
     lastDeferred = 0
     def __init__(self, service):
         self.localNamespace = {
+            "help": pydoc.Helper(file('/dev/null'), sys.stdout),
             "service": service,
             "avatar": self,
             "_": None,
Index: twisted/conch/manhole.py
===================================================================
--- twisted/conch/manhole.py	(revision 17179)
+++ twisted/conch/manhole.py	(working copy)
@@ -14,7 +14,7 @@
 @author: U{Jp Calderone<mailto:exarkun@twistedmatrix.com>}
 """
 
-import code, sys, StringIO, tokenize
+import code, sys, StringIO, tokenize, pydoc
 
 from twisted.conch import recvline
 
@@ -150,9 +150,12 @@
     namespace = None
 
     def __init__(self, namespace=None):
-        recvline.HistoricRecvLine.__init__(self, namespace)
-        if namespace is not None:
-            self.namespace = namespace.copy()
+        super(Manhole, self).__init__()
+        if namespace is None:
+            namespace = {
+                '__name__': '__manhole__',
+                'help': pydoc.Helper(file('/dev/null'), sys.stdout)}
+        self.namespace = namespace.copy()
 
     def connectionMade(self):
         recvline.HistoricRecvLine.connectionMade(self)
