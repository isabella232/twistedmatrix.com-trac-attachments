diff --git twisted/web/domhelpers.py twisted/web/domhelpers.py
index e6f1b51..18da4e7 100644
--- twisted/web/domhelpers.py
+++ twisted/web/domhelpers.py
@@ -9,7 +9,7 @@ A library for performing interesting tasks with DOM objects.
 import StringIO
 
 from twisted.web import microdom
-from twisted.web.microdom import getElementsByTagName, escape, unescape
+from twisted.web.microdom import unescape
 
 
 class NodeLookupError(Exception):
diff --git twisted/web/http.py twisted/web/http.py
index fe29fe7..d1dbab9 100644
--- twisted/web/http.py
+++ twisted/web/http.py
@@ -75,7 +75,6 @@ try:
 except ImportError:
     from urllib.parse import (
         ParseResultBytes, urlparse as _urlparse, unquote as _unquote)
-    from io import TextIOWrapper
 
     def unquote(string, *args, **kwargs):
         return _unquote(string.decode('charmap'), *args, **kwargs).encode('charmap')
diff --git twisted/web/microdom.py twisted/web/microdom.py
index ca35612..11873c6 100644
--- twisted/web/microdom.py
+++ twisted/web/microdom.py
@@ -22,8 +22,6 @@ Microdom mainly focuses on working with HTML and XHTML.
 import re
 from cStringIO import StringIO
 
-# create NodeList class
-from types import ListType as NodeList
 from types import StringTypes, UnicodeType
 
 # Twisted Imports
diff --git twisted/web/tap.py twisted/web/tap.py
index 23abf50..3fbc8a7 100644
--- twisted/web/tap.py
+++ twisted/web/tap.py
@@ -172,6 +172,7 @@ demo webserver that has the Test class from twisted.web.demo in it."""
         if self['https']:
             try:
                 from twisted.internet.ssl import DefaultOpenSSLContextFactory
+                DefaultOpenSSLContextFactory  # Silence the linter.
             except ImportError:
                 raise usage.UsageError("SSL support not installed")
         if self['port'] is None:
diff --git twisted/web/test/test_distrib.py twisted/web/test/test_distrib.py
index c6e2ae3..7d58a27 100755
--- twisted/web/test/test_distrib.py
+++ twisted/web/test/test_distrib.py
@@ -14,12 +14,12 @@ except ImportError:
 
 from zope.interface.verify import verifyObject
 
-from twisted.python import log, filepath
+from twisted.python import filepath
 from twisted.internet import reactor, defer
 from twisted.trial import unittest
 from twisted.spread import pb
 from twisted.spread.banana import SIZE_LIMIT
-from twisted.web import http, distrib, client, resource, static, server
+from twisted.web import distrib, client, resource, static, server
 from twisted.web.test.test_web import DummyRequest
 from twisted.web.test._util import _render
 from twisted.test import proto_helpers
diff --git twisted/web/test/test_http.py twisted/web/test/test_http.py
index 5a0a853..19a0c50 100644
--- twisted/web/test/test_http.py
+++ twisted/web/test/test_http.py
@@ -8,11 +8,13 @@ Test HTTP support.
 import random, cgi, base64
 
 try:
-    from urlparse import (
-        ParseResult as ParseResultBytes, urlparse, urlunsplit, clear_cache)
+    from urlparse import urlparse, urlunsplit, clear_cache
+    # Silence the linter.
+    urlparse
+    urlunsplit
+    clear_cache
 except ImportError:
-    from urllib.parse import (
-        ParseResultBytes, urlparse, urlunsplit, clear_cache)
+    from urllib.parse import urlparse, urlunsplit, clear_cache
 
 from twisted.python.compat import _PY3, iterbytes, networkString, unicode, intToBytes
 from twisted.python.failure import Failure
diff --git twisted/web/test/test_http_headers.py twisted/web/test/test_http_headers.py
index 3209e40..7a12a06 100644
--- twisted/web/test/test_http_headers.py
+++ twisted/web/test/test_http_headers.py
@@ -7,8 +7,6 @@ Tests for L{twisted.web.http_headers}.
 
 from __future__ import division, absolute_import
 
-import sys
-
 from twisted.python.compat import _PY3
 from twisted.trial.unittest import TestCase
 from twisted.web.http_headers import _DictHeaders, Headers
diff --git twisted/web/test/test_wsgi.py twisted/web/test/test_wsgi.py
index 7925ecf..4e902e5 100644
--- twisted/web/test/test_wsgi.py
+++ twisted/web/test/test_wsgi.py
@@ -911,7 +911,7 @@ class StartResponseTests(WSGITestsMixin, TestCase):
                     'HTTP/1.1 107 Strange message'))
         d.addCallback(cbRendered)
 
-        request = self.lowLevelRender(
+        self.lowLevelRender(
             requestFactory, applicationFactory,
             lambda: channel, 'GET', '1.1', [], [''], None, [])
 
@@ -951,7 +951,7 @@ class StartResponseTests(WSGITestsMixin, TestCase):
 
         d.addCallback(cbRendered)
 
-        request = self.lowLevelRender(
+        self.lowLevelRender(
             requestFactory, applicationFactory,
             lambda: channel, 'GET', '1.1', [], [''], None, [])
         return d
@@ -1015,7 +1015,7 @@ class StartResponseTests(WSGITestsMixin, TestCase):
             self.assertEqual(intermediateValues, [''])
         d.addCallback(cbRendered)
 
-        request = self.lowLevelRender(
+        self.lowLevelRender(
             requestFactory, applicationFactory,
             lambda: channel, 'GET', '1.1', [], [''], None, [])
 
@@ -1050,7 +1050,7 @@ class StartResponseTests(WSGITestsMixin, TestCase):
             self.assertTrue(intermediateValues[1])
         d.addCallback(cbRendered)
 
-        request = self.lowLevelRender(
+        self.lowLevelRender(
             requestFactory, applicationFactory,
             lambda: channel, 'GET', '1.1', [], [''], None, [])
 
@@ -1087,7 +1087,7 @@ class StartResponseTests(WSGITestsMixin, TestCase):
                 'foobar')
         d.addCallback(cbRendered)
 
-        request = self.lowLevelRender(
+        self.lowLevelRender(
             requestFactory, applicationFactory,
             lambda: channel, 'GET', '1.1', [], [''], None, [])
 
@@ -1116,7 +1116,7 @@ class StartResponseTests(WSGITestsMixin, TestCase):
                     'HTTP/1.1 200 Bar\r\n'))
         d.addCallback(cbRendered)
 
-        request = self.lowLevelRender(
+        self.lowLevelRender(
             requestFactory, applicationFactory,
             lambda: channel, 'GET', '1.1', [], [''], None, [])
 
@@ -1144,7 +1144,7 @@ class StartResponseTests(WSGITestsMixin, TestCase):
                     'HTTP/1.1 100 Foo\r\n'))
         d.addCallback(cbRendered)
 
-        request = self.lowLevelRender(
+        self.lowLevelRender(
             requestFactory, applicationFactory,
             lambda: channel, 'GET', '1.1', [], [''], None, [])
 
@@ -1191,7 +1191,7 @@ class StartResponseTests(WSGITestsMixin, TestCase):
 
         d.addCallback(cbRendered)
 
-        request = self.lowLevelRender(
+        self.lowLevelRender(
             requestFactory, applicationFactory,
             lambda: channel, 'GET', '1.1', [], [''], None, [])
 
@@ -1229,7 +1229,7 @@ class StartResponseTests(WSGITestsMixin, TestCase):
                 'foobar')
         d.addCallback(cbRendered)
 
-        request = self.lowLevelRender(
+        self.lowLevelRender(
             requestFactory, applicationFactory,
             lambda: channel, 'GET', '1.1', [], [''], None, [])
 
@@ -1469,7 +1469,7 @@ class ApplicationTests(WSGITestsMixin, TestCase):
                     'HTTP/1.1 500 Internal Server Error'))
         d.addCallback(cbRendered)
 
-        request = self.lowLevelRender(
+        self.lowLevelRender(
             requestFactory, applicationFactory,
             lambda: channel, 'GET', '1.1', [], [''], None, [])
 
@@ -1522,7 +1522,7 @@ class ApplicationTests(WSGITestsMixin, TestCase):
             self.assertIn(responseContent, response)
         d.addErrback(ebRendered)
 
-        request = self.lowLevelRender(
+        self.lowLevelRender(
             requestFactoryWrapper, applicationFactory,
             lambda: channel, 'GET', '1.1', [], [''], None, [])
 
diff --git twisted/web/test/test_xml.py twisted/web/test/test_xml.py
index 513a943..fce0f66 100644
--- twisted/web/test/test_xml.py
+++ twisted/web/test/test_xml.py
@@ -622,7 +622,8 @@ alert("I hate you");
 
     def testDict(self):
         n = microdom.Element("p")
-        d = {n : 1} # will fail if Element is unhashable
+        d = {n: 1}  # will fail if Element is unhashable
+        d  # Silence the linter.
 
     def testEscaping(self):
         # issue 590
diff --git twisted/web/test/test_xmlrpc.py twisted/web/test/test_xmlrpc.py
index bad6b77..5eec02e 100644
--- twisted/web/test/test_xmlrpc.py
+++ twisted/web/test/test_xmlrpc.py
@@ -21,7 +21,9 @@ from twisted.python import failure
 from twisted.test.proto_helpers import MemoryReactor
 from twisted.web.test.test_web import DummyRequest
 try:
-    import twisted.internet.ssl
+    from twisted.internet import ssl
+    # Silence the linter.
+    ssl
 except ImportError:
     sslSkip = "OpenSSL not present"
 else:
diff --git twisted/web/topfiles/setup.py twisted/web/topfiles/setup.py
index 0ba08f1..dd23923 100644
--- twisted/web/topfiles/setup.py
+++ twisted/web/topfiles/setup.py
@@ -1,8 +1,6 @@
 # Copyright (c) Twisted Matrix Laboratories.
 # See LICENSE for details.
 
-import sys
-
 try:
     from twisted.python import dist
 except ImportError:
