Index: ../google.py
===================================================================
--- ../google.py	(révision 32383)
+++ ../google.py	(copie de travail)
@@ -7,9 +7,16 @@
 import urllib
 from twisted.internet import protocol, reactor, defer
 from twisted.web import http
+from twisted.python.deprecate import deprecatedModuleAttribute
+from twisted.python.versions import Version
 
 class GoogleChecker(http.HTTPClient):
 
+    deprecatedModuleAttribute(
+        Version('Twisted',11,1,0),
+        "Google module is deprecated. Use Google's API instead",
+        __name__, "GoogleChecker")
+
     def connectionMade(self):
         self.sendCommand('GET', self.factory.url)
         self.sendHeader('Host', self.factory.host)
@@ -40,6 +47,11 @@
 
 class GoogleCheckerFactory(protocol.ClientFactory):
 
+    deprecatedModuleAttribute(
+        Version('Twisted',11,1,0),
+        "Google module is deprecated. Use Google's API instead",
+        __name__, "GoogleCheckerFactory")
+
     protocol = GoogleChecker
 
     def __init__(self, words):

Index: test_web.py
===================================================================
--- test_web.py	(révision 32383)
+++ test_web.py	(copie de travail)
@@ -552,10 +552,18 @@
         d.addCallback(self.assertEqual, 'http://twistedmatrix.com/')
         return d
 
+    def test_deprecatedModule(self):
+        google.GoogleChecker
+        google.GoogleCheckerFactory
+        warnings = self.flushWarnings([self.test_deprecatedModule])
+        self.assertEqual(len(warnings),2)
+        self.assertEqual(warnings[0]['category'],DeprecationWarning)
+        self.assertIn("Google module is deprecated. Use Google's API instead",warnings[0]['message'])
 
 
 
 
+
 class RequestTests(unittest.TestCase):
     """
     Tests for the HTTP request class, L{server.Request}.
