diff --git a/twisted/enterprise/adbapi.py b/twisted/enterprise/adbapi.py
index 750b0c2..615d5b5 100644
--- a/twisted/enterprise/adbapi.py
+++ b/twisted/enterprise/adbapi.py
@@ -1,5 +1,5 @@
 # -*- test-case-name: twisted.test.test_adbapi -*-
-# Copyright (c) 2001-2009 Twisted Matrix Laboratories.
+# Copyright (c) 2001-2010 Twisted Matrix Laboratories.
 # See LICENSE for details.
 
 """
@@ -158,7 +158,7 @@ class ConnectionPool:
     @type transactionFactory: any callable
     """
 
-    CP_ARGS = "min max name noisy openfun reconnect good_sql".split()
+    CP_ARGS = "min max name noisy openfun reconnect good_sql arraysize".split()
 
     noisy = False # if true, generate informational log messages
     min = 3 # minimum number of connections in pool
@@ -167,6 +167,7 @@ class ConnectionPool:
     openfun = None # A function to call on new connections
     reconnect = False # reconnect when connections fail
     good_sql = 'select 1' # a query which should always succeed
+    arraysize = 1 # The arraysize to push into cursors we create.
 
     running = False # true when the pool is operating
     connectionFactory = Connection
@@ -202,6 +203,12 @@ class ConnectionPool:
 
         @param cp_good_sql: an sql query which should always succeed and change
                             no state (default 'select 1')
+
+        @param cp_arraysize: Cursor objects that this ConnectionPool creates to
+            handle the results of L{runQuery} or L{runInteraction} will have
+            their arraysize attribute set to this value. This is the number of
+            rows that will be fetched at a time with a subsequent
+            cursor.fetchall() or cursor.fetchmany() (default 1).
         """
 
         self.dbapiName = dbapiName
@@ -349,10 +356,6 @@ class ConnectionPool:
         The  *args and **kw arguments will be passed to the DB-API cursor's
         'execute' method.
 
-        @param cp_arraysize: Change the cursor's arraysize from the DB-API's
-            default.  This is the number of rows that will be fetched at a
-            time with a subsequent cursor.fetchall() or cursor.fetchmany().
-
         @return: a Deferred which will fire the return value of a DB-API
             cursor's 'fetchall' method, or a Failure.
         """
@@ -451,6 +454,13 @@ class ConnectionPool:
     def _runInteraction(self, interaction, *args, **kw):
         conn = self.connectionFactory(self)
         trans = self.transactionFactory(self, conn)
+
+        # The public cursor object on the Transaction class was introduced
+        # after Twisted 9.0.0, so check whether it exists before prodding it.
+        cursor = getattr(trans, "cursor", None)
+        if cursor:
+            cursor.arraysize = self.arraysize
+
         try:
             result = interaction(trans, *args, **kw)
             trans.close()
@@ -466,8 +476,6 @@ class ConnectionPool:
 
 
     def _runQuery(self, trans, *args, **kw):
-        if 'cp_arraysize' in kw:
-            trans.cursor.arraysize = kw.pop('cp_arraysize')
         trans.execute(*args, **kw)
         return trans.fetchall()
 
diff --git a/twisted/test/mock_dbapi.py b/twisted/test/mock_dbapi.py
index 931eb04..6dc8afa 100644
--- a/twisted/test/mock_dbapi.py
+++ b/twisted/test/mock_dbapi.py
@@ -1,4 +1,4 @@
-# Copyright (c) 2009 Twisted Matrix Laboratories.
+# Copyright (c) 2009-2010 Twisted Matrix Laboratories.
 # See LICENSE for details.
 
 """
@@ -50,6 +50,7 @@ class Cursor(object):
 
     def __init__(self, connection):
         self._connection = connection
+        self.arraysize = 1 # default as required by DBAPI
 
 
     def execute(self, sql, *args, **kwargs):
diff --git a/twisted/test/test_adbapi.py b/twisted/test/test_adbapi.py
index 90ee498..80ed7f2 100644
--- a/twisted/test/test_adbapi.py
+++ b/twisted/test/test_adbapi.py
@@ -1,4 +1,4 @@
-# Copyright (c) 2001-2009 Twisted Matrix Laboratories.
+# Copyright (c) 2001-2010 Twisted Matrix Laboratories.
 # See LICENSE for details.
 
 
@@ -793,18 +793,17 @@ class ConnectionPoolTestCase(unittest.TestCase):
 class ArraySizeTestCase(unittest.TestCase):
     """
     Test setting cursor attribute, arraysize.
-    Test is run with mock_dbapi module to verify database independent behaviour.
+    Test is run with mock_dbapi module to verify database independent
+    behaviour.
     """
 
-    def test_arraysize(self):
+    def test_arraysizeAffectsRunQuery(self):
         """
-        Test that passing in C{cp_arraysize} to runQuery actually sets the
-        attribute on the cursor that the transaction is executed with.
+        Test that passing in C{cp_arraysize} to ConnectionPool actually sets
+        the attribute on the cursor that the query is executed with.
         """
-        self.dbpool = ConnectionPool('twisted.test.mock_dbapi',
-                                     cp_min=1, cp_max=1)
 
-        def _verifyArraysize(ignored, actualSize, sizeId):
+        def _verifyArraysize(ignored, dbpool, actualSize, sizeId):
             """
             Verify the arraysize attribute was actually set on the cursor.
 
@@ -814,7 +813,7 @@ class ArraySizeTestCase(unittest.TestCase):
             @param sizeId: The unique reference that was passed into the
                            cursor to track the cursor's arraysize attribute.
             """
-            connection = self.dbpool.connections.values()[0]
+            connection = dbpool.connections.values()[0]
             expectedSize = connection.getArraysize(sizeId)
             self.assertEquals(actualSize, expectedSize,
                               "arraysize is: %s, expected: %s" %
@@ -824,10 +823,11 @@ class ArraySizeTestCase(unittest.TestCase):
             """
             Run a database query with an arraysize attribute.
             """
-            d = self.dbpool.runQuery(
-                "select count(1) from simple",
-                cp_arraysize=arraysize, sizeId=sizeId)
-            d.addCallback(_verifyArraysize, arraysize, sizeId)
+            dbpool = ConnectionPool('twisted.test.mock_dbapi',
+                cp_min=1, cp_max=1, cp_arraysize=arraysize)
+            d = dbpool.runQuery(
+                "select count(1) from simple", sizeId=sizeId)
+            d.addCallback(_verifyArraysize, dbpool, arraysize, sizeId)
             return d
 
         dl = []
@@ -835,3 +835,21 @@ class ArraySizeTestCase(unittest.TestCase):
             dl.append(_callRunQuery(sizeId, arraysize))
 
         return defer.gatherResults(dl)
+
+
+    def test_arraysizeAffectsRunInteraction(self):
+        """
+        ConnectionPool sets runInteraction's cursor size.
+        """
+
+        def _interaction(cursor, expectedArraysize):
+            self.failUnlessEqual(cursor.arraysize, expectedArraysize)
+
+        dl = []
+        for arraysize in [50, 100, 150, 200]:
+            dbpool = ConnectionPool('twisted.test.mock_dbapi',
+                cp_min=1, cp_max=1, cp_arraysize=arraysize)
+
+            dl.append(dbpool.runInteraction(_interaction, arraysize))
+
+        return defer.gatherResults(dl)
