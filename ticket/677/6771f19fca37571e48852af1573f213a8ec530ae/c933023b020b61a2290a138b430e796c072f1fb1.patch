Index: twisted/test/test_adbapi.py
===================================================================
--- twisted/test/test_adbapi.py	(revision 27222)
+++ twisted/test/test_adbapi.py	(working copy)
@@ -1,4 +1,4 @@
-# Copyright (c) 2001-2008 Twisted Matrix Laboratories.
+# Copyright (c) 2009 Twisted Matrix Laboratories.
 # See LICENSE for details.
 
 
@@ -772,3 +772,45 @@
         d.addCallback(cbFailed)
         return d
 
+
+
+class ArraySizeTestCase(unittest.TestCase):
+    """
+    Test setting cursor attribute, arraysize.
+    Test is run with mock_dbapi module to verify database independent behaviour.
+    """
+
+    def test_arraysize(self):
+        """
+        Test that passing in arraysize to runQuery actually sets the
+        attribute on the cursor that the transaction is executed with.
+        """
+        self.dbpool = ConnectionPool('twisted.test.mock_dbapi')
+
+        def _verifyArraysize(ignored, actualSize, sizeId):
+            """
+            Verify the arraysize attribute was actually set on the cursor.
+
+            @param ignored: the result of the database query (not used)
+            @param actualSize: The actual arraysize that was passed in to the
+                               cursor when the query was executed.
+            @param sizeId: The unique reference that was passed into the
+                           cursor to track the cursor's arraysize attribute.
+            """
+            expectedSize = (self.dbpool.connections.values()[0].cursor()
+                            .getArraysize(sizeId))
+            self.assertEquals(actualSize, expectedSize,
+                              "arraysize is: %s, expected: %s" %
+                              (actualSize, expectedSize))
+
+        def _callRunQuery(sizeId, arraysize):
+            """Run a database query with an arraysize attribute."""
+            d = self.dbpool.runQuery("select count(1) from simple",
+                    arraysize=arraysize, sizeId=sizeId)
+            return d.addCallback(_verifyArraysize, arraysize, sizeId)
+
+        dl = []
+        for sizeId, arraysize in enumerate((50, 100, 150, 200)):
+            dl.append(_callRunQuery(sizeId, arraysize))
+
+        return defer.DeferredList(dl)
Index: twisted/test/mock_dbapi.py
===================================================================
--- twisted/test/mock_dbapi.py	(revision 0)
+++ twisted/test/mock_dbapi.py	(revision 0)
@@ -0,0 +1,77 @@
+# Copyright (c) 2009 Twisted Matrix Laboratories.
+# See LICENSE for details.
+
+"""
+This is a mock dbapi.
+
+The purpose of this module is to mock a DB-API 2.0 compatible module in order
+to track the arraysize attribute of a cursor.  It is suitable to be referenced
+by the dbapiName parameter of an adbapi.ConnectionPool.
+"""
+
+class Connection(object):
+    """
+    A mock DB-API 2.0 Connection class.
+    """
+
+    def __init__(self, *args, **kwargs):
+        pass
+
+
+    def cursor(self):
+        return Cursor(self)
+
+
+    def commit(self):
+        pass
+
+
+    def close(self):
+        pass
+
+
+
+class Cursor(object):
+    """
+    A mock DB-API 2.0 Cursor class.
+    """
+
+    # track arraysize attribute by passed in 'sizeId' attribute on cursor
+    __sizes = {}
+
+    def __init__(self, conn):
+        self.conn = conn
+
+
+    def execute(self, sql, *args, **kwargs):
+        """
+        Track the arraysize attribute of the cursor.
+        """
+
+        try:
+            self.__sizes[kwargs.pop('sizeId')] = self.arraysize
+        except:
+            pass
+        return None
+
+
+    def fetchall(self):
+        return [[1]]
+
+
+    def close(self):
+        pass
+
+
+    def getArraysize(self, sizeId):
+        """
+        Return the arraysize attribute of the cursor that was executed
+        with this sizeId.
+        """
+
+        return self.__sizes.get(sizeId)
+
+
+
+def connect(*args, **kwargs):
+    return Connection(*args, **kwargs)
Index: twisted/enterprise/adbapi.py
===================================================================
--- twisted/enterprise/adbapi.py	(revision 27222)
+++ twisted/enterprise/adbapi.py	(working copy)
@@ -1,5 +1,5 @@
 # -*- test-case-name: twisted.test.test_adbapi -*-
-# Copyright (c) 2001-2008 Twisted Matrix Laboratories.
+# Copyright (c) 2009 Twisted Matrix Laboratories.
 # See LICENSE for details.
 
 """
@@ -327,6 +327,10 @@
         The  *args and **kw arguments will be passed to the DB-API cursor's
         'execute' method.
 
+        @param arraysize: Change the cursor's arraysize from the DB-API's
+            default.  This is the number of rows that will be fetched at a
+            time with a subsequent cursor.fetchall() or cursor.fetchmany().
+
         @return: a Deferred which will fire the return value of a DB-API
         cursor's 'fetchall' method, or a Failure.
         """
@@ -440,6 +444,8 @@
 
 
     def _runQuery(self, trans, *args, **kw):
+        if 'arraysize' in kw:
+            trans._cursor.arraysize = kw.pop('arraysize')
         trans.execute(*args, **kw)
         return trans.fetchall()
 
