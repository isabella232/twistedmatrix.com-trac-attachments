diff --git a/twisted/python/failure.py b/twisted/python/failure.py
index bf928e0..d8bb078 100644
--- a/twisted/python/failure.py
+++ b/twisted/python/failure.py
@@ -102,11 +102,23 @@ class _Traceback(object):
 class _Frame(object):
     """
     A fake frame object, used by L{_Traceback}.
+
+    @ivar f_code: fake L{code<types.CodeType>} object
+    @ivar f_globals: fake f_globals dictionary (usually empty)
+    @ivar f_locals: fake f_locals dictionary (usually empty)
     """
 
     def __init__(self, name, filename):
+        """
+        @param name: method/function name for this frame.
+        @type name: C{str}
+        @param filename: filename for this frame.
+        @type name: C{str}
+        """
+
         self.f_code = _Code(name, filename)
         self.f_globals = {}
+        self.f_locals = {}
 
 
 class _Code(object):
diff --git a/twisted/test/test_failure.py b/twisted/test/test_failure.py
index 7dc0ab1..c623bac 100644
--- a/twisted/test/test_failure.py
+++ b/twisted/test/test_failure.py
@@ -314,5 +314,21 @@ class TestFormattableTraceback(unittest.TestCase):
                           ('filename.py', 235, 'method2', None)])
 
 
+class TestFrameAttributes(unittest.TestCase):
+    """
+    _Frame objects should possess some basic attributes that qualify them as
+    fake python Frame objects.
+    """
+
+    def test_fakeFrameAttributes(self):
+        """
+        basic _Frame attributes faking.
+        """
+        frame = failure._Frame("dummyname", "dummyfilename")
+        self.assert_(isinstance(frame.f_globals, dict))
+        self.assert_(isinstance(frame.f_locals, dict))
+        self.assert_(isinstance(frame.f_code, failure._Code))
+
+
 if sys.version_info[:2] >= (2, 5):
     from twisted.test.generator_failure_tests import TwoPointFiveFailureTests
diff --git a/twisted/topfiles/4045.feature b/twisted/topfiles/4045.feature
new file mode 100644
index 0000000..bcbe81e
--- /dev/null
+++ b/twisted/topfiles/4045.feature
@@ -0,0 +1 @@
+twisted.python.failure._Frame objects now support fake f_locals attribute.
