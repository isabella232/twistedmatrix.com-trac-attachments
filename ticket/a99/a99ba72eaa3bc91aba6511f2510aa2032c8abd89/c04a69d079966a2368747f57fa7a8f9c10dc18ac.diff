Index: win32/build.aap
===================================================================
--- win32/build.aap	(revision 22033)
+++ win32/build.aap	(working copy)
@@ -1,5 +1,5 @@
 
-@supported_pythons = ('py2.3', 'py2.4')
+@supported_pythons = ('py2.4', 'py2.5')
 
 all: ../main.aap
     @for p in _no.supported_pythons:
Index: win32/main.aap
===================================================================
--- win32/main.aap	(revision 22033)
+++ win32/main.aap	(working copy)
@@ -52,7 +52,7 @@
 # get the version of twisted from the tree being built, not sys.path
 Version=`getBuildingTwistedVersion()`
 
-ZIVersion=3.1.0c1
+ZIVersion=3.3.0
 
 # PyVersion is variant rather than a regular string variable so the script
 # will accept only one of these two values
@@ -65,6 +65,10 @@
         pyversion=2.4
         pyversion10=24
         pyhome=`_no.pathdb["python24"]`
+    py2.5
+        pyversion=2.5
+        pyversion10=25
+        pyhome=`_no.pathdb["python25"]`
 
 pyexe=$(pyhome)\python.exe
 
@@ -83,24 +87,24 @@
 
 # only run setup.py when needed
 build/scripts-$(pyversion) build/lib.win32-$(pyversion):  \
-                                                ZopeInterface-$ZIVersion
+                                                zope.interface-$ZIVersion
     :mkdir {f} build/scripts-$(pyversion)
     :copy win32/twisted_postinstall.py  build/scripts-$(pyversion)/.
-    :sys $(pyexe) setup.py all  build --compiler=mingw32 \
+    :sys $(pyexe) setup.py build --compiler=mingw32 \
                                 install --root=../win32dist --no-compile
     @1
-    :pushdir ZopeInterface-$(ZIVersion)
+    :pushdir zope.interface-$(ZIVersion)
     @try:
         :sys $(pyexe) setup.py build --compiler=mingw32 \
                                install --root=../win32dist --no-compile
     @finally:
         :popdir
 
-ZopeInterface-$(ZIVersion).tgz:
+zope.interface-$(ZIVersion).tar.gz:
     err = "Please download the ZopeInterface $ZIVersion tarball"
     @assert os.path.exists(target), err
-ZopeInterface-$ZIVersion: ZopeInterface-$(ZIVersion).tgz
-    :sys tar xvfz ZopeInterface-$(ZIVersion).tgz
+zope.interface-$ZIVersion: zope.interface-$(ZIVersion).tar.gz
+    :sys tar xvfz zope.interface-$(ZIVersion).tar.gz
 
 # build with inno
 ExeDeps=py$(pyversion)-$(DoDocs).iss
Index: win32/aapwin.py
===================================================================
--- win32/aapwin.py	(revision 22033)
+++ win32/aapwin.py	(working copy)
@@ -58,6 +58,6 @@
 
 pathdb = dict(innohome=innohome,
               iscc=os.path.join(innohome, "ISCC.exe"),
-              python23=getPythonHomeForVersion('2.3'),
               python24=getPythonHomeForVersion('2.4'),
+              python25=getPythonHomeForVersion('2.5'),
               )
Index: win32/README.win32
===================================================================
--- win32/README.win32	(revision 22033)
+++ win32/README.win32	(working copy)
@@ -1,122 +1 @@
-OVERVIEW
---------
-
-Some requirements must be met to build the "Official" win32
-Twisted.  The Official build produces four files with the following
-features:
-
-- Two of the four builds contain documentation, and make shortcuts to
-it; the others do not.
-- Two of the four builds are for Python 2.4, the other two are for Python 2.3.
-- There is a shortcut in the start menu for the Twisted Command Prompt
-which is a standard Windows command prompt with PATH and environment
-variables set up to invoke the Twisted commands the same way you would
-on Unix; e.g. "mktap".
-
-There are two ways to get Twisted installed from source.  One is to do
-the bare minimum necessary so that 'import twisted' works; the other
-is the Official method.
-
-
-BARE MINIMUM
-------------
-This method is only necessary if you are trying to install Twisted
-from e.g. the Subversion repository, and you don't want to acquire all the
-tools necessary to do the Official build.
-
-* Install either Python 2.3 or Python 2.4
-
-* Install ZopeInterface 3.0.1 or later for Python
-
-* With MSVC ***
-Without Cygwin installed, you need MSVC installed for the cl.exe
-compiler, which is the default on windows.  Just issue the command:
-$ python setup.py install
-
-* With Cygwin ***
-With Cygwin installed, you need to make sure these two packages are installed:
-- gcc
-- gcc-mingw
-You also need libpython22.a (or libpython23.a as appropriate).  
-Instructions can be found at http://sebsauvage.net/python/mingw.html .
-
-Once that's done, just issue the command:
-
-$ python setup.py build --compiler=mingw32 install
-
-If for some reason extensions won't build, try this instead:
-
-$ python setup.py build_py build_scripts install --skip-build
-
-
-OFFICIAL
---------
-The Official Twisted is built with native Python 2.3 (latest), not the
-Cygwin version of Python, however it is built with the help of Cygwin
-packages.
-
-* Python 2.3 AND Python 2.4 ***
-You need both.
-
-
-* ZopeInterface 3.0.1
-Download and install it for both versions of Python.
-
-
-* A-A-P ***
-This is what actually does the building.
-http://www.a-a-p.org/download.html
-After installing it, make sure the file aap.bat is in your system PATH, using
-(for example) the environment variable applet.
-
-
-* winreg ***
-You need this little module:
-http://www.rutherfurd.net/python/winreg/   # FIXME -- make aap fetch it
-
-
-* Cygwin ***
-You will need Cygwin, with the gcc-mingw package installed.  Get
-Cygwin at:
-
-http://cygwin.com
-
-DO NOT INSTALL CYGWIN PYTHON!
-DO NOT INSTALL CYGWIN PYTHON!
-(Install Native Windows Python.)
-
-
-* Inno Setup ***
-This creates nice self-installers with uninstall functionality:
-http://www.jrsoftware.org/isinfo.php
-You need version 4.0.8 or above.  (5.0.8 or later preferred.)
-
-
-* Bootstrap Twisted ***
-You will need an existing installation of Twisted, as the build script
-uses some utilities within Twisted.  The "bare minimum" install
-described above will suffice.
-
-
-* Issue the build command ***
-
-Bring up a Cygwin prompt.  Change directories to the root of your Twisted
-source tree.  It should contain the directory "win32/".
-Now run the following:
-
-$ aap.bat -f win32/build.aap
-
-The four distributable files will be in dist/ when this is done.
-
-
-
-TROUBLESHOOTING
----------------
-If you have trouble building the official build, try the following:
-1. Remove "C:\winnt\aap.bat" or "C:\windows\aap.bat" which will have incorrect
-contents.
-2. Make sure that your system PATH includes C:\Program Files\AAP\Exec
-3. Make sure your cygwin .bash_profile isn't clobbering this system PATH
-4. Make sure you don't have Cygwin's Python package installed. 
-5. Make sure both Python 2.3 and Python 2.4 are installed.
-6. If you're doing an official release, see maintainer-notes.txt.
+Moved to: http://twistedmatrix.com/trac/wiki/WindowsBuilds
Index: win32/pyx.x-foo.iss.template
===================================================================
--- win32/pyx.x-foo.iss.template	(revision 22033)
+++ win32/pyx.x-foo.iss.template	(working copy)
@@ -15,9 +15,9 @@
 UninstallFilesDir={code:pythonRegKey}
 
 [Files]
-Source: "%(twhome)s\win32dist\PYTHON%(pyversion10)s\Lib\site-packages\*.*"; DestDir: "{app}"; Flags: ignoreversion recursesubdirs
+Source: "%(twhome)s\win32dist\Python%(pyversion10)s\Lib\site-packages\*.*"; DestDir: "{app}"; Flags: ignoreversion recursesubdirs
 %(docfile)s
-Source: "%(twhome)s\win32dist\PYTHON%(pyversion10)s\Scripts\*.*"; DestDir: "{code:pythonRegKey}\scripts"; Flags: ignoreversion recursesubdirs
+; Source: "%(twhome)s\win32dist\Python%(pyversion10)s\Scripts\*.*"; DestDir: "{code:pythonRegKey}\scripts"; Flags: ignoreversion recursesubdirs
 Source: "win32\twistenv.bat"; DestDir: "{app}\twisted"; Flags: ignoreversion
 
 [UninstallDelete]
