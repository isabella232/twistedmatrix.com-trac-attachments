Index: twisted/conch/test/test_userauth.py
===================================================================
--- twisted/conch/test/test_userauth.py	(revision 32468)
+++ twisted/conch/test/test_userauth.py	(working copy)
@@ -782,12 +782,12 @@
             + NS(keys.Key.fromString(keydata.publicRSA_openssh).blob()))
         sigData = (NS(self.authClient.transport.sessionID)
                 + chr(userauth.MSG_USERAUTH_REQUEST) + NS('foo')
-                + NS('nancy') + NS('publickey') + '\xff' + NS('ssh-rsa')
+                + NS('nancy') + NS('publickey') + '\x01' + NS('ssh-rsa')
                 + blob)
         obj = keys.Key.fromString(keydata.privateRSA_openssh)
         self.assertEqual(self.authClient.transport.packets[-1],
                 (userauth.MSG_USERAUTH_REQUEST, NS('foo') + NS('nancy')
-                    + NS('publickey') + '\xff' + NS('ssh-rsa') + blob
+                    + NS('publickey') + '\x01' + NS('ssh-rsa') + blob
                     + NS(obj.sign(sigData))))
 
 
Index: twisted/conch/ssh/userauth.py
===================================================================
--- twisted/conch/ssh/userauth.py	(revision 32468)
+++ twisted/conch/ssh/userauth.py	(working copy)
@@ -564,7 +564,7 @@
         publicKey = self.lastPublicKey
         b = (NS(self.transport.sessionID) + chr(MSG_USERAUTH_REQUEST) +
              NS(self.user) + NS(self.instance.name) + NS('publickey') +
-             '\xff' + NS(publicKey.sshType()) + NS(publicKey.blob()))
+             '\x01' + NS(publicKey.sshType()) + NS(publicKey.blob()))
         d  = self.signData(publicKey, b)
         if not d:
             self.askForAuth('none', '')
@@ -617,7 +617,7 @@
         @type signedData: C{str}
         """
         publicKey = self.lastPublicKey
-        self.askForAuth('publickey', '\xff' + NS(publicKey.sshType()) +
+        self.askForAuth('publickey', '\x01' + NS(publicKey.sshType()) +
                 NS(publicKey.blob()) + NS(signedData))
 
 
