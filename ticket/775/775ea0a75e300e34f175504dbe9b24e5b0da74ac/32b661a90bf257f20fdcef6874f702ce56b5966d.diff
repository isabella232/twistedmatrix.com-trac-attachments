Index: pair/tuntap.py
===================================================================
--- pair/tuntap.py	(revision 17109)
+++ pair/tuntap.py	(working copy)
@@ -44,11 +44,11 @@
     maxThroughput = 256 * 1024 # max bytes we read in one eventloop iteration
 
     def __init__(self, interface, proto, maxPacketSize=8192, reactor=None):
-        if components.implements(proto, ethernet.IEthernetProtocol):
+        if ethernet.IEthernetProtocol.providedBy(proto):
             self.ethernet = 1
         else:
             self.ethernet = 0
-            assert components.implements(proto, ip.IIPProtocol) # XXX: fix me
+            assert ip.IIPProtocol.providedBy(proto) # XXX: fix me
         base.BasePort.__init__(self, reactor)
         self.interface = interface
         self.protocol = proto
Index: mail/test/test_mail.py
===================================================================
--- mail/test/test_mail.py	(revision 17109)
+++ mail/test/test_mail.py	(working copy)
@@ -193,6 +193,10 @@
         self.failUnless(self.service.lookupPortal('domain') is o1)
         self.failUnless(self.service.defaultPortal() is o2)
 
+    def testAddDomain(self):
+        self.service.aliases = {'foo': 'localhost'}
+        self.service.addDomain('foo', twisted.mail.mail.BounceDomain())
+
 class FailingMaildirMailboxAppendMessageTask(mail.maildir._MaildirMailboxAppendMessageTask):
     _openstate = True
     _writestate = True
Index: mail/mail.py
===================================================================
--- mail/mail.py	(revision 17109)
+++ mail/mail.py	(working copy)
@@ -248,7 +248,7 @@
         map(portal.registerChecker, domain.getCredentialsCheckers())
         self.domains[name] = domain
         self.portals[name] = portal
-        if self.aliases and components.implements(domain, IAliasableDomain):
+        if self.aliases and IAliasableDomain.providedBy(domain):
             domain.setAliasGroup(self.aliases)
 
     def setQueue(self, queue):
Index: mail/tap.py
===================================================================
--- mail/tap.py	(revision 17109)
+++ mail/tap.py	(working copy)
@@ -97,7 +97,7 @@
     def opt_aliases(self, filename):
         """Specify an aliases(5) file to use for this domain"""
         if self.last_domain:
-            if components.implements(self.last_domain, mail.IAliasableDomain):
+            if mail.IAliasableDomain.providedBy(self.last_domain):
                 aliases = alias.loadAliasFile(self.service.domains, filename)
                 self.last_domain.setAliasGroup(aliases)
                 self.service.monitor.monitorFile(
