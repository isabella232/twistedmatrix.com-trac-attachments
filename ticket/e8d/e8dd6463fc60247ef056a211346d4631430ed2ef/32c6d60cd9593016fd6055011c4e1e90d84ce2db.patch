Index: names/test/test_names.py
===================================================================
--- names/test/test_names.py	(revision 33651)
+++ names/test/test_names.py	(working copy)
@@ -869,8 +869,8 @@
         """
         L{SecondaryAuthorityService.fromServerAddressAndDomains} constructs a
         new L{SecondaryAuthorityService} from a C{str} giving a master server
-        address and several domains, causing the creation of a secondary
-        authority for each domain and that master server address and the default
+        address and DNS port and several domains, causing the creation of a secondary
+        authority for each domain and that master server address and the given
         DNS port.
         """
         primary = '192.168.1.3'
@@ -892,8 +892,8 @@
 
 class SecondaryAuthorityTests(unittest.TestCase):
     """
-    Test L{twisted.names.secondary.SecondaryAuthority}'s handling of an
-    ipaddress with a port in the format ipaddr:port.
+    L{twisted.names.secondary.SecondaryAuthority} correctly constucts objects with
+    a specified ipaddress and optionally specified DNS port.
     """
     def test_defaultPort(self):
         """
@@ -946,6 +946,9 @@
         proto.makeConnection(transport)
 
         msg = Message()
+        #DNSProtocol.writeMessage length encodes the message 
+        #by prepending a 2 byte message length to the buffered value. 
+        #Don't decode this part of the value.
         msg.decode(StringIO(transport.value()[2:]))
 
         self.assertEqual(
Index: names/test/test_tap.py
===================================================================
--- names/test/test_tap.py	(revision 33651)
+++ names/test/test_tap.py	(working copy)
@@ -18,7 +18,7 @@
     """
     def test_malformedSecondary(self):
         """
-        If the value supplied for a I{--secondary} option does not provide a
+        If the value supplied for an I{--secondary} option does not provide a
         server IP address, optional port number, and domain name,
         L{Options.parseOptions} raises L{UsageError}.
         """
