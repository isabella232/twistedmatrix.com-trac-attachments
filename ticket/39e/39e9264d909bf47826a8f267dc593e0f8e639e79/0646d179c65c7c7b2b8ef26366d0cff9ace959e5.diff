Index: twisted/lore/test/test_lore.py
===================================================================
--- twisted/lore/test/test_lore.py	(revision 24967)
+++ twisted/lore/test/test_lore.py	(working copy)
@@ -328,7 +328,16 @@
                                                  "class",
                                                  "index-link"))
 
+    def test_codeimport(self):
+        tmp = self.makeTemp('lore_codeimport_test.xhtml', 'lore_codeimport_py.html')
+        templateFilename = sp('template.tpl')
 
+        options = lore.Options()
+        options.parseOptions(['--null', '--config', 'template=%s' % templateFilename])
+        result = lore.runGivenOptions(options)
+        self.assertEquals(None, result)
+        self.assertEqualFiles1("lore_codeimport_test_out.html",
+                               os.path.join(tmp, "lore_codeimport_test.html"))
 
 
 class LatexSpitterTestCase(unittest.TestCase):
Index: twisted/lore/tree.py
===================================================================
--- twisted/lore/tree.py	(revision 24967)
+++ twisted/lore/tree.py	(working copy)
@@ -183,7 +183,16 @@
         data = '\n'.join(lines[int(node.getAttribute('skipLines', 0)):])
         data = cStringIO.StringIO(text.removeLeadingTrailingBlanks(data))
         htmlizer.filter(data, outfile, writer=htmlizer.SmallerHTMLWriter)
-        val = outfile.getvalue()
+        val = str(outfile.getvalue()).splitlines()
+        for linenum, line in enumerate(val[1:-1]):
+            if val[linenum+1][:2] == '</':
+                templine = list(val[linenum+1])
+                templine.insert((templine.index('>')+1),'%3d    ' %
+                                (linenum + 1))
+                val[linenum+1] = ''.join(templine)
+            else:
+                val[linenum+1] = '    '.join(['%3d' % (linenum + 1), line])
+        val = '\n'.join(val)
         _replaceWithListing(node, val, filename, "py-listing")
 
 
