Index: twisted/lore/test/test_lore.py
===================================================================
--- twisted/lore/test/test_lore.py	(revision 24967)
+++ twisted/lore/test/test_lore.py	(working copy)
@@ -328,6 +328,14 @@
                                                  "class",
                                                  "index-link"))
 
+    def test_linenumbering(self):
+        """
+        Tests that line numbering works.
+        """
+        testcode = u'<pre>\nLorem ipsum<span>\n</span>dolor\nsit amet\n</pre>'
+        self.assertEqual(tree._addLineNumbers(testcode),
+                         u'<pre>\n  1    Lorem ipsum<span>\n</span>' \
+                         '  2    dolor\n  3    sit amet\n</pre>')
 
 
 
Index: twisted/lore/tree.py
===================================================================
--- twisted/lore/tree.py	(revision 24967)
+++ twisted/lore/tree.py	(working copy)
@@ -183,11 +183,26 @@
         data = '\n'.join(lines[int(node.getAttribute('skipLines', 0)):])
         data = cStringIO.StringIO(text.removeLeadingTrailingBlanks(data))
         htmlizer.filter(data, outfile, writer=htmlizer.SmallerHTMLWriter)
-        val = outfile.getvalue()
+        val = _addLineNumbers(str(outfile.getvalue()))
         _replaceWithListing(node, val, filename, "py-listing")
 
 
 
+def _addLineNumbers(val):
+        val = val.splitlines()
+        for linenum, line in enumerate(val[1:-1]):
+            if val[linenum+1][:2] == '</':
+                templine = list(val[linenum+1])
+                templine.insert((templine.index('>')+1),'%3d    ' %
+                                (linenum + 1))
+                val[linenum+1] = ''.join(templine)
+            else:
+                val[linenum+1] = '    '.join(['%3d' % (linenum + 1), line])
+        val = '\n'.join(val)
+        return val
+
+
+
 def _replaceWithListing(node, val, filename, class_):
     captionTitle = domhelpers.getNodeText(node)
     if captionTitle == os.path.basename(filename):
