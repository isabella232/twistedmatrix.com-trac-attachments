Index: twisted/protocols/socks.py
===================================================================
--- twisted/protocols/socks.py	(revision 32380)
+++ twisted/protocols/socks.py	(working copy)
@@ -162,18 +162,22 @@
             self.otherConn.transport.loseConnection()
 
     def authorize(self,code,server,port,user):
-        log.msg("code %s connection to %s:%s (user %s) authorized" % (code,server,port,user))
+        log.msg("code %s connection to %s:%s (user %s) authorized" % (
+            code, server, port, user))
         return 1
 
     def connectClass(self, host, port, klass, *args):
-        return protocol.ClientCreator(reactor, klass, *args).connectTCP(host,port)
+        client = protocol.ClientCreator(self.reactor, klass, *args)
+        return client.connectTCP(host, port)
 
     def listenClass(self, port, klass, *args):
-        serv = reactor.listenTCP(port, klass(*args))
-        return defer.succeed(serv.getHost()[1:])
+        serv = self.reactor.listenTCP(port, klass(*args))
+        address = serv.getHost()
+        return defer.succeed((address.host, address.port))
 
-    def makeReply(self,reply,version=0,port=0,ip="0.0.0.0"):
-        self.transport.write(struct.pack("!BBH",version,reply,port)+socket.inet_aton(ip))
+    def makeReply(self, reply, version=0, port=0, ip="0.0.0.0"):
+        frame = struct.pack("!BBH", version, reply, port) + socket.inet_aton(ip)
+        self.transport.write(frame)
         if reply!=90: self.transport.loseConnection()
 
     def write(self,data):
