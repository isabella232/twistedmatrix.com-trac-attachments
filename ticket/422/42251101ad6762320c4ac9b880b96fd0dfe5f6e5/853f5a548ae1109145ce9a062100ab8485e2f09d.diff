Index: twisted/web/test/test_testutil.py
===================================================================
--- twisted/web/test/test_testutil.py	(revision 0)
+++ twisted/web/test/test_testutil.py	(working copy)
@@ -0,0 +1,55 @@
+# Copyright (c) Twisted Matrix Laboratories.
+# See LICENSE for details.
+
+"""
+Tests for L{twisted.web.testutil}.
+"""
+
+from twisted.trial.unittest import TestCase
+
+from twisted.web.server import NOT_DONE_YET
+from twisted.web.resource import Resource
+from twisted.web.testutil import render, makeTestRequest
+
+
+class RenderTestCase(TestCase):
+    """
+    Tests for L{render}.
+    """
+
+    def test_render(self):
+        request = makeTestRequest()
+        class TestResource(Resource):
+            def render(self, request):
+                return "test-result"
+        d = render(TestResource(), request)
+        def cbRendered(res):
+            self.assertEqual(res, "test-result")
+        d.addCallback(cbRendered)
+        return d
+
+
+    def test_render_write(self):
+        request = makeTestRequest()
+        class TestResource(Resource):
+            def render(self, request):
+                request.write("test-result")
+                return ""
+        d = render(TestResource(), request)
+        def cbRendered(res):
+            self.assertEqual(res, "test-result")
+        d.addCallback(cbRendered)
+        return d
+
+    def test_render_NOT_DONE_YET(self):
+        request = makeTestRequest()
+        class TestResource(Resource):
+            def render(self, request):
+                return NOT_DONE_YET
+        d = render(TestResource(), request)
+        def cbRendered(res):
+            self.assertEqual(res, "test-result")
+        d.addCallback(cbRendered)
+        request.write("test-result")
+        request.finish()
+        return d
Index: twisted/web/testutil.py
===================================================================
--- twisted/web/testutil.py	(revision 0)
+++ twisted/web/testutil.py	(working copy)
@@ -0,0 +1,42 @@
+# Copyright (c) Twisted Matrix Laboratories.
+# See LICENSE for details.
+
+"""
+General helpers for L{twisted.web} unit tests.
+"""
+
+from cStringIO import StringIO
+
+from twisted.internet.defer import succeed
+from twisted.web import server
+
+from twisted.web.test.test_web import DummyChannel #FIXME
+
+def render(resource, request):
+    result = resource.render(request)
+    if isinstance(result, str):
+        request.write(result)
+        request.finish()
+        return succeed(request.written.getvalue())
+    elif result is server.NOT_DONE_YET:
+        if request.finished:
+            return succeed(request.written.getvalue())
+        else:
+            d = request.notifyFinish()
+            d.addCallback(lambda _: request.written.getvalue())
+	    return d
+    else:
+        raise ValueError("Unexpected return value: %r" % (result,))
+
+class _TestRequest(server.Request):
+    def __init__(self):
+        server.Request.__init__(self, DummyChannel(), False)
+        self.written = StringIO()
+        self.content = StringIO()
+	self.method = 'GET'
+
+    def write(self, data):
+        self.written.write(data)
+
+def makeTestRequest():
+    return _TestRequest()
