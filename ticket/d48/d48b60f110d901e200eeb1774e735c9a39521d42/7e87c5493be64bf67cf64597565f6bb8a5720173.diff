diff --git a/twisted/web/resource.py b/twisted/web/resource.py
index ea9caac..641705a 100644
--- a/twisted/web/resource.py
+++ b/twisted/web/resource.py
@@ -240,12 +240,15 @@ class Resource:
 
         @see: L{IResource.render}
         """
-        m = getattr(self, 'render_' + nativeString(request.method), None)
+        default_methods = _computeAllowedMethods(self)
+        allowedMethods = getattr(self, "allowedMethods", default_methods)
+        try:
+            method_string = nativeString(request.method)
+        except UnicodeDecodeError:
+            raise UnsupportedMethod(allowedMethods)
+
+        m = getattr(self, 'render_' + method_string, None)
         if not m:
-            try:
-                allowedMethods = self.allowedMethods
-            except AttributeError:
-                allowedMethods = _computeAllowedMethods(self)
             raise UnsupportedMethod(allowedMethods)
         return m(request)
 
diff --git a/twisted/web/test/test_web.py b/twisted/web/test/test_web.py
index ae5a946..ce28516 100644
--- a/twisted/web/test/test_web.py
+++ b/twisted/web/test/test_web.py
@@ -928,6 +928,16 @@ class AllowedMethodsTests(unittest.TestCase):
         )
 
 
+    def test_notAllowedNonAscii(self):
+        """
+        When client requests invalid method containining unicode characters
+        HTTP 501 'Not Implemented' status will be returned.
+        """
+        req = self._getReq()
+        req.requestReceived(b'G\xc2\xa9ET', b'/gettableresource', b'HTTP/1.0')
+        self.assertEqual(req.code, 501)
+
+
     def test_notAllowedQuoting(self):
         """
         When an unsupported method response is generated, an HTML message will
diff --git a/twisted/web/topfiles/8102.bugfix b/twisted/web/topfiles/8102.bugfix
new file mode 100644
index 0000000..e69de29
