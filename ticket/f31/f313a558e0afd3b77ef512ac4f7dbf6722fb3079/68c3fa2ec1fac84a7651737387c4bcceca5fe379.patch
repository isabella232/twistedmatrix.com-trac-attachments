Index: twisted/conch/test/test_recvline.py
===================================================================
--- twisted/conch/test/test_recvline.py	(revision 32500)
+++ twisted/conch/test/test_recvline.py	(working copy)
@@ -218,7 +218,16 @@
         kR('B')
         self.assertEqual(self.p.currentLineBuffer(), ('xyB', ''))
 
+    def testUnprintableCharacters(self):
+        kR = lambda ch: self.p.keystrokeReceived(ch, None)
+        pt = self.pt
 
+        for ch in (pt.F1, pt.F2, pt.F3, pt.F4, pt.F5, pt.F6, pt.F7, pt.F8,
+                  pt.F9, pt.F10, pt.F11, pt.F12, pt.PGUP, pt.PGDN):
+            kR(ch)
+            self.assertEqual(self.p.currentLineBuffer(), ('', ''))
+
+
 from twisted.conch import telnet
 from twisted.conch.insults import helper
 from twisted.protocols import loopback
Index: twisted/conch/recvline.py
===================================================================
--- twisted/conch/recvline.py	(revision 32500)
+++ twisted/conch/recvline.py	(working copy)
@@ -116,6 +116,7 @@
 
     ps = ('>>> ', '... ')
     pn = 0
+    _printableChars = list(string.printable)
 
     def connectionMade(self):
         # A list containing the characters making up the current line
@@ -196,7 +197,7 @@
         m = self.keyHandlers.get(keyID)
         if m is not None:
             m()
-        elif keyID in string.printable:
+        elif keyID in self._printableChars:
             self.characterReceived(keyID, False)
         else:
             log.msg("Received unhandled keyID: %r" % (keyID,))
