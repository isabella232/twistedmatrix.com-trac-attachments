=== modified file 'twisted/internet/interfaces.py'
--- twisted/internet/interfaces.py	2012-10-10 19:14:17 +0000
+++ twisted/internet/interfaces.py	2013-01-30 16:31:09 +0000
@@ -76,15 +76,47 @@
         """
 
 class IResolver(IResolverSimple):
-    def query(query, timeout = 10):
-        """
-        Interpret and dispatch a query object to the appropriate
-        lookup* method.
-        """
-
-    def lookupAddress(name, timeout = 10):
-        """
-        Lookup the A records associated with C{name}.
+    def query(query, timeout=10):
+        """
+        Dispatch C{query} to the method which can handle its type.
+
+        @type query: L{twisted.names.dns.Query}
+        @param query: The DNS query being issued, to which a response is to be
+            generated.
+
+        @type timeout: Sequence of C{int}
+        @param timeout: Number of seconds after which to reissue the query.
+            When the last timeout expires, the query is considered failed.
+
+        @rtype: C{Deferred}
+        @return: A L{Deferred} which fires with a three-tuple of lists of
+            L{twisted.names.dns.RRHeader} instances.  The first element of the
+            tuple gives answers.  The second element of the tuple gives
+            authorities.  The third element of the tuple gives additional
+            information.  The L{Deferred} may instead fail with one of the
+            exceptions defined in L{twisted.names.error} or with
+            C{NotImplementedError}.
+        """
+
+    def lookupAddress(name, timeout=10):
+        """
+        Perform an A record lookup.
+
+        @type name: C{str}
+        @param name: DNS name to resolve.
+
+        @type timeout: Sequence of C{int}
+        @param timeout: Number of seconds after which to reissue the query.
+            When the last timeout expires, the query is considered failed.
+
+        @rtype: C{Deferred}
+        @return: A L{Deferred} which fires with a three-tuple of lists of
+            L{twisted.names.dns.RRHeader} instances.  The first element of the
+            tuple gives answers.  The second element of the tuple gives
+            authorities.  The third element of the tuple gives additional
+            information.  The L{Deferred} may instead fail with one of the
+            exceptions defined in L{twisted.names.error} or with
+            C{NotImplementedError}.
         """
 
     def lookupAddress6(name, timeout = 10):

=== modified file 'twisted/names/client.py'
--- twisted/names/client.py	2013-01-06 10:22:53 +0000
+++ twisted/names/client.py	2013-01-30 16:28:18 +0000
@@ -595,16 +595,7 @@
 
 def lookupAddress(name, timeout=None):
     """
-    Perform an A record lookup.
-
-    @type name: C{str}
-    @param name: DNS name to resolve.
-
-    @type timeout: Sequence of C{int}
-    @param timeout: Number of seconds after which to reissue the query.
-    When the last timeout expires, the query is considered failed.
-
-    @rtype: C{Deferred}
+    @see: twisted.internet.interfaces.IResolver.lookupAddress
     """
     return getResolver().lookupAddress(name, timeout)
 

=== modified file 'twisted/names/common.py'
--- twisted/names/common.py	2012-10-09 21:19:50 +0000
+++ twisted/names/common.py	2013-01-30 16:27:00 +0000
@@ -60,19 +60,7 @@
 
     def query(self, query, timeout=None):
         """
-        Dispatch C{query} to the method which can handle its type.
-
-        @param query: The DNS query being issued, to which a response is to be
-            generated.
-        @type query: L{twisted.names.dns.Query}
-
-        @return: A L{Deferred} which fires with a three-tuple of lists of
-            L{twisted.names.dns.RRHeader} instances.  The first element of the
-            tuple gives answers.  The second element of the tuple gives
-            authorities.  The third element of the tuple gives additional
-            information.  The L{Deferred} may instead fail with one of the
-            exceptions defined in L{twisted.names.error} or with
-            C{NotImplementedError}.
+        @see: twisted.internet.interfaces.IResolver.query
         """
         try:
             method = self.typeToMethod[query.type]
@@ -86,9 +74,9 @@
     def _lookup(self, name, cls, type, timeout):
         return defer.fail(NotImplementedError("ResolverBase._lookup"))
 
-    def lookupAddress(self, name, timeout = None):
+    def lookupAddress(self, name, timeout=None):
         """
-        @see: twisted.names.client.lookupAddress
+        @see: twisted.internet.interfaces.IResolver.lookupAddress
         """
         return self._lookup(name, dns.IN, dns.A, timeout)
 

