=== modified file 'twisted/names/client.py'
--- twisted/names/client.py	2013-02-13 18:54:46 +0000
+++ twisted/names/client.py	2013-02-22 12:35:25 +0000
@@ -20,7 +20,7 @@
 import errno
 import warnings
 
-from zope.interface import implementer
+from zope.interface import implementer, moduleProvides
 
 # Twisted imports
 from twisted.python.compat import nativeString
@@ -31,7 +31,8 @@
 from twisted.names import dns, common
 
 
-implementer(interfaces.IResolver)
+
+@implementer(interfaces.IResolver)
 class Resolver(common.ResolverBase):
     """
     @ivar _waiting: A C{dict} mapping tuple keys of query name/type/class to
@@ -406,7 +407,7 @@
     # This one doesn't ever belong on UDP
     def lookupZone(self, name, timeout=10):
         """
-        @see: twisted.internet.interfaces.IResolve.lookupZone
+        @see: L{twisted.internet.interfaces.IResolve.lookupZone}
         """
         address = self.pickServer()
         if address is None:
@@ -591,135 +592,146 @@
     """
     return getResolver().getHostByName(name, timeout, effort)
 
+
+
+moduleProvides(interfaces.IResolver)
+
+
+def query(query, timeout=None):
+    """
+    @see: L{twisted.internet.interfaces.IResolver.query}
+    """
+    return getResolver().query(query, timeout)
+
 def lookupAddress(name, timeout=None):
     """
-    @see: twisted.internet.interfaces.IResolver.lookupAddress
+    @see: L{twisted.internet.interfaces.IResolver.lookupAddress}
     """
     return getResolver().lookupAddress(name, timeout)
 
 def lookupIPV6Address(name, timeout=None):
     """
-    @see: twisted.internet.interfaces.IResolver.lookupIPV6Address
+    @see: L{twisted.internet.interfaces.IResolver.lookupIPV6Address}
     """
     return getResolver().lookupIPV6Address(name, timeout)
 
 def lookupAddress6(name, timeout=None):
     """
-    @see: twisted.internet.interfaces.IResolver.lookupAddress6
+    @see: L{twisted.internet.interfaces.IResolver.lookupAddress6}
     """
     return getResolver().lookupAddress6(name, timeout)
 
 def lookupMailExchange(name, timeout=None):
     """
-    @see: twisted.internet.interfaces.IResolver.lookupMailExchange
+    @see: L{twisted.internet.interfaces.IResolver.lookupMailExchange}
     """
     return getResolver().lookupMailExchange(name, timeout)
 
 def lookupNameservers(name, timeout=None):
     """
-    @see: twisted.internet.interfaces.IResolver.lookupNameservers
+    @see: L{twisted.internet.interfaces.IResolver.lookupNameservers}
     """
     return getResolver().lookupNameservers(name, timeout)
 
 def lookupCanonicalName(name, timeout=None):
     """
-    @see: twisted.internet.interfaces.IResolver.lookupCanonicalName
+    @see: L{twisted.internet.interfaces.IResolver.lookupCanonicalName}
     """
     return getResolver().lookupCanonicalName(name, timeout)
 
 def lookupMailBox(name, timeout=None):
     """
-    @see: twisted.internet.interfaces.IResolver.lookupMailBox
+    @see: L{twisted.internet.interfaces.IResolver.lookupMailBox}
     """
     return getResolver().lookupMailBox(name, timeout)
 
 def lookupMailGroup(name, timeout=None):
     """
-    @see: twisted.internet.interfaces.IResolver.lookupMailGroup
+    @see: L{twisted.internet.interfaces.IResolver.lookupMailGroup}
     """
     return getResolver().lookupMailGroup(name, timeout)
 
 def lookupMailRename(name, timeout=None):
     """
-    @see: twisted.internet.interfaces.IResolver.lookupMailRename
+    @see: L{twisted.internet.interfaces.IResolver.lookupMailRename}
     """
     return getResolver().lookupMailRename(name, timeout)
 
 def lookupPointer(name, timeout=None):
     """
-    @see: twisted.internet.interfaces.IResolver.lookupPointer
+    @see: L{twisted.internet.interfaces.IResolver.lookupPointer}
     """
     return getResolver().lookupPointer(name, timeout)
 
 def lookupAuthority(name, timeout=None):
     """
-    @see: twisted.internet.interfaces.IResolver.lookupAuthority
+    @see: L{twisted.internet.interfaces.IResolver.lookupAuthority}
     """
     return getResolver().lookupAuthority(name, timeout)
 
 def lookupNull(name, timeout=None):
     """
-    @see: twisted.internet.interfaces.IResolver.lookupNull
+    @see: L{twisted.internet.interfaces.IResolver.lookupNull}
     """
     return getResolver().lookupNull(name, timeout)
 
 def lookupWellKnownServices(name, timeout=None):
     """
-    @see: twisted.internet.interfaces.IResolver.lookupWellKnownServices
+    @see: L{twisted.internet.interfaces.IResolver.lookupWellKnownServices}
     """
     return getResolver().lookupWellKnownServices(name, timeout)
 
 def lookupService(name, timeout=None):
     """
-    @see: twisted.internet.interfaces.IResolver.lookupService
+    @see: L{twisted.internet.interfaces.IResolver.lookupService}
     """
     return getResolver().lookupService(name, timeout)
 
 def lookupHostInfo(name, timeout=None):
     """
-    @see: twisted.internet.interfaces.IResolver.lookupHostInfo
+    @see: L{twisted.internet.interfaces.IResolver.lookupHostInfo}
     """
     return getResolver().lookupHostInfo(name, timeout)
 
 def lookupMailboxInfo(name, timeout=None):
     """
-    @see: twisted.internet.interfaces.IResolver.lookupMailboxInfo
+    @see: L{twisted.internet.interfaces.IResolver.lookupMailboxInfo}
     """
     return getResolver().lookupMailboxInfo(name, timeout)
 
 def lookupText(name, timeout=None):
     """
-    @see: twisted.internet.interfaces.IResolver.lookupText
+    @see: L{twisted.internet.interfaces.IResolver.lookupText}
     """
     return getResolver().lookupText(name, timeout)
 
 def lookupSenderPolicy(name, timeout=None):
     """
-    @see: twisted.internet.interfaces.IResolver.lookupSenderPolicy
+    @see: L{twisted.internet.interfaces.IResolver.lookupSenderPolicy}
     """
     return getResolver().lookupSenderPolicy(name, timeout)
 
 def lookupResponsibility(name, timeout=None):
     """
-    @see: twisted.internet.interfaces.IResolver.lookupResponsibility
+    @see: L{twisted.internet.interfaces.IResolver.lookupResponsibility}
     """
     return getResolver().lookupResponsibility(name, timeout)
 
 def lookupAFSDatabase(name, timeout=None):
     """
-    @see: twisted.internet.interfaces.IResolver.lookupAFSDatabase
+    @see: L{twisted.internet.interfaces.IResolver.lookupAFSDatabase}
     """
     return getResolver().lookupAFSDatabase(name, timeout)
 
 def lookupZone(name, timeout=None):
     """
-    @see: twisted.internet.interfaces.IResolver.lookupZone
+    @see: L{twisted.internet.interfaces.IResolver.lookupZone}
     """
     return getResolver().lookupZone(name, timeout)
 
 def lookupAllRecords(name, timeout=None):
     """
-    @see: twisted.internet.interfaces.IResolver.lookupAllRecords
+    @see: L{twisted.internet.interfaces.IResolver.lookupAllRecords}
     """
     return getResolver().lookupAllRecords(name, timeout)
 
@@ -727,6 +739,6 @@
 
 def lookupNamingAuthorityPointer(name, timeout=None):
     """
-    @see: twisted.internet.interfaces.IResolve.lookupNamingAuthorityPointer
+    @see: L{twisted.internet.interfaces.IResolve.lookupNamingAuthorityPointer}
     """
     return getResolver().lookupNamingAuthorityPointer(name, timeout)

=== modified file 'twisted/names/common.py'
--- twisted/names/common.py	2013-02-13 18:54:46 +0000
+++ twisted/names/common.py	2013-02-22 12:21:11 +0000
@@ -10,12 +10,14 @@
 
 import socket
 
+from zope.interface import implementer
+
 from twisted.names import dns
 from twisted.names.error import DNSFormatError, DNSServerError, DNSNameError
 from twisted.names.error import DNSNotImplementedError, DNSQueryRefusedError
 from twisted.names.error import DNSUnknownError
 
-from twisted.internet import defer, error
+from twisted.internet import defer, error, interfaces
 from twisted.python import failure
 
 # Helpers for indexing the three-tuples that get thrown around by this code a
@@ -24,10 +26,11 @@
 
 EMPTY_RESULT = (), (), ()
 
+@implementer(interfaces.IResolver)
 class ResolverBase:
     """
     L{ResolverBase} is a base class for implementations of
-    L{IResolver<twisted.internet.interfaces.IResolver>} which deals with a lot
+    L{interfaces.IResolver} which deals with a lot
     of the boilerplate of implementing all of the lookup methods.
 
     @cvar _errormap: A C{dict} mapping DNS protocol failure response codes
@@ -60,7 +63,7 @@
 
     def query(self, query, timeout=None):
         """
-        @see: twisted.internet.interfaces.IResolver.query
+        @see: L{twisted.internet.interfaces.IResolver.query}
         """
         try:
             method = self.typeToMethod[query.type]
@@ -76,147 +79,147 @@
 
     def lookupAddress(self, name, timeout=None):
         """
-        @see: twisted.internet.interfaces.IResolver.lookupAddress
+        @see: L{twisted.internet.interfaces.IResolver.lookupAddress}
         """
         return self._lookup(name, dns.IN, dns.A, timeout)
 
     def lookupIPV6Address(self, name, timeout=None):
         """
-        @see: twisted.internet.interfaces.IResolver.lookupIPV6Address
+        @see: L{twisted.internet.interfaces.IResolver.lookupIPV6Address}
         """
         return self._lookup(name, dns.IN, dns.AAAA, timeout)
 
     def lookupAddress6(self, name, timeout=None):
         """
-        @see: twisted.internet.interfaces.IResolver.lookupAddress6
+        @see: L{twisted.internet.interfaces.IResolver.lookupAddress6}
         """
         return self._lookup(name, dns.IN, dns.A6, timeout)
 
     def lookupMailExchange(self, name, timeout=None):
         """
-        @see: twisted.internet.interfaces.IResolver.lookupMailExchange
+        @see: L{twisted.internet.interfaces.IResolver.lookupMailExchange}
         """
         return self._lookup(name, dns.IN, dns.MX, timeout)
 
     def lookupNameservers(self, name, timeout=None):
         """
-        @see: twisted.internet.interfaces.IResolver.lookupNameservers
+        @see: L{twisted.internet.interfaces.IResolver.lookupNameservers}
         """
         return self._lookup(name, dns.IN, dns.NS, timeout)
 
     def lookupCanonicalName(self, name, timeout=None):
         """
-        @see: twisted.internet.interfaces.IResolver.lookupCanonicalName
+        @see: L{twisted.internet.interfaces.IResolver.lookupCanonicalName}
         """
         return self._lookup(name, dns.IN, dns.CNAME, timeout)
 
     def lookupMailBox(self, name, timeout=None):
         """
-        @see: twisted.internet.interfaces.IResolver.lookupMailBox
+        @see: L{twisted.internet.interfaces.IResolver.lookupMailBox}
         """
         return self._lookup(name, dns.IN, dns.MB, timeout)
 
     def lookupMailGroup(self, name, timeout=None):
         """
-        @see: twisted.internet.interfaces.IResolver.lookupMailGroup
+        @see: L{twisted.internet.interfaces.IResolver.lookupMailGroup}
         """
         return self._lookup(name, dns.IN, dns.MG, timeout)
 
     def lookupMailRename(self, name, timeout=None):
         """
-        @see: twisted.internet.interfaces.IResolver.lookupMailRename
+        @see: L{twisted.internet.interfaces.IResolver.lookupMailRename}
         """
         return self._lookup(name, dns.IN, dns.MR, timeout)
 
     def lookupPointer(self, name, timeout=None):
         """
-        @see: twisted.internet.interfaces.IResolver.lookupPointer
+        @see: L{twisted.internet.interfaces.IResolver.lookupPointer}
         """
         return self._lookup(name, dns.IN, dns.PTR, timeout)
 
     def lookupAuthority(self, name, timeout=None):
         """
-        @see: twisted.internet.interfaces.IResolver.lookupAuthority
+        @see: L{twisted.internet.interfaces.IResolver.lookupAuthority}
         """
         return self._lookup(name, dns.IN, dns.SOA, timeout)
 
     def lookupNull(self, name, timeout=None):
         """
-        @see: twisted.internet.interfaces.IResolver.lookupNull
+        @see: L{twisted.internet.interfaces.IResolver.lookupNull}
         """
         return self._lookup(name, dns.IN, dns.NULL, timeout)
 
     def lookupWellKnownServices(self, name, timeout=None):
         """
-        @see: twisted.internet.interfaces.IResolver.lookupWellKnownServices
+        @see: L{twisted.internet.interfaces.IResolver.lookupWellKnownServices}
         """
         return self._lookup(name, dns.IN, dns.WKS, timeout)
 
     def lookupService(self, name, timeout=None):
         """
-        @see: twisted.internet.interfaces.IResolver.lookupService
+        @see: L{twisted.internet.interfaces.IResolver.lookupService}
         """
         return self._lookup(name, dns.IN, dns.SRV, timeout)
 
     def lookupHostInfo(self, name, timeout=None):
         """
-        @see: twisted.internet.interfaces.IResolver.lookupHostInfo
+        @see: L{twisted.internet.interfaces.IResolver.lookupHostInfo}
         """
         return self._lookup(name, dns.IN, dns.HINFO, timeout)
 
     def lookupMailboxInfo(self, name, timeout=None):
         """
-        @see: twisted.internet.interfaces.IResolver.lookupMailboxInfo
+        @see: L{twisted.internet.interfaces.IResolver.lookupMailboxInfo}
         """
         return self._lookup(name, dns.IN, dns.MINFO, timeout)
 
     def lookupText(self, name, timeout=None):
         """
-        @see: twisted.internet.interfaces.IResolver.lookupText
+        @see: L{twisted.internet.interfaces.IResolver.lookupText}
         """
         return self._lookup(name, dns.IN, dns.TXT, timeout)
 
     def lookupSenderPolicy(self, name, timeout=None):
         """
-        @see: twisted.internet.interfaces.IResolver.lookupSenderPolicy
+        @see: L{twisted.internet.interfaces.IResolver.lookupSenderPolicy}
         """
         return self._lookup(name, dns.IN, dns.SPF, timeout)
 
     def lookupResponsibility(self, name, timeout=None):
         """
-        @see: twisted.internet.interfaces.IResolver.lookupResponsibility
+        @see: L{twisted.internet.interfaces.IResolver.lookupResponsibility}
         """
         return self._lookup(name, dns.IN, dns.RP, timeout)
 
     def lookupAFSDatabase(self, name, timeout=None):
         """
-        @see: twisted.internet.interfaces.IResolver.lookupAFSDatabase
+        @see: L{twisted.internet.interfaces.IResolver.lookupAFSDatabase}
         """
         return self._lookup(name, dns.IN, dns.AFSDB, timeout)
 
     def lookupZone(self, name, timeout=None):
         """
-        @see: twisted.internet.interfaces.IResolver.lookupZone
+        @see: L{twisted.internet.interfaces.IResolver.lookupZone}
         """
         return self._lookup(name, dns.IN, dns.AXFR, timeout)
 
 
     def lookupNamingAuthorityPointer(self, name, timeout=None):
         """
-        @see: twisted.internet.interfaces.IResolve.lookupNamingAuthorityPointer
+        @see: L{twisted.internet.interfaces.IResolve.lookupNamingAuthorityPointer}
         """
         return self._lookup(name, dns.IN, dns.NAPTR, timeout)
 
 
     def lookupAllRecords(self, name, timeout=None):
         """
-        @see: twisted.internet.interfaces.IResolver.lookupAllRecords
+        @see: L{twisted.internet.interfaces.IResolver.lookupAllRecords}
         """
         return self._lookup(name, dns.IN, dns.ALL_RECORDS, timeout)
 
     def getHostByName(self, name, timeout = None, effort = 10):
         """
-        @see: twisted.names.client.getHostByName
+        @see: L{twisted.names.client.getHostByName}
         """
         # XXX - respect timeout
         return self.lookupAllRecords(name, timeout

=== modified file 'twisted/names/test/test_common.py'
--- twisted/names/test/test_common.py	2012-10-09 21:19:50 +0000
+++ twisted/names/test/test_common.py	2013-02-22 12:18:36 +0000
@@ -7,6 +7,9 @@
 
 from __future__ import division, absolute_import
 
+from zope.interface.verify import verifyClass
+
+from twisted.internet.interfaces import IResolver
 from twisted.trial.unittest import SynchronousTestCase
 from twisted.python.failure import Failure
 from twisted.names.common import ResolverBase
@@ -79,6 +82,14 @@
     """
     Tests for L{ResolverBase.query}.
     """
+
+    def test_resolverBaseProvidesIResolver(self):
+        """
+        L{ResolverBase} provides the L{IResolver} interface.
+        """
+        verifyClass(IResolver, ResolverBase)
+
+
     def test_typeToMethodDispatch(self):
         """
         L{ResolverBase.query} looks up a method to invoke using the type of the
@@ -123,4 +134,3 @@
         queryDeferred.addBoth(result.append)
         self.assertIsInstance(result[0], Failure)
         result[0].trap(NotImplementedError)
-

=== modified file 'twisted/names/test/test_names.py'
--- twisted/names/test/test_names.py	2012-10-11 18:32:14 +0000
+++ twisted/names/test/test_names.py	2013-02-22 12:37:23 +0000
@@ -9,9 +9,11 @@
 import socket, operator, copy
 from StringIO import StringIO
 
+from zope.interface.verify import verifyClass, verifyObject
+
 from twisted.trial import unittest
 
-from twisted.internet import reactor, defer, error
+from twisted.internet import reactor, defer, error, interfaces
 from twisted.internet.task import Clock
 from twisted.internet.defer import succeed
 from twisted.names import client, server, common, authority, dns
@@ -815,3 +817,17 @@
 
         self.assertEqual(
             [dns.Query('example.com', dns.AXFR, dns.IN)], msg.queries)
+
+class ClientResolverTests(unittest.TestCase):
+    def test_clientProvidesIResolver(self):
+        """
+        L{client} provides L{interfaces.IResolver} through a series of free
+        functions.
+        """
+        verifyObject(interfaces.IResolver, client)
+
+    def test_clientResolverProvidesIResolver(self):
+        """
+        L{client.Resolver} provides L{interfaces.IResolver}.
+        """
+        verifyClass(interfaces.IResolver, client.Resolver)

