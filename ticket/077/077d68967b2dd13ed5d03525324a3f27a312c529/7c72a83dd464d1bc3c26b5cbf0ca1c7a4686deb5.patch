--- doc/core/howto/endpoints.html.orig	2015-04-01 11:48:13.402610506 -0400
+++ doc/core/howto/endpoints.html	2015-04-01 11:48:18.686610662 -0400
@@ -212,11 +212,6 @@
 <span class="n">reactor</span><span class="o">.</span><span class="n">callLater</span><span class="p">(</span><span class="mi">30</span><span class="p">,</span> <span class="n">attempt</span><span class="o">.</span><span class="n">cancel</span><span class="p">)</span>
 </pre></div>
 </div>
-<div class="admonition note">
-<p class="first admonition-title">Note</p>
-<p class="last">If you&#8217;ve used <tt class="docutils literal"><span class="pre">ClientFactory</span></tt> before, keep in mind that the <tt class="docutils literal"><span class="pre">connect</span></tt> method takes a <tt class="docutils literal"><span class="pre">Factory</span></tt>, not a <tt class="docutils literal"><span class="pre">ClientFactory</span></tt>.
-Even if you pass a <tt class="docutils literal"><span class="pre">ClientFactory</span></tt> to <tt class="docutils literal"><span class="pre">endpoint.connect</span></tt>, its <tt class="docutils literal"><span class="pre">clientConnectionFailed</span></tt> and <tt class="docutils literal"><span class="pre">clientConnectionLost</span></tt> methods will not be called.</p>
-</div>
 </div>
 </div>
 <div class="section" id="maximizing-the-return-on-your-endpoint-investment">
--- twisted/internet/endpoints.py.orig	2015-04-01 11:17:23.498556036 -0400
+++ twisted/internet/endpoints.py	2015-04-01 11:46:00.990606607 -0400
@@ -234,13 +234,26 @@
 
     def clientConnectionFailed(self, connector, reason):
         """
+        Call the C{ClientFactory.clientConnectionFailed()} callback if
+        available
+
         Errback the C{self._onConnection} L{Deferred} when the
         client connection fails.
         """
+        if hasattr(self._wrappedFactory, 'clientConnectionFailed'):
+            self._wrappedFactory.clientConnectionFailed(connector, reason)
         if not self._onConnection.called:
             self._onConnection.errback(reason)
 
 
+    def clientConnectionLost(self, connector, reason):
+        """
+        Call the C{ClientFactory.clientConnectionLost()} callback if
+        available.
+        """
+        if hasattr(self._wrappedFactory, 'clientConnectionLost'):
+            self._wrappedFactory.clientConnectionLost(connector, reason)
+
 
 @implementer(interfaces.IStreamServerEndpoint)
 class StandardIOEndpoint(object):
