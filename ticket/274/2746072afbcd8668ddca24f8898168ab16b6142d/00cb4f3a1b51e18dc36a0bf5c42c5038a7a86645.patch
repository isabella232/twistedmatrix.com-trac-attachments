=== modified file 'NEWS'
--- old/NEWS	2012-02-11 13:47:35 +0000
+++ new/NEWS	2012-03-14 07:20:49 +0000
@@ -57,7 +57,7 @@
 Other
 -----
  - #1712, #2725, #5284, #5325, #5331, #5362, #5364, #5371, #5407,
-   #5427, #5430, #5431, #5440, #5441
+   #5427, #5430, #5431, #5440, #5441, #5537
 
 
 Twisted Conch 12.0.0 (2012-02-10)

=== modified file 'twisted/news/nntp.py'
--- old/twisted/news/nntp.py	2011-02-14 04:45:15 +0000
+++ new/twisted/news/nntp.py	2012-03-14 07:06:22 +0000
@@ -47,7 +47,7 @@
         try:
             a = int(articles[0])
             return a, a
-        except ValueError, e:
+        except ValueError:
             return None, None
     elif len(articles) == 2:
         try:
@@ -59,7 +59,7 @@
                 h = int(articles[1])
             else:
                 h = None
-        except ValueError, e:
+        except ValueError:
             return None, None
     return l, h
 
@@ -700,24 +700,6 @@
         self.sendLine('502 no permission')
 
 
-    def do_XROVER(self, header, range = None):
-        d = self.xhdrWork(header, range)
-        if d:
-            d.addCallbacks(self._gotXROVER, self._errXROVER)
-    
-    
-    def _gotXROVER(self, parts):
-        self.sendLine('224 Overview information follows')
-        for i in parts:
-            self.sendLine('%d %s' % i)
-        self.sendLine('.')
-
-
-    def _errXROVER(self, failure):
-        print 'XROVER failed: ',
-        self._errXHDR(failure)
-
-
     def do_POST(self):
         self.inputHandler = self._doingPost
         self.message = ''
@@ -819,7 +801,7 @@
                     try:
                         article = int(article)
                         return func(self.currentGroup, article) 
-                    except ValueError, e:
+                    except ValueError:
                         self.sendLine('501 command syntax error')
 
 
@@ -975,7 +957,7 @@
 
 
     def do_XROVER(self, range = None):
-        self.do_XHDR(self, 'References', range)
+        self.do_XHDR('References', range)
 
 
     def do_IHAVE(self, id):

=== modified file 'twisted/news/test/test_nntp.py'
--- old/twisted/news/test/test_nntp.py	2011-07-14 18:05:14 +0000
+++ new/twisted/news/test/test_nntp.py	2012-03-14 07:13:24 +0000
@@ -5,6 +5,7 @@
 from twisted.news import database
 from twisted.news import nntp
 from twisted.protocols import loopback
+from twisted.test import proto_helpers
 
 ALL_GROUPS = ('alt.test.nntp', 0, 1, 'y'),
 GROUP = ('0', '1', '0', 'alt.test.nntp', 'group', 'selected')
@@ -109,6 +110,8 @@
         for s in SUBSCRIPTIONS:
             self.backend.addSubscription(s)
 
+        self.transport = proto_helpers.StringTransport()
+        self.server.makeConnection(self.transport)
         self.client = TestNNTPClient()
 
     def testLoopback(self):
@@ -122,3 +125,41 @@
         #         reactor.iterate(1) # fetchGroup()
         #         reactor.iterate(1) # postArticle()
 
+    def test_connectionMade(self):
+        self.assertEqual(self.transport.value().split('\r\n'), [
+            '200 server ready - posting allowed',
+            ''])
+
+    def test_list(self):
+        self.server.do_LIST()
+        self.assertEqual(self.transport.value().split('\r\n'), [
+            '200 server ready - posting allowed',
+            '215 newsgroups in form "group high low flags"',
+            'alt.test.nntp 0 1 y',
+            '.',
+            ''])
+
+    def test_group(self):
+        self.server.do_GROUP('alt.test.nntp')
+        self.assertEqual(self.transport.value().split('\r\n'), [
+            '200 server ready - posting allowed',
+            '211 0 1 0 alt.test.nntp group selected',
+            ''])
+
+    def test_listgroup(self):
+        self.server.do_LISTGROUP('alt.test.nntp')
+        self.assertEqual(self.transport.value().split('\r\n'), [
+            '200 server ready - posting allowed',
+            '211 list of article numbers follow',
+            '.',
+            ''])
+
+    def test_xrover(self):
+        self.server.do_GROUP('alt.test.nntp')
+        self.transport.clear()
+
+        self.server.do_XROVER()
+        self.assertEqual(self.transport.value().split('\r\n'), [
+            '221 Header follows',
+            '.',
+            ''])

