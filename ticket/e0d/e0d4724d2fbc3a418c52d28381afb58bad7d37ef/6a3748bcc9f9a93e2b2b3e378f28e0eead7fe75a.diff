diff -ur mail.orig/smtp.py mail/smtp.py
--- mail.orig/smtp.py	2009-02-01 01:53:00.890625000 +0900
+++ mail/smtp.py	2009-02-02 17:30:46.015625000 +0900
@@ -1134,6 +1134,7 @@
     ## Helpers for FileSender
     ##
     def transformChunk(self, chunk):
+        self.resetTimeout()
         return chunk.replace('\n', '\r\n').replace('\r\n.', '\r\n..')
 
diff -ur mail.orig/test/test_smtp.py mail/test/test_smtp.py
--- mail.orig/test/test_smtp.py	2009-02-01 14:18:26.031250000 +0900
+++ mail/test/test_smtp.py	2009-02-02 17:30:57.953125000 +0900
@@ -200,6 +201,24 @@
         if self.clientData:
             self.sendLine(self.clientData.pop())
 
+class MySlowFile:
+    def __init__(self, file):
+        self._file = file
+    
+    def seek(self, p, q):
+        return self._file.seek(p, q)
+        
+    def read(self, n):
+        time.sleep(0.1)
+        return self._file.read(1)
+
+class MySlowSMTPClient(MySMTPClient):
+    timeout = 0.1
+    def getMailData(self):
+        return MySlowFile(StringIO(self.mail[2]))
+
+    def sendError(self, exc):
+        assert False  # should never be called
 
 class SMTPClientTestCase(unittest.TestCase, LoopbackMixin):
 
@@ -218,6 +237,15 @@
                       self.assertEquals(server.buffer, self.expected_output))
         return d
 
+    def testSlowMessage(self):
+        client = MySlowSMTPClient()
+        server = FakeSMTPServer()
+        d = self.loopback(server, client)
+        d.addCallback(lambda x :
+                      self.assertEquals(server.buffer, self.expected_output))
+        return d
+        
+        
 class DummySMTPMessage:
 
     def __init__(self, protocol, users):
