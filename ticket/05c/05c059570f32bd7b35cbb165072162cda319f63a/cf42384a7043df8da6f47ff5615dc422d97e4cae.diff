Index: twisted/vfs/test/test_sftp.py
===================================================================
--- twisted/vfs/test/test_sftp.py	(revision 16669)
+++ twisted/vfs/test/test_sftp.py	(working copy)
@@ -85,6 +85,13 @@
         self.sftp.removeFile('/file.txt')
         self._assertNodes('/', ['.', '..', 'ned'])
 
+    def test_removeFileMissing(self):
+        # Trying to remove a file that doesn't exist should fail with
+        # FX_NO_SUCH_FILE.
+        e = self.assertRaises(SFTPError,
+           self.sftp.removeFile, 'file-that-does-not-exist.txt')
+        self.assertEqual(FX_NO_SUCH_FILE, e.code)
+
     def test_renameFile(self):
         self.sftp.renameFile('/file.txt', '/radixiscool.txt')
         self._assertNodes('/', ['.', '..', 'ned', 'radixiscool.txt'])
Index: twisted/vfs/adapters/sftp.py
===================================================================
--- twisted/vfs/adapters/sftp.py	(revision 16669)
+++ twisted/vfs/adapters/sftp.py	(working copy)
@@ -76,7 +76,9 @@
             parentNode = self.filesystem.fetch('/'.join(dirname))
         except ivfs.NotFoundError, e:
             raise SFTPError(FX_NO_SUCH_FILE, e.args[0])
-        except KeyError, e: # XXX: awful exception to catch
+        except KeyError, e:
+            # XXX: backends shouldn't raise KeyError to mean NotFoundError
+            # error, but they do.
             raise SFTPError(FX_NO_SUCH_FILE, e.args[0])
         if createPlease:
             child = parentNode.createFile(basename, exclusive)
@@ -88,7 +90,14 @@
         return AdaptFileSystemLeafToISFTPFile(child)
 
     def removeFile(self, filename):
-        self.filesystem.fetch(filename).remove()
+        try:
+            self.filesystem.fetch(filename).remove()
+        except ivfs.NotFoundError, e:
+            raise SFTPError(FX_NO_SUCH_FILE, e.args[0])
+        except KeyError, e:
+            # XXX: backends shouldn't raise KeyError to mean NotFoundError
+            # error, but they do.
+            raise SFTPError(FX_NO_SUCH_FILE, e.args[0])
 
     def renameFile(self, oldpath, newpath):
         try:
