--- old/portforward.py	Wed Feb 25 19:38:45 2004
+++ new/portforward.py	Wed Feb 25 19:38:50 2004
@@ -1,4 +1,3 @@
-
 # Twisted, the Framework of Your Internet
 # Copyright (C) 2001 Matthew W. Lefkowitz
 # 
@@ -24,31 +23,28 @@
 
 
 class Proxy(protocol.Protocol):
-
-    peer = None
-    buf = ''
+    def __init__(self):
+        self.peer = None
 
     def setPeer(self, peer):
         self.peer = peer
-        self.peer.transport.write(self.buf)
-        self.buf = ''
 
     def connectionLost(self, reason):
-        self.peer.transport.loseConnection()
-        del self.peer
-
-    def dataReceived(self, data):
         if self.peer:
-            self.peer.transport.write(data)
+            self.peer.transport.loseConnection()
+            self.peer = None
         else:
-            self.buf += data
+            print "Unable to connect to peer: %s" % reason
 
+    def dataReceived(self, data):
+        self.peer.transport.write(data)
 
 class ProxyClient(Proxy):
-
     def connectionMade(self):
         self.peer.setPeer(self)
-
+        # We're connected, everybody can read to their hearts content.
+        self.transport.startReading()
+        self.peer.transport.startReading()
 
 class ProxyClientFactory(protocol.ClientFactory):
 
@@ -73,15 +69,18 @@
     def connectionMade(self):
         client = self.clientProtocolFactory()
         client.setServer(self)
+        # Don't read anything from the connecting client until we have
+        # somewhere to send it to.
+        self.transport.stopReading()
         client = reactor.connectTCP(self.factory.host, self.factory.port,
                                     client)
 
 
 class ProxyFactory(protocol.Factory):
     """Factory for port forwarder."""
-    
+
     protocol = ProxyServer
-    
+
     def __init__(self, host, port):
         self.host = host
         self.port = port
