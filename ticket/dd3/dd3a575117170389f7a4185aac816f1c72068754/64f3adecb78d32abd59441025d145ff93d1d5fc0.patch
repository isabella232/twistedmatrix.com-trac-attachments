Index: twisted/words/test/test_irc.py
===================================================================
--- twisted/words/test/test_irc.py	(revision 27117)
+++ twisted/words/test/test_irc.py	(working copy)
@@ -723,3 +723,46 @@ class ClientTests(TestCase):
                 username, hostname, servername, self.protocol.realname),
             '']
         self.assertEquals(self.transport.value().split('\r\n'), expected)
+
+
+    def test_describe(self):
+        """
+        L{IRCClient.desrcibe} sends a CTCP ACTION message to the target
+        specified.
+        """
+        target = 'foo'
+        channel = '#bar'
+        action = 'waves'
+        self.protocol.describe(target, action)
+        self.protocol.describe(channel, action)
+        expected = [
+            'PRIVMSG %s :\01ACTION %s\01' % (target, action),
+            'PRIVMSG %s :\01ACTION %s\01' % (channel, action),
+            '']
+        self.assertEquals(self.transport.value().split('\r\n'), expected)
+
+
+    def test_me(self):
+        """
+        L{IRCClient.me} sends a CTCP ACTION message to the target channel
+        specified.
+        If the target does not begin with a standard channel prefix,
+        '#' is prepended.
+        """
+        target = 'foo'
+        channel = '#bar'
+        action = 'waves'
+        self.protocol.me(target, action)
+        self.protocol.me(channel, action)
+        expected = [
+            'PRIVMSG %s :\01ACTION %s\01' % ('#' + target, action),
+            'PRIVMSG %s :\01ACTION %s\01' % (channel, action),
+            '']
+        self.assertEquals(self.transport.value().split('\r\n'), expected)
+        warnings = self.flushWarnings(
+            offendingFunctions=[self.test_me])
+        self.assertEquals(
+            warnings[0]['message'],
+            "me() is deprecated since Twisted 9.0. Use IRCClient.describe().")
+        self.assertEquals(warnings[0]['category'], DeprecationWarning)
+        self.assertEquals(len(warnings), 2)
Index: twisted/words/protocols/irc.py
===================================================================
--- twisted/words/protocols/irc.py	(revision 27117)
+++ twisted/words/protocols/irc.py	(working copy)
@@ -30,6 +30,7 @@ Test coverage needs to be better.
 
 import errno, os, random, re, stat, struct, sys, time, types, traceback
 import string, socket
+import warnings
 from os import path
 
 from twisted.internet import reactor, protocol
@@ -1067,19 +1068,39 @@ class IRCClient(basic.LineReceiver):
 
     ### user input commands, client->client
 
+    def describe(self, channel, action):
+        """
+        Strike a pose.
+
+        @type channel: C{str}
+        @param channel: The name of the channel to have an action on. If it
+            has no prefix, it is sent to the user of that name.
+        @type action: C{str}
+        @param action: The action to preform.
+        @since: 9.0
+        """
+        self.ctcpMakeQuery(channel, [('ACTION', action)])
+
+
     def me(self, channel, action):
         """
         Strike a pose.
 
+        This function is deprecated since Twisted 9.0. Use describe().
+
         @type channel: C{str}
         @param channel: The name of the channel to have an action on. If it
             has no prefix, C{'#'} will to prepended to it.
         @type action: C{str}
         @param action: The action to preform.
         """
+        warnings.warn("me() is deprecated since Twisted 9.0. Use IRCClient.describe().",
+                DeprecationWarning, stacklevel=2)
+
         if channel[0] not in '&#!+': channel = '#' + channel
-        self.ctcpMakeQuery(channel, [('ACTION', action)])
+        self.describe(channel, action)
 
+
     _pings = None
     _MAX_PINGRING = 12
 
