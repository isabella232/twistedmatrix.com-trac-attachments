From efba28acedf76acf42a4b8082f0f76e9910fbe0d Mon Sep 17 00:00:00 2001
Message-Id: <efba28acedf76acf42a4b8082f0f76e9910fbe0d.1384213241.git.luto@amacapital.net>
In-Reply-To: <ac8953b397664aef3efef3aedbe3c3cf60340c98.1384213241.git.luto@amacapital.net>
References: <ac8953b397664aef3efef3aedbe3c3cf60340c98.1384213241.git.luto@amacapital.net>
From: Andy Lutomirski <luto@amacapital.net>
Date: Mon, 11 Nov 2013 15:37:38 -0800
Subject: [PATCH 2/2] Remove
 twisted.protocols.test.test_tls.HandshakeCallbackContextFactory

It's no longer necessary -- whenHandshakeDone is a better replacement.
---
 twisted/protocols/test/test_tls.py | 76 ++++++++++----------------------------
 1 file changed, 19 insertions(+), 57 deletions(-)

diff --git a/twisted/protocols/test/test_tls.py b/twisted/protocols/test/test_tls.py
index b170846..c5651d6 100644
--- a/twisted/protocols/test/test_tls.py
+++ b/twisted/protocols/test/test_tls.py
@@ -42,52 +42,15 @@ from twisted.test.test_tcp import ConnectionLostNotifyingProtocol
 from twisted.test.proto_helpers import StringTransport
 
 
-class HandshakeCallbackContextFactory:
+class TestContextFactory:
     """
-    L{HandshakeCallbackContextFactory} is a factory for SSL contexts which
-    allows applications to get notification when the SSL handshake completes.
-
-    @ivar _finished: A L{Deferred} which will be called back when the handshake
-        is done.
+    L{TestContextFactory} is a trivial factory for SSL contexts.
     """
-    # pyOpenSSL needs to expose this.
-    # https://bugs.launchpad.net/pyopenssl/+bug/372832
-    SSL_CB_HANDSHAKE_DONE = 0x20
-
-    def __init__(self):
-        self._finished = Deferred()
-
-
-    def factoryAndDeferred(cls):
-        """
-        Create a new L{HandshakeCallbackContextFactory} and return a two-tuple
-        of it and a L{Deferred} which will fire when a connection created with
-        it completes a TLS handshake.
-        """
-        contextFactory = cls()
-        return contextFactory, contextFactory._finished
-    factoryAndDeferred = classmethod(factoryAndDeferred)
-
-
-    def _info(self, connection, where, ret):
-        """
-        This is the "info callback" on the context.  It will be called
-        periodically by pyOpenSSL with information about the state of a
-        connection.  When it indicates the handshake is complete, it will fire
-        C{self._finished}.
-        """
-        if where & self.SSL_CB_HANDSHAKE_DONE:
-            self._finished.callback(None)
-
-
     def getContext(self):
         """
-        Create and return an SSL context configured to use L{self._info} as the
-        info callback.
+        Create and return an SSL context.
         """
-        context = Context(TLSv1_METHOD)
-        context.set_info_callback(self._info)
-        return context
+        return Context(TLSv1_METHOD)
 
 
 
@@ -290,8 +253,7 @@ class TLSMemoryBIOTests(TestCase):
         clientFactory = ClientFactory()
         clientFactory.protocol = Protocol
 
-        clientContextFactory, _ = (
-            HandshakeCallbackContextFactory.factoryAndDeferred())
+        clientContextFactory = TestContextFactory()
         wrapperFactory = TLSMemoryBIOFactory(
             clientContextFactory, True, clientFactory)
         sslClientProtocol = wrapperFactory.buildProtocol(None)
@@ -334,7 +296,7 @@ class TLSMemoryBIOTests(TestCase):
             lambda: ConnectionLostNotifyingProtocol(
                 clientConnectionLost))
 
-        clientContextFactory = HandshakeCallbackContextFactory()
+        clientContextFactory = TestContextFactory()
         wrapperFactory = TLSMemoryBIOFactory(
             clientContextFactory, True, clientFactory)
         sslClientProtocol = wrapperFactory.buildProtocol(None)
@@ -399,7 +361,7 @@ class TLSMemoryBIOTests(TestCase):
         clientFactory = ClientFactory()
         clientFactory.protocol = Protocol
 
-        clientContextFactory = HandshakeCallbackContextFactory()
+        clientContextFactory = TestContextFactory()
         wrapperFactory = TLSMemoryBIOFactory(
             clientContextFactory, True, clientFactory)
         sslClientProtocol = wrapperFactory.buildProtocol(None)
@@ -446,7 +408,7 @@ class TLSMemoryBIOTests(TestCase):
         clientFactory = ClientFactory()
         clientFactory.protocol = Protocol
 
-        clientContextFactory = HandshakeCallbackContextFactory()
+        clientContextFactory = TestContextFactory()
         wrapperFactory = TLSMemoryBIOFactory(
             clientContextFactory, True, clientFactory)
         sslClientProtocol = wrapperFactory.buildProtocol(None)
@@ -484,11 +446,11 @@ class TLSMemoryBIOTests(TestCase):
         clientFactory = ClientFactory()
         clientFactory.protocol = Protocol
 
-        clientContextFactory, handshakeDeferred = (
-            HandshakeCallbackContextFactory.factoryAndDeferred())
+        clientContextFactory = TestContextFactory()
         wrapperFactory = TLSMemoryBIOFactory(
             clientContextFactory, True, clientFactory)
         sslClientProtocol = wrapperFactory.buildProtocol(None)
+        handshakeDeferred = sslClientProtocol.whenHandshakeDone()
 
         serverFactory = ServerFactory()
         serverFactory.protocol = Protocol
@@ -524,11 +486,11 @@ class TLSMemoryBIOTests(TestCase):
         clientFactory = ClientFactory()
         clientFactory.protocol = lambda: clientProtocol
 
-        clientContextFactory, handshakeDeferred = (
-            HandshakeCallbackContextFactory.factoryAndDeferred())
+        clientContextFactory = TestContextFactory()
         wrapperFactory = TLSMemoryBIOFactory(
             clientContextFactory, True, clientFactory)
         sslClientProtocol = wrapperFactory.buildProtocol(None)
+        handshakeDeferred = sslClientProtocol.whenHandshakeDone()
 
         serverProtocol = AccumulatingProtocol(len(bytes))
         serverFactory = ServerFactory()
@@ -566,11 +528,11 @@ class TLSMemoryBIOTests(TestCase):
         clientFactory = ClientFactory()
         clientFactory.protocol = sendingProtocol
 
-        clientContextFactory, handshakeDeferred = (
-            HandshakeCallbackContextFactory.factoryAndDeferred())
+        clientContextFactory = TestContextFactory()
         wrapperFactory = TLSMemoryBIOFactory(
             clientContextFactory, True, clientFactory)
         sslClientProtocol = wrapperFactory.buildProtocol(None)
+        handshakeDeferred = sslClientProtocol.whenHandshakeDone()
 
         serverProtocol = AccumulatingProtocol(len(bytes))
         serverFactory = ServerFactory()
@@ -668,7 +630,7 @@ class TLSMemoryBIOTests(TestCase):
         clientFactory = ClientFactory()
         clientFactory.protocol = SimpleSendingProtocol
 
-        clientContextFactory = HandshakeCallbackContextFactory()
+        clientContextFactory = TestContextFactory()
         wrapperFactory = TLSMemoryBIOFactory(
             clientContextFactory, True, clientFactory)
         sslClientProtocol = wrapperFactory.buildProtocol(None)
@@ -707,7 +669,7 @@ class TLSMemoryBIOTests(TestCase):
         clientFactory = ClientFactory()
         clientFactory.protocol = SimpleSendingProtocol
 
-        clientContextFactory = HandshakeCallbackContextFactory()
+        clientContextFactory = TestContextFactory()
         wrapperFactory = TLSMemoryBIOFactory(
             clientContextFactory, True, clientFactory)
         sslClientProtocol = wrapperFactory.buildProtocol(None)
@@ -742,7 +704,7 @@ class TLSMemoryBIOTests(TestCase):
             lambda: ConnectionLostNotifyingProtocol(
                 clientConnectionLost))
 
-        clientContextFactory = HandshakeCallbackContextFactory()
+        clientContextFactory = TestContextFactory()
         wrapperFactory = TLSMemoryBIOFactory(
             clientContextFactory, True, clientFactory)
         sslClientProtocol = wrapperFactory.buildProtocol(None)
@@ -782,11 +744,11 @@ class TLSMemoryBIOTests(TestCase):
         clientProtocol = NotifyingProtocol(clientConnectionLost)
         clientFactory.protocol = lambda: clientProtocol
 
-        clientContextFactory, handshakeDeferred = (
-            HandshakeCallbackContextFactory.factoryAndDeferred())
+        clientContextFactory = TestContextFactory()
         wrapperFactory = TLSMemoryBIOFactory(
             clientContextFactory, True, clientFactory)
         sslClientProtocol = wrapperFactory.buildProtocol(None)
+        handshakeDeferred = sslClientProtocol.whenHandshakeDone()
 
         serverConnectionLost = Deferred()
         serverProtocol = NotifyingProtocol(serverConnectionLost)
-- 
1.8.3.1

