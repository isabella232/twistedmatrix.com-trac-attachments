diff --git a/twisted/logger/_global.py b/twisted/logger/_global.py
index 52464dc..62a544d 100644
--- a/twisted/logger/_global.py
+++ b/twisted/logger/_global.py
@@ -26,8 +26,8 @@ from ._file import FileLogObserver
 
 MORE_THAN_ONCE_WARNING = (
     "Warning: primary log target selected twice at <{fileNow}:{lineNow}> - "
-    "previously selected at <{fileThen:logThen}>.  Remove one of the calls to "
-    "beginLoggingTo."
+    "previously selected at <{fileThen}:{lineThen}>.  Remove one of the calls "
+    "to beginLoggingTo."
 )
 
 
diff --git a/twisted/logger/test/test_global.py b/twisted/logger/test/test_global.py
index 33521da..7cf27d9 100644
--- a/twisted/logger/test/test_global.py
+++ b/twisted/logger/test/test_global.py
@@ -11,6 +11,7 @@ import io
 
 from twisted.trial import unittest
 
+from .._format import formatEvent
 from .._observer import LogPublisher
 from .._logger import Logger
 from .._global import LogBeginner
@@ -186,6 +187,22 @@ class LogBeginnerTests(unittest.TestCase):
         compareEvents(self, events2, [warning, dict(event="postwarn")])
 
 
+    def test_beginLoggingToTwiceFormatting(self):
+        """
+        Test C{MORE_THAN_ONCE_WARNING} string formatting.
+        """
+        firstFilename, firstLine = nextLine()
+        secondFilename, secondLine = nextLine()
+        warning = dict(
+            log_format=MORE_THAN_ONCE_WARNING,
+            log_level=LogLevel.warn,
+            fileNow=firstFilename, lineNow=firstLine,
+            fileThen=secondFilename, lineThen=secondLine
+        )
+        result = formatEvent(warning)
+        self.assertNotIn("Unable to format event", result)
+
+
     def test_criticalLogging(self):
         """
         Critical messages will be written as text to the error stream.
