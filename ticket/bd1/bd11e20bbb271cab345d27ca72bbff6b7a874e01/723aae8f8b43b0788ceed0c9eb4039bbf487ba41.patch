diff --git a/twisted/logger/_global.py b/twisted/logger/_global.py
index 52464dc..62a544d 100644
--- a/twisted/logger/_global.py
+++ b/twisted/logger/_global.py
@@ -26,8 +26,8 @@ from ._file import FileLogObserver
 
 MORE_THAN_ONCE_WARNING = (
     "Warning: primary log target selected twice at <{fileNow}:{lineNow}> - "
-    "previously selected at <{fileThen:logThen}>.  Remove one of the calls to "
-    "beginLoggingTo."
+    "previously selected at <{fileThen}:{lineThen}>.  Remove one of the calls "
+    "to beginLoggingTo."
 )
 
 
diff --git a/twisted/logger/test/test_global.py b/twisted/logger/test/test_global.py
index 33521da..5e7e88d 100644
--- a/twisted/logger/test/test_global.py
+++ b/twisted/logger/test/test_global.py
@@ -11,6 +11,7 @@ import io
 
 from twisted.trial import unittest
 
+from .._file import textFileLogObserver
 from .._observer import LogPublisher
 from .._logger import Logger
 from .._global import LogBeginner
@@ -160,12 +161,14 @@ class LogBeginnerTests(unittest.TestCase):
         """
         events1 = []
         events2 = []
+        fileHandle = io.StringIO()
+        textObserver = textFileLogObserver(fileHandle)
         self.publisher(dict(event="prebuffer"))
         firstFilename, firstLine = nextLine()
-        self.beginner.beginLoggingTo([events1.append])
+        self.beginner.beginLoggingTo([events1.append, textObserver])
         self.publisher(dict(event="postbuffer"))
         secondFilename, secondLine = nextLine()
-        self.beginner.beginLoggingTo([events2.append])
+        self.beginner.beginLoggingTo([events2.append, textObserver])
         self.publisher(dict(event="postwarn"))
         warning = dict(
             log_format=MORE_THAN_ONCE_WARNING,
@@ -185,6 +188,12 @@ class LogBeginnerTests(unittest.TestCase):
         )
         compareEvents(self, events2, [warning, dict(event="postwarn")])
 
+        output = fileHandle.getvalue()
+        self.assertIn('<{0}:{1}>'.format(firstFilename, firstLine),
+                      output)
+        self.assertIn('<{0}:{1}>'.format(secondFilename, secondLine),
+                      output)
+
 
     def test_criticalLogging(self):
         """
diff --git a/twisted/topfiles/7916.bugfix b/twisted/topfiles/7916.bugfix
new file mode 100644
index 0000000..249b83b
--- /dev/null
+++ b/twisted/topfiles/7916.bugfix
@@ -0,0 +1 @@
+twisted.logger._global.MORE_THAN_ONCE_WARNING now is properly formattable
\ No newline at end of file
