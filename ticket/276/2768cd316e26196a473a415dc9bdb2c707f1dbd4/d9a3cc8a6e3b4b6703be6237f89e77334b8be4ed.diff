diff --git a/twisted/conch/ssh/keys.py b/twisted/conch/ssh/keys.py
index bbd5f96..cbcb15c 100644
--- a/twisted/conch/ssh/keys.py
+++ b/twisted/conch/ssh/keys.py
@@ -113,7 +113,7 @@ class Key(object):
             integer y
 
         @type blob: C{str}
-        @return: a C{Crypto.PublicKey.pubkey.pubkey} object
+        @return: a C{twisted.conch.ssh.keys.Key} object
         @raises BadKeyError: if the key type (the first string) is unknown.
         """
         keyType, rest = common.getNS(blob)
@@ -151,7 +151,7 @@ class Key(object):
             integer x
 
         @type blob: C{str}
-        @return: a C{Crypto.PublicKey.pubkey.pubkey} object
+        @return: a C{twisted.conch.ssh.keys.Key} object
         @raises BadKeyError: if the key type (the first string) is unknown.
         """
         keyType, rest = common.getNS(blob)
@@ -176,7 +176,7 @@ class Key(object):
             <key type> <base64-encoded public key blob>
 
         @type data: C{str}
-        @return: A {Crypto.PublicKey.pubkey.pubkey} object
+        @return: A C{twisted.conch.ssh.keys.Key} object
         @raises BadKeyError: if the blob type is unknown.
         """
         blob = base64.decodestring(data.split()[1])
@@ -205,7 +205,7 @@ class Key(object):
 
         @type data: C{str}
         @type passphrase: C{str}
-        @return: a C{Crypto.PublicKey.pubkey.pubkey} object
+        @return: a C{twisted.conch.ssh.keys.Key} object
         @raises BadKeyError: if
             * a passphrase is provided for an unencrypted key
             * the ASN.1 encoding is incorrect
@@ -288,7 +288,7 @@ class Key(object):
         The names for a DSA (key type 'dsa') key are: y, g, p, q.
 
         @type data: C{str}
-        @return: a C{Crypto.PublicKey.pubkey.pubkey} object
+        @return: a C{twisted.conch.ssh.keys.Key} object
         @raises BadKeyError: if the key type is unknown
         """
         sexp = sexpy.parse(base64.decodestring(data[1:-1]))
@@ -315,7 +315,7 @@ class Key(object):
         The names for a DSA (key type 'dsa') key are: y, g, p, q, x.
 
         @type data: C{str}
-        @return: a {Crypto.PublicKey.pubkey.pubkey} object
+        @return: a C{twisted.conch.ssh.keys.Key} object
         @raises BadKeyError: if the key type is unknown
         """
         sexp = sexpy.parse(data)
@@ -361,7 +361,7 @@ class Key(object):
             integer x
 
         @type data: C{str}
-        @return: a C{Crypto.PublicKey.pubkey.pubkey} object
+        @return: a C{twisted.conch.ssh.keys.Key} object
         @raises BadKeyError: if the key type (the first string) is unknown
         """
         keyType, data = common.getNS(data)
@@ -413,8 +413,7 @@ class Key(object):
 
     def __init__(self, keyObject):
         """
-        Initialize a PublicKey with a C{Crypto.PublicKey.pubkey.pubkey}
-        object.
+        Initialize a Key with a C{Crypto.PublicKey.pubkey.pubkey} object.
 
         @type keyObject: C{Crypto.PublicKey.pubkey.pubkey}
         """
