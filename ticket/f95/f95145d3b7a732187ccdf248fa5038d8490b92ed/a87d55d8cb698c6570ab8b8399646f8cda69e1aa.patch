diff --git a/twisted/web/server.py b/twisted/web/server.py
index 8edab18..e7e528e 100644
--- twisted/web/server.py
+++ twisted/web/server.py
@@ -286,10 +286,10 @@ class Request(pb.Copyable, http.Request, components.Componentized):
         """
         self.setETag(tag)
 
-    def view_setResponseCode(self, issuer, code):
+    def view_setResponseCode(self, issuer, code, message = None):
         """Remote version of setResponseCode; same interface.
         """
-        self.setResponseCode(code)
+        self.setResponseCode(code, message)
 
     def view_registerProducer(self, issuer, producer, streaming):
         """Remote version of registerProducer; same interface.
diff --git a/twisted/web/test/test_distrib.py b/twisted/web/test/test_distrib.py
index 172dab3..421f821 100755
--- twisted/web/test/test_distrib.py
+++ twisted/web/test/test_distrib.py
@@ -145,6 +145,37 @@ class DistribTest(unittest.TestCase):
         request.addCallback(cbRequested)
         return request
 
+    def test_requestResponseCode(self):
+        """
+	The response code can be set by the request object passed to a
+        distributed resource's C{render} method.
+        """
+        class SetResponseCode(resource.Resource):
+            def render(self, request):
+		request.setResponseCode(200)
+                return ""
+
+        request = self._requestTest(SetResponseCode())
+        def cbRequested(result):
+            self.assertEqual(result, "")
+        request.addCallback(cbRequested)
+        return request
+
+    def test_requestResponseCode_message(self):
+        """
+	The response code and message can be set by the request object passed to a
+        distributed resource's C{render} method.
+        """
+        class SetResponseCode(resource.Resource):
+            def render(self, request):
+		request.setResponseCode(200, "OK")
+                return ""
+
+        request = self._requestTest(SetResponseCode())
+        def cbRequested(result):
+            self.assertEqual(result, "")
+        request.addCallback(cbRequested)
+        return request
 
     def test_largeWrite(self):
         """
