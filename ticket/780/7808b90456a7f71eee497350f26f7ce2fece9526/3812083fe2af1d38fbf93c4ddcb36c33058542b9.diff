--- c:/afa/python/Twisted-8.2.0/twisted/python/lockfile.py.orig	2009-03-30 10:16:29.478808500 +0200
+++ c:/afa/python/Twisted-8.2.0/twisted/python/lockfile.py	2009-03-30 10:17:44.291736100 +0200
@@ -25,25 +25,29 @@
     _windows = False
 except:
     _windows = True
-    from win32api import OpenProcess
-    import pywintypes
 
-    ERROR_ACCESS_DENIED = 5
-    ERROR_INVALID_PARAMETER = 87
+    try:
+        from win32api import OpenProcess
+        import pywintypes
+    except ImportError:
+        kill = None
+    else:
+        ERROR_ACCESS_DENIED = 5
+        ERROR_INVALID_PARAMETER = 87
 
-    _open = file
+        def kill(pid, signal):
+            try:
+                OpenProcess(0, 0, pid)
+            except pywintypes.error, e:
+                if e.args[0] == ERROR_ACCESS_DENIED:
+                    return
+                elif e.args[0] == ERROR_INVALID_PARAMETER:
+                    raise OSError(errno.ESRCH, None)
+                raise
+            else:
+                raise RuntimeError("OpenProcess is required to fail.")
 
-    def kill(pid, signal):
-        try:
-            OpenProcess(0, 0, pid)
-        except pywintypes.error, e:
-            if e.args[0] == ERROR_ACCESS_DENIED:
-                return
-            elif e.args[0] == ERROR_INVALID_PARAMETER:
-                raise OSError(errno.ESRCH, None)
-            raise
-        else:
-            raise RuntimeError("OpenProcess is required to fail.")
+    _open = file
 
     # XXX Implement an atomic thingamajig for win32
     def symlink(value, filename):
@@ -144,7 +148,8 @@
                             return False
                         raise
                     try:
-                        kill(int(pid), 0)
+                        if kill is not None:
+                            kill(int(pid), 0)
                     except OSError, e:
                         if e.errno == errno.ESRCH:
                             # The owner has vanished, try to claim it in the next
