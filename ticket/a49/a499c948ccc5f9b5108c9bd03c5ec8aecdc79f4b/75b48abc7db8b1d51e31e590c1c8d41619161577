diff --git twisted/spread/flavors.py twisted/spread/flavors.py
index 61d6b80..1c5fa0d 100644
--- twisted/spread/flavors.py
+++ twisted/spread/flavors.py
@@ -23,7 +23,7 @@ but may have a small impact on users who subclass and override methods.
 
 # system imports
 import sys
-from zope.interface import implements, Interface
+from zope.interface import implementer, Interface
 
 # twisted imports
 from twisted.python import log, reflect
@@ -127,6 +127,7 @@ class Referenceable(Serializable):
         return ["remote", jellier.invoker.registerReference(self)]
 
 
+@implementer(IPBRoot)
 class Root(Referenceable):
     """I provide a root object to L{pb.Broker}s for a L{pb.BrokerFactory}.
 
@@ -135,8 +136,6 @@ class Root(Referenceable):
     by calling my rootObject method.
     """
 
-    implements(IPBRoot)
-    
     def rootObject(self, broker):
         """A L{pb.BrokerFactory} is requesting to publish me as a root object.
 
diff --git twisted/spread/jelly.py twisted/spread/jelly.py
index bb4810c..e30aa39 100644
--- twisted/spread/jelly.py
+++ twisted/spread/jelly.py
@@ -95,7 +95,7 @@ finally:
     warnings.filters.pop()
 
 
-from zope.interface import implements
+from zope.interface import implementer
 
 # Twisted Imports
 from twisted.python.reflect import namedObject, qual
@@ -308,12 +308,12 @@ class Unpersistable:
 
 
 
+@implementer(IJellyable)
 class Jellyable:
     """
     Inherit from me to Jelly yourself directly with the `getStateFor'
     convenience method.
     """
-    implements(IJellyable)
 
     def getStateFor(self, jellier):
         return self.__dict__
@@ -331,12 +331,12 @@ class Jellyable:
 
 
 
+@implementer(IUnjellyable)
 class Unjellyable:
     """
     Inherit from me to Unjelly yourself directly with the
     C{setStateFor} convenience method.
     """
-    implements(IUnjellyable)
 
     def setStateFor(self, unjellier, state):
         self.__dict__ = state
diff --git twisted/spread/pb.py twisted/spread/pb.py
index 99b5316..48f8c6b 100644
--- twisted/spread/pb.py
+++ twisted/spread/pb.py
@@ -31,7 +31,7 @@ import random
 import types
 from hashlib import md5
 
-from zope.interface import implements, Interface
+from zope.interface import implementer, Interface
 
 # Twisted Imports
 from twisted.python import log, failure, reflect
@@ -204,6 +204,7 @@ class IPerspective(Interface):
 
 
 
+@implementer(IPerspective)
 class Avatar:
     """
     A default IPerspective implementor.
@@ -220,8 +221,6 @@ class Avatar:
     L{flavors.ViewPoint}.)
     """
 
-    implements(IPerspective)
-
     def perspectiveMessageReceived(self, broker, message, args, kw):
         """
         This method is called when a network message is received.
@@ -258,12 +257,13 @@ class AsReferenceable(Referenceable):
 
 
 
+@implementer(IUnjellyable)
 class RemoteReference(Serializable, styles.Ephemeral):
     """
     A translucent reference to a remote object.
 
     I may be a reference to a L{flavors.ViewPoint}, a
-    L{flavors.Referenceable}, or an L{IPerspective} implementor (e.g.,
+    L{flavors.Referenceable}, or an L{IPerspective} implementer (e.g.,
     pb.Avatar).  From the client's perspective, it is not possible to
     tell which except by convention.
 
@@ -277,8 +277,6 @@ class RemoteReference(Serializable, styles.Ephemeral):
     @type broker: L{Broker}
     """
 
-    implements(IUnjellyable)
-
     def __init__(self, perspective, broker, luid, doRefCount):
         """(internal) Initialize me with a broker and a locally-unique ID.
 
@@ -1299,11 +1297,10 @@ class IUsernameMD5Password(ICredentials):
         """
 
 
+@implementer(IPBRoot)
 class _PortalRoot:
     """Root object, used to login to portal."""
 
-    implements(IPBRoot)
-
     def __init__(self, portal):
         self.portal = portal
 
@@ -1381,12 +1378,11 @@ class _PortalWrapper(Referenceable, _JellyableAvatarMixin):
 
 
 
+@implementer(IUsernameHashedPassword, IUsernameMD5Password)
 class _PortalAuthChallenger(Referenceable, _JellyableAvatarMixin):
     """
     Called with response to password challenge.
     """
-    implements(IUsernameHashedPassword, IUsernameMD5Password)
-
     def __init__(self, portal, broker, username, challenge):
         self.portal = portal
         self.broker = broker
diff --git twisted/spread/util.py twisted/spread/util.py
index 3c529b4..21db080 100644
--- twisted/spread/util.py
+++ twisted/spread/util.py
@@ -14,7 +14,7 @@ from twisted.spread import pb
 from twisted.protocols import basic
 from twisted.internet import interfaces
 
-from zope.interface import implements
+from zope.interface import implementer
 
 
 class LocalMethod:
@@ -149,11 +149,11 @@ class StringPager(Pager):
         return val
 
 
+@implementer(interfaces.IConsumer)
 class FilePager(Pager):
     """
     Reads a file in chunks and sends the chunks as they come.
     """
-    implements(interfaces.IConsumer)
 
     def __init__(self, collector, fd, callback=None, *args, **kw):
         self.chunks = []
