diff --git a/twisted/protocols/ftp.py b/twisted/protocols/ftp.py
index 7411cdd..9f034c0 100644
--- a/twisted/protocols/ftp.py
+++ b/twisted/protocols/ftp.py
@@ -424,13 +424,6 @@ class DTP(object, protocol.Protocol):
         @param line: The line to be sent.
         @type line: L{bytes}
         """
-        if isinstance(line, unicode):
-            warnings.warn(
-                "Passing unicode to DTP.sendLine is deprecated since "
-                "Twisted 13.0.  Pass only byte strings.",
-                category=DeprecationWarning, stacklevel=2)
-            line = line.encode('utf-8')
-
         self.transport.write(line + '\r\n')
 
 
@@ -939,8 +932,8 @@ class FTP(object, basic.LineReceiver, policies.TimeoutMixin):
     def _checkListResult(self, name):
         """
         Inspect an element from the list returned by an L{IFTPShell.list}
-        implementation to make sure it is of the correct type and issue a
-        warning if not.
+        implementation to make sure the content is formated to be
+        send on the wire. 
 
         @param name: The name of a file, as returned by L{IFTPShell.list}.
         @type name: L{bytes} or L{unicode}
@@ -951,11 +944,6 @@ class FTP(object, basic.LineReceiver, policies.TimeoutMixin):
         """
         if isinstance(name, unicode):
             return name.encode('utf-8')
-        warnAboutFunction(
-            self.shell.list,
-            "Support for returning byte strings from "
-            "IFTPShell.list is deprecated since Twisted "
-            "13.0.  Return unicode strings only.")
         return name
 
 
diff --git a/twisted/test/test_ftp.py b/twisted/test/test_ftp.py
index ea4e5c7..6fb7064 100644
--- a/twisted/test/test_ftp.py
+++ b/twisted/test/test_ftp.py
@@ -734,40 +734,6 @@ class FTPServerPasvDataConnectionTestCase(FTPServerTestCase):
             '0 Jan 01  1970 my resum\xc3\xa9\r\n')
 
 
-    def _deprecatedListTestHelper(self, command, expectedOutput):
-        """
-        Like L{_listTestHelper}, but with an additional assertion that a warning
-        is emitted telling application developers to return C{unicode} from
-        L{IFTPShell.list} implementations, not L{bytes}.
-        """
-        d = self._listTestHelper(
-            command,
-            ('my resum\xc3\xa9', (0, 1, 0777, 0, 0, 'user', 'group')),
-            expectedOutput)
-
-        def checkDeprecation(offendingFunction):
-            warnings = self.flushWarnings([offendingFunction])
-            self.assertEqual(warnings[0]['category'], DeprecationWarning)
-            self.assertEqual(
-                warnings[0]['message'],
-                "Support for returning byte strings from IFTPShell.list "
-                "is deprecated since Twisted 13.0.  Return unicode strings "
-                "only.")
-            self.assertEqual(1, len(warnings))
-        return d.addCallback(checkDeprecation)
-
-
-    def test_LISTNonASCIIBytes(self):
-        """
-        Support for returning byte strings from L{IFTPShell.list} is deprecated
-        and doing so results in a warning, but in the filename being sent as-is.
-        """
-        return self._deprecatedListTestHelper(
-            "LIST",
-            'drwxrwxrwx   0 user      group                   '
-            '0 Jan 01  1970 my resum\xc3\xa9\r\n')
-
-
     def testManyLargeDownloads(self):
         # Login
         d = self._anonymousLogin()
@@ -863,16 +829,6 @@ class FTPServerPasvDataConnectionTestCase(FTPServerTestCase):
             'my resum\xc3\xa9\r\n')
 
 
-    def test_NLSTNonASCIIBytes(self):
-        """
-        Support for returning byte strings from L{IFTPShell.list} is deprecated
-        and doing so results in a warning, but in the filename being sent as-is.
-        """
-        return self._deprecatedListTestHelper(
-            "NLST",
-            'my resum\xc3\xa9\r\n')
-
-
     def test_NLSTOnPathToFile(self):
         """
         NLST on an existent file returns only the path to that file.
@@ -1139,27 +1095,6 @@ class DTPTests(unittest.TestCase):
         self.assertEqual(lineContent + '\r\n', dataSent)
 
 
-    def test_sendLineUnicode(self):
-        """
-        L{ftp.DTP.sendLine} notices unicode lines, encodes them to strings using
-        UTF-8, and emits a warning to not send unicode strings.
-        """
-        dtpInstance = self.factory.buildProtocol(None)
-        dtpInstance.makeConnection(self.transport)
-        lineContent = u'my resum\xe9'
-
-        self.assertWarns(
-            DeprecationWarning,
-            "Passing unicode to DTP.sendLine is deprecated since "
-            "Twisted 13.0.  Pass only byte strings.",
-            __file__,
-            lambda: dtpInstance.sendLine(lineContent))
-
-        dataSent = self.transport.value()
-        self.assertIsInstance(dataSent, bytes)
-        self.assertEqual(lineContent.encode('utf-8') + b'\r\n', dataSent)
-
-
 
 # -- Client Tests -----------------------------------------------------------
 
