Index: twisted/plugins/twisted_core.py
===================================================================
--- twisted/plugins/twisted_core.py	(revision 39388)
+++ twisted/plugins/twisted_core.py	(working copy)
@@ -2,8 +2,9 @@
 # See LICENSE for details.
 
 
-from twisted.internet.endpoints import _SystemdParser, _TCP6ServerParser, _StandardIOParser
+from twisted.internet.endpoints import _SystemdParser, _TCP6ServerParser, _StandardIOParser, _TCP6ClientParser
 
 systemdEndpointParser = _SystemdParser()
 tcp6ServerEndpointParser = _TCP6ServerParser()
 stdioEndpointParser = _StandardIOParser()
+tcp6ClientEndpointParser = _TCP6ClientParser()
Index: twisted/internet/endpoints.py
===================================================================
--- twisted/internet/endpoints.py	(revision 39388)
+++ twisted/internet/endpoints.py	(working copy)
@@ -1094,6 +1094,19 @@
 
 
 
+@implementer(IPlugin, IStreamClientEndpointStringParserWithReactor)
+class _TCP6ClientParser(object):
+    prefix = "tcp6"
+    def _parseClient(self, reactor, host, port):
+        port = int(port)
+        return TCP6ClientEndpoint(reactor, host, port)
+
+
+    def parseStreamClient(self, reactor, *args, **kwargs):
+        return self._parseClient(reactor, *args, **kwargs)
+
+
+
 _serverParsers = {"tcp": _parseTCP,
                   "unix": _parseUNIX,
                   "ssl": _parseSSL,
Index: twisted/internet/test/test_endpoints.py
===================================================================
--- twisted/internet/test/test_endpoints.py	(revision 39388)
+++ twisted/internet/test/test_endpoints.py	(working copy)
@@ -2578,6 +2578,54 @@
 
 
 
+class TCP6ClientEndpointPluginTests(unittest.TestCase):
+    """
+    Unit tests for the TCP IPv6 stream client endpoint string description
+    parser.
+    """
+    _parserClass = endpoints._TCP6ClientParser
+
+    def test_pluginDiscovery(self):
+        """
+        L{endpoints._TCP6ClientParser} is found as a plugin for
+        L{interfaces.IStreamClientEndpointStringParserWithReactor} interface.
+        """
+        parsers = list(getPlugins(
+            interfaces.IStreamClientEndpointStringParserWithReactor))
+        for p in parsers:
+            if isinstance(p, self._parserClass):
+                break
+        else:
+            self.fail(
+                "Did not find TCP6ClientEndpoint parser in %r" % (parsers,))
+
+
+    def test_interface(self):
+        """
+        L{endpoints._TCP6ClientParser} instances provide
+        L{interfaces.IStreamClientEndpointStringParserWithReactor}.
+        """
+        parser = self._parserClass()
+        self.assertTrue(verifyObject(
+            interfaces.IStreamClientEndpointStringParserWithReactor, parser))
+
+
+    def test_stringDescription(self):
+        """
+        L{clientFromString} returns a L{TCP6ClientEndpoint} instance with a
+        'tcp6' endpoint string description.
+        """
+        ep = endpoints.clientFromString(
+                MemoryReactor(), "tcp6:\:\:1:8080")
+        self.assertIsInstance(ep, endpoints.TCP6ClientEndpoint)
+        self.assertIsInstance(ep._reactor, MemoryReactor)
+        self.assertEqual(ep._host,"::1")
+        self.assertEqual(ep._port, 8080)
+        self.assertEqual(ep._timeout, 30)
+        self.assertEqual(ep._bindAddress, None)
+
+
+
 class StandardIOEndpointPluginTests(unittest.TestCase):
     """
     Unit tests for the Standard I/O endpoint string description parser.
