From d60aee1efdd3b618199e1c0202f5e9290acd1009 Mon Sep 17 00:00:00 2001
From: Phillip Knauss <knauss@.telsasoft.com>
Date: Mon, 21 Jul 2014 12:40:14 -0500
Subject: [PATCH] Convert DigestCredentialFactory.CHALLENGE_LIFETIME_SECS class
 variable to DigestCredentialFactory.challengeLifetimeSecs keyword parameter

---
 twisted/cred/credentials.py     | 15 ++++++++-------
 twisted/test/test_digestauth.py |  2 +-
 2 files changed, 9 insertions(+), 8 deletions(-)

diff --git a/twisted/cred/credentials.py b/twisted/cred/credentials.py
index 05ac2a4..ffe8891 100644
--- a/twisted/cred/credentials.py
+++ b/twisted/cred/credentials.py
@@ -178,9 +178,6 @@ class DigestCredentialFactory(object):
     """
     Support for RFC2617 HTTP Digest Authentication
 
-    @cvar CHALLENGE_LIFETIME_SECS: The number of seconds for which an
-        opaque should be valid.
-
     @type privateKey: C{str}
     @ivar privateKey: A random string used for generating the secure opaque.
 
@@ -192,6 +189,10 @@ class DigestCredentialFactory(object):
     @type authenticationRealm: C{str}
     @param authenticationRealm: case sensitive string that specifies the realm
         portion of the challenge
+    
+    @type challengeLifetimeSecs: C{int}
+    @param challengeLifetimeSecs: The number of seconds for which an opaque
+        should be valid.
     """
 
     _parseparts = re.compile(
@@ -204,14 +205,14 @@ class DigestCredentialFactory(object):
         b')'           # That non-matching group ends
         b',?')         # There might be a comma at the end (none on last pair)
 
-    CHALLENGE_LIFETIME_SECS = 15 * 60    # 15 minutes
-
     scheme = "digest"
 
-    def __init__(self, algorithm, authenticationRealm):
+    def __init__(self, algorithm, authenticationRealm, 
+        challengeLifetimeSecs=15*60):
         self.algorithm = algorithm
         self.authenticationRealm = authenticationRealm
         self.privateKey = secureRandom(12)
+        self.challengeLifetimeSecs = challengeLifetimeSecs
 
 
     def getChallenge(self, address):
@@ -315,7 +316,7 @@ class DigestCredentialFactory(object):
                 'Invalid response, invalid opaque/time values')
 
         if (int(self._getTime()) - when >
-            DigestCredentialFactory.CHALLENGE_LIFETIME_SECS):
+            self.challengeLifetimeSecs):
 
             raise error.LoginFailed(
                 'Invalid response, incompatible opaque/nonce too old')
diff --git a/twisted/test/test_digestauth.py b/twisted/test/test_digestauth.py
index 5c70af2..0940304 100644
--- a/twisted/test/test_digestauth.py
+++ b/twisted/test/test_digestauth.py
@@ -600,7 +600,7 @@ class DigestAuthTests(TestCase):
     def test_oldNonce(self):
         """
         L{DigestCredentialFactory.decode} raises L{LoginFailed} when the given
-        opaque is older than C{DigestCredentialFactory.CHALLENGE_LIFETIME_SECS}
+        opaque is older than L{DigestCredentialFactory.challengeLifetimeSecs}
         """
         credentialFactory = FakeDigestCredentialFactory(self.algorithm,
                                                         self.realm)
-- 
2.0.0

