diff --git twisted/internet/_posixserialport.py twisted/internet/_posixserialport.py
index cc165a3..e1bc097 100644
--- twisted/internet/_posixserialport.py
+++ twisted/internet/_posixserialport.py
@@ -6,20 +6,17 @@
 Serial Port Protocol
 """
 
-# system imports
-import os, errno
-
 # dependent on pyserial ( http://pyserial.sf.net/ )
 # only tested w/ 1.18 (5 Dec 2002)
-import serial
-from serial import PARITY_NONE, PARITY_EVEN, PARITY_ODD
-from serial import STOPBITS_ONE, STOPBITS_TWO
-from serial import FIVEBITS, SIXBITS, SEVENBITS, EIGHTBITS
+from serial import PARITY_NONE
+from serial import STOPBITS_ONE
+from serial import EIGHTBITS
 
 from serialport import BaseSerialPort
 
 # twisted imports
-from twisted.internet import abstract, fdesc, main
+from twisted.internet import abstract, fdesc
+
 
 class SerialPort(BaseSerialPort, abstract.FileDescriptor):
     """
diff --git twisted/internet/_sslverify.py twisted/internet/_sslverify.py
index 7a65053..6511559 100644
--- twisted/internet/_sslverify.py
+++ twisted/internet/_sslverify.py
@@ -77,7 +77,7 @@ class DistinguishedName(dict):
     bytes. For example::
 
         >>> dn = DistinguishedName(commonName=b'www.example.com',
-                                   C='US')
+        ...                           C='US')
         >>> dn.C
         b'US'
         >>> dn.countryName
diff --git twisted/internet/_threadedselect.py twisted/internet/_threadedselect.py
index 8a1b722..b88a569 100644
--- twisted/internet/_threadedselect.py
+++ twisted/internet/_threadedselect.py
@@ -52,18 +52,14 @@ with wxPython, or the PyObjCTools.AppHelper.stopEventLoop function.
 
 from threading import Thread
 from Queue import Queue, Empty
-from time import sleep
 import sys
 
 from zope.interface import implements
 
 from twisted.internet.interfaces import IReactorFDSet
-from twisted.internet import error
 from twisted.internet import posixbase
 from twisted.internet.posixbase import _NO_FILENO, _NO_FILEDESC
 from twisted.python import log, failure, threadable
-from twisted.persisted import styles
-from twisted.python.runtime import platformType
 
 import select
 from errno import EINTR, EBADF
@@ -157,11 +153,11 @@ class ThreadedSelectReactor(posixbase.PosixReactorBase):
                                         writes.keys(),
                                         [], timeout)
                 break
-            except ValueError, ve:
+            except ValueError:
                 # Possibly a file descriptor has gone negative?
                 log.err()
                 self._preenDescriptorsInThread()
-            except TypeError, te:
+            except TypeError:
                 # Something *totally* invalid (object w/o fileno, non-integral
                 # result) was passed
                 log.err()
diff --git twisted/internet/_win32serialport.py twisted/internet/_win32serialport.py
index 1a77236..6b229bd 100644
--- twisted/internet/_win32serialport.py
+++ twisted/internet/_win32serialport.py
@@ -8,10 +8,9 @@ Requires PySerial and pywin32.
 """
 
 # system imports
-import serial
-from serial import PARITY_NONE, PARITY_EVEN, PARITY_ODD
-from serial import STOPBITS_ONE, STOPBITS_TWO
-from serial import FIVEBITS, SIXBITS, SEVENBITS, EIGHTBITS
+from serial import PARITY_NONE
+from serial import STOPBITS_ONE
+from serial import EIGHTBITS
 import win32file, win32event
 
 # twisted imports
diff --git twisted/internet/gtk2reactor.py twisted/internet/gtk2reactor.py
index 2509b6d..06922cd 100644
--- twisted/internet/gtk2reactor.py
+++ twisted/internet/gtk2reactor.py
@@ -113,6 +113,7 @@ def portableInstall(useGtk=True):
 
 
 if runtime.platform.getType() != 'posix':
+    install  # Silence the linter.
     install = portableInstall
 
 
diff --git twisted/internet/gtkreactor.py twisted/internet/gtkreactor.py
index 6b1855e..a66ba15 100644
--- twisted/internet/gtkreactor.py
+++ twisted/internet/gtkreactor.py
@@ -245,6 +245,7 @@ deprecate.deprecatedModuleAttribute(deprecatedSince, deprecationMessage,
 
 
 if runtime.platform.getType() != 'posix':
+    install  # Silence the linter.
     install = portableInstall
 
 __all__ = ['install']
diff --git twisted/internet/iocpreactor/tcp.py twisted/internet/iocpreactor/tcp.py
index d34f698..b01c217 100644
--- twisted/internet/iocpreactor/tcp.py
+++ twisted/internet/iocpreactor/tcp.py
@@ -10,10 +10,10 @@ import socket, operator, errno, struct
 from zope.interface import implements, classImplements
 
 from twisted.internet import interfaces, error, address, main, defer
-from twisted.internet.abstract import _LogOwner, isIPAddress, isIPv6Address
+from twisted.internet.abstract import _LogOwner, isIPv6Address
 from twisted.internet.tcp import _SocketCloser, Connector as TCPConnector
 from twisted.internet.tcp import _AbortingMixin, _BaseBaseClient, _BaseTCPClient
-from twisted.python import log, failure, reflect, util
+from twisted.python import log, failure, reflect
 
 from twisted.internet.iocpreactor import iocpsupport as _iocp, abstract
 from twisted.internet.iocpreactor.interfaces import IReadWriteHandle
diff --git twisted/internet/process.py twisted/internet/process.py
index 7509b98..3fcb57d 100644
--- twisted/internet/process.py
+++ twisted/internet/process.py
@@ -100,6 +100,7 @@ def detectLinuxBrokenPipeBehavior():
     os.close(w)
 
 # Call at import time
+brokenLinuxPipeBehavior = None
 detectLinuxBrokenPipeBehavior()
 
 
@@ -944,10 +945,9 @@ class PTYProcess(abstract.FileDescriptor, _BaseProcess):
         _BaseProcess.__init__(self, proto)
 
         if isinstance(usePTY, (tuple, list)):
-            masterfd, slavefd, ttyname = usePTY
+            masterfd, slavefd, ignore = usePTY
         else:
             masterfd, slavefd = pty.openpty()
-            ttyname = os.ttyname(slavefd)
 
         try:
             self._fork(path, uid, gid, executable, args, environment,
diff --git twisted/internet/serialport.py twisted/internet/serialport.py
index 500d8ba..9e456c3 100644
--- twisted/internet/serialport.py
+++ twisted/internet/serialport.py
@@ -81,6 +81,7 @@ class SerialPort(BaseSerialPort):
     pass
 
 # replace SerialPort with appropriate serial port
+SerialPort  # Silence the linter.
 if os.name == 'posix':
     from twisted.internet._posixserialport import SerialPort
 elif sys.platform == 'win32':
diff --git twisted/internet/tcp.py twisted/internet/tcp.py
index 24931d5..45d2be7 100644
--- twisted/internet/tcp.py
+++ twisted/internet/tcp.py
@@ -90,6 +90,10 @@ else:
 
     from os import strerror
 
+# Silence the linter for errno.
+ECONNRESET
+ENOTCONN
+EINTR
 
 from errno import errorcode
 
diff --git twisted/internet/test/test_default.py twisted/internet/test/test_default.py
index fdf2a6a..bcfa5e1 100644
--- twisted/internet/test/test_default.py
+++ twisted/internet/test/test_default.py
@@ -45,8 +45,8 @@ class PollReactorTests(SynchronousTestCase):
         L{_getInstallFunction} chooses the poll reactor on arbitrary Unix
         platforms, falling back to select(2) if it is unavailable.
         """
-        install = _getInstallFunction(unix)
-        self.assertIsPoll(install)
+        installFunction = _getInstallFunction(unix)
+        self.assertIsPoll(installFunction)
 
 
     def test_linux(self):
@@ -54,14 +54,15 @@ class PollReactorTests(SynchronousTestCase):
         L{_getInstallFunction} chooses the epoll reactor on Linux, or poll if
         epoll is unavailable.
         """
-        install = _getInstallFunction(linux)
+        installFunction = _getInstallFunction(linux)
         try:
             from twisted.internet import epollreactor
+            epollreactor  # Silence the linter.
         except ImportError:
-            self.assertIsPoll(install)
+            self.assertIsPoll(installFunction)
         else:
             self.assertEqual(
-                install.__module__, 'twisted.internet.epollreactor')
+                installFunction.__module__, 'twisted.internet.epollreactor')
 
 
 
@@ -74,18 +75,18 @@ class SelectReactorTests(SynchronousTestCase):
         """
         L{_getInstallFunction} chooses the select reactor on OS X.
         """
-        install = _getInstallFunction(osx)
+        installFunction = _getInstallFunction(osx)
         self.assertEqual(
-            install.__module__, 'twisted.internet.selectreactor')
+            installFunction.__module__, 'twisted.internet.selectreactor')
 
 
     def test_windows(self):
         """
         L{_getInstallFunction} chooses the select reactor on Windows.
         """
-        install = _getInstallFunction(windows)
+        installFunction = _getInstallFunction(windows)
         self.assertEqual(
-            install.__module__, 'twisted.internet.selectreactor')
+            installFunction.__module__, 'twisted.internet.selectreactor')
 
 
 
diff --git twisted/internet/test/test_endpoints.py twisted/internet/test/test_endpoints.py
index 0b2ef41..a641fdd 100644
--- twisted/internet/test/test_endpoints.py
+++ twisted/internet/test/test_endpoints.py
@@ -653,7 +653,6 @@ class StandardIOEndpointsTestCase(unittest.TestCase):
         d = self.ep.listen(StdioFactory())
 
         def checkProtocol(stdioOb):
-            from twisted.python.runtime import platform
             if platform.isWindows():
                 self.assertIsInstance(stdioOb.proto, basic.LineReceiver)
             else:
@@ -2459,6 +2458,7 @@ class ServerStringTests(unittest.TestCase):
         test_ssl.skip = test_sslWithDefaults.skip = skipSSL
         test_sslChainLoads.skip = skipSSL
         test_sslChainFileMustContainCert.skip = skipSSL
+        test_sslDHparameters  # Silence the linter.
         test_sslDHparameters = skipSSL
 
 
diff --git twisted/internet/test/test_inotify.py twisted/internet/test/test_inotify.py
index a003562..e0a9188 100644
--- twisted/internet/test/test_inotify.py
+++ twisted/internet/test/test_inotify.py
@@ -11,6 +11,7 @@ from twisted.trial import unittest
 
 try:
     from twisted.python import _inotify
+    _inotify  # Silence the linter.
 except ImportError:
     inotify = None
 else:
diff --git twisted/internet/test/test_qtreactor.py twisted/internet/test/test_qtreactor.py
index e87b74f..82584de 100644
--- twisted/internet/test/test_qtreactor.py
+++ twisted/internet/test/test_qtreactor.py
@@ -5,18 +5,18 @@ import sys
 
 from twisted.trial import unittest
 from twisted.python.runtime import platform
-from twisted.python.util import sibpath
-from twisted.internet.utils import getProcessOutputAndValue
 
 
 skipWindowsNopywin32 = None
 if platform.isWindows():
     try:
         import win32process
+        win32process  # Silence the linter.
     except ImportError:
         skipWindowsNopywin32 = ("On windows, spawnProcess is not available "
                                 "in the absence of win32process.")
 
+
 class QtreactorTestCase(unittest.TestCase):
     """
     Tests for L{twisted.internet.qtreactor}.
@@ -30,6 +30,7 @@ class QtreactorTestCase(unittest.TestCase):
         sys.modules["qtreactor"] = None
         from twisted.plugins.twisted_qtstub import errorMessage
         try:
-            import twisted.internet.qtreactor
+            from twisted.internet import qtreactor
+            qtreactor  # Silence the linter.
         except ImportError, e:
             self.assertEqual(str(e), errorMessage)
diff --git twisted/internet/test/test_tls.py twisted/internet/test/test_tls.py
index 5bd081a..96ad57a 100644
--- twisted/internet/test/test_tls.py
+++ twisted/internet/test/test_tls.py
@@ -429,7 +429,8 @@ class OldTLSDeprecationTest(TestCase):
                 oldtls)
 
         # The actual test.
-        import twisted.internet._oldtls
+        from twisted.internet import _oldtls
+        _oldtls  # Silence the linter.
         warnings = self.flushWarnings()
         self.assertEqual(warnings[0]['category'], DeprecationWarning)
         self.assertEqual(
diff --git twisted/internet/test/test_udp_internals.py twisted/internet/test/test_udp_internals.py
index 7a17a6f..6e720ec 100644
--- twisted/internet/test/test_udp_internals.py
+++ twisted/internet/test/test_udp_internals.py
@@ -16,10 +16,8 @@ from twisted.python.runtime import platformType
 
 if platformType == 'win32':
     from errno import WSAEWOULDBLOCK as EWOULDBLOCK
-    from errno import WSAECONNREFUSED as ECONNREFUSED
 else:
     from errno import EWOULDBLOCK
-    from errno import ECONNREFUSED
 
 
 
diff --git twisted/internet/test/test_unix.py twisted/internet/test/test_unix.py
index ff4dd78..da7f3b5 100644
--- twisted/internet/test/test_unix.py
+++ twisted/internet/test/test_unix.py
@@ -40,10 +40,12 @@ from twisted.internet.test.reactormixins import ReactorBuilder
 
 try:
     from twisted.python import sendmsg
+    sendmsg  # Silence the linter.
 except ImportError:
     sendmsgSkip = (
         "sendmsg extension unavailable, extended UNIX features disabled")
 else:
+
     sendmsgSkip = None
 
 
diff --git twisted/internet/tksupport.py twisted/internet/tksupport.py
index ddec55e..7b8229a 100644
--- twisted/internet/tksupport.py
+++ twisted/internet/tksupport.py
@@ -30,10 +30,9 @@ fix::
 """
 
 # system imports
-import Tkinter, tkSimpleDialog, tkMessageBox
+import tkSimpleDialog, tkMessageBox
 
 # twisted imports
-from twisted.python import log
 from twisted.internet import task
 
 
diff --git twisted/internet/unix.py twisted/internet/unix.py
index 77b87cd..080506e 100644
--- twisted/internet/unix.py
+++ twisted/internet/unix.py
@@ -183,6 +183,8 @@ class _SendmsgMixin(object):
         return self._dataReceived(data)
 
 if sendmsg is None:
+    _SendmsgMixin  # Silence the linter.
+
     class _SendmsgMixin(object):
         """
         Behaviorless placeholder used when L{twisted.python.sendmsg} is not
diff --git twisted/internet/win32eventreactor.py twisted/internet/win32eventreactor.py
index 3c0e09c..932d61a 100644
--- twisted/internet/win32eventreactor.py
+++ twisted/internet/win32eventreactor.py
@@ -66,7 +66,7 @@ except ImportError:
         return set([FD_READ])
 
 from win32event import CreateEvent, MsgWaitForMultipleObjects
-from win32event import WAIT_OBJECT_0, WAIT_TIMEOUT, QS_ALLINPUT, QS_ALLEVENTS
+from win32event import WAIT_OBJECT_0, WAIT_TIMEOUT, QS_ALLINPUT
 
 import win32gui
 
diff --git twisted/internet/wxsupport.py twisted/internet/wxsupport.py
index d17c666..92e3128 100644
--- twisted/internet/wxsupport.py
+++ twisted/internet/wxsupport.py
@@ -24,12 +24,8 @@ Maintainer: Itamar Shtull-Trauring
 import warnings
 warnings.warn("wxsupport is not fully functional on Windows, wxreactor is better.")
 
-# wxPython imports
-from wxPython.wx import wxApp
-
 # twisted imports
 from twisted.internet import reactor
-from twisted.python.runtime import platformType
 
 
 class wxRunner:
