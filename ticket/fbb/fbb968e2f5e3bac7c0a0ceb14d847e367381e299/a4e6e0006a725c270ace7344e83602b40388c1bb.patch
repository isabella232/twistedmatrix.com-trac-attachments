diff -r f0773f8fb254 twisted/internet/_dumbwin32proc.py
--- a/twisted/internet/_dumbwin32proc.py	Fri Nov 04 22:39:52 2011 +0100
+++ b/twisted/internet/_dumbwin32proc.py	Sun Nov 06 03:34:42 2011 +0100
@@ -128,9 +128,12 @@
         sAttrs.bInheritHandle = 1
 
         # create the pipes which will connect to the secondary process
-        self.hStdoutR, hStdoutW = win32pipe.CreatePipe(sAttrs, 0)
-        self.hStderrR, hStderrW = win32pipe.CreatePipe(sAttrs, 0)
-        hStdinR,  self.hStdinW  = win32pipe.CreatePipe(sAttrs, 0)
+        self.hStdoutR, hStdoutW = win32pipe.CreatePipe(sAttrs,
+                _pollingfile._PIPE_BUFFER_SIZE)
+        self.hStderrR, hStderrW = win32pipe.CreatePipe(sAttrs,
+                _pollingfile._PIPE_BUFFER_SIZE)
+        hStdinR,  self.hStdinW  = win32pipe.CreatePipe(sAttrs,
+                _pollingfile._PIPE_BUFFER_SIZE)
 
         win32pipe.SetNamedPipeHandleState(self.hStdinW,
                                           win32pipe.PIPE_NOWAIT,
diff -r f0773f8fb254 twisted/internet/_pollingfile.py
--- a/twisted/internet/_pollingfile.py	Fri Nov 04 22:39:52 2011 +0100
+++ b/twisted/internet/_pollingfile.py	Sun Nov 06 03:34:42 2011 +0100
@@ -158,6 +158,7 @@
 
 
 FULL_BUFFER_SIZE = 64 * 1024
+_PIPE_BUFFER_SIZE = 4096
 
 class _PollableWritePipe(_PollableResource):
 
@@ -235,12 +236,15 @@
         self.lostCallback()
 
     def writeSequence(self, seq):
-        self.outQueue.extend(seq)
+        for data in seq:
+            self.write(data)
 
     def write(self, data):
         if self.disconnecting:
             return
-        self.outQueue.append(data)
+        block_size = _PIPE_BUFFER_SIZE
+        for n in range(0, len(data), block_size):
+            self.outQueue.append(data[n:n + block_size])
         if sum(map(len, self.outQueue)) > FULL_BUFFER_SIZE:
             self.bufferFull()
 
diff -r f0773f8fb254 twisted/test/test_stdio.py
--- a/twisted/test/test_stdio.py	Fri Nov 04 22:39:52 2011 +0100
+++ b/twisted/test/test_stdio.py	Sun Nov 06 03:34:42 2011 +0100
@@ -262,7 +262,7 @@
     def _junkPath(self):
         junkPath = self.mktemp()
         junkFile = file(junkPath, 'w')
-        for i in xrange(1024):
+        for i in xrange(2048):
             junkFile.write(str(i) + '\n')
         junkFile.close()
         return junkPath
