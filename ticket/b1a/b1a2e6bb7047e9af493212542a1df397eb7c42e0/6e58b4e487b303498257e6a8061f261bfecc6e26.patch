Index: twisted/mail/test/test_imap.py
===================================================================
--- twisted/mail/test/test_imap.py	(revision 35023)
+++ twisted/mail/test/test_imap.py	(working copy)
@@ -885,6 +885,51 @@
                 self.assertEqual(L, expected,
                                   "len(%r) = %r != %r" % (input, L, expected))
 
+
+    def test_GetContentType(self):
+        """
+        L{imap4._getContentType} returns the MIME type and subtype of a
+        given message, along with any parameters in content-type as a C{dict}.
+
+        If the message has no C{content-type} parameter, it returns a C{tuple}
+        of three C{None}.
+
+        If there is no parameter specified, the last element of a returned
+        C{tuple} should be an empty C{dict}.
+
+        If the type is specified, but not the subtype, the returned minor
+        type will be C{None}
+        """
+        body = 'hello, world'
+        major = 'text'
+        minor = 'plain'
+        charset = 'us-ascii'
+
+        inputs = [
+            FakeyMessage({}, (), '', body, 123, None),
+            FakeyMessage({'content-type': '%s/%s' % (major, minor)},
+                    (), '', body, 123, None),
+            FakeyMessage({'content-type': '%s' % (major)},
+                    (), '', body, 123, None),
+            FakeyMessage({'content-type': '%s; charset=%s' % (
+                    major, charset)}, (), '', body, 123, None),
+            FakeyMessage({'content-type': '%s/%s; charset=%s; x=y' % (
+                    major, minor, charset)}, (), '', body, 123, None),
+        ]
+
+        outputs = [
+            (None, None, None),
+            (major, minor, {}),
+            (major, None, {}),
+            (major, None, {'charset': 'us-ascii'}),
+            (major, minor, {'x': 'y', 'charset': 'us-ascii'}),
+        ]
+
+        for (input, expected) in zip(inputs, outputs):
+            self.assertEqual(imap4._getContentType(input), expected)
+
+
+
 class SimpleMailbox:
     implements(imap4.IMailboxInfo, imap4.IMailbox, imap4.ICloseableMailbox)
 
@@ -3556,6 +3601,8 @@
                 'content-id': 'some kind of id',
                 'content-description': 'great justice',
                 'content-transfer-encoding': 'maximum',
+                'content-language': 'fr',
+                'content-location': 'France',
                 }, (), '', 'hello world', 123, None)
 
         anotherSubPart = FakeyMessage({
Index: twisted/mail/imap4.py
===================================================================
--- twisted/mail/imap4.py	(revision 35023)
+++ twisted/mail/imap4.py	(working copy)
@@ -4820,7 +4820,11 @@
 
 def _getContentType(msg):
     """
-    Return a two-tuple of the main and subtype of the given message.
+    Get the values of content-type from the message header.
+
+    @param msg: A L{IMessagePart} provider
+
+    @return: A C{tuple} of MIME type, sub-type and a parameter C{dict}.
     """
     attrs = None
     mm = msg.getHeaders(False, 'content-type').get('content-type', None)
