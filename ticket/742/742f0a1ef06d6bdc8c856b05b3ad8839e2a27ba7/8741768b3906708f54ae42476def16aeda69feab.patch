Index: docs/projects/web/examples/reverse-proxy.py
===================================================================
--- docs/projects/web/examples/reverse-proxy.py	(revision 41438)
+++ docs/projects/web/examples/reverse-proxy.py	(working copy)
@@ -13,6 +13,6 @@
 from twisted.internet import reactor
 from twisted.web import proxy, server
 
-site = server.Site(proxy.ReverseProxyResource('www.yahoo.com', 80, ''))
+site = server.Site(proxy.ReverseProxyResource('localhost', 8081, ''))
 reactor.listenTCP(8080, site)
 reactor.run()
Index: docs/projects/web/howto/listings/logging.py
===================================================================
--- docs/projects/web/howto/listings/logging.py	(revision 0)
+++ docs/projects/web/howto/listings/logging.py	(working copy)
@@ -0,0 +1,26 @@
+#!/usr/bin/env python
+
+"""
+"""
+
+if __name__ == '__main__':
+    import logging
+    raise SystemExit(logging.main())
+
+
+from twisted.internet import reactor
+from twisted.web import http, server, static
+
+
+def main():
+    site = server.Site(
+        resource=static.File('.'),
+        logPath='access.log',
+    )
+
+    # XXX: No way to supply a custom log formatter to t.w.server.Site
+    site._logFormatter = http.proxiedLogFormatter
+
+    reactor.listenTCP(8081, site)
+
+    reactor.run()
Index: twisted/web/proxy.py
===================================================================
--- twisted/web/proxy.py	(revision 41438)
+++ twisted/web/proxy.py	(working copy)
@@ -290,6 +290,11 @@
         else:
             host = "%s:%d" % (self.host, self.port)
         request.requestHeaders.setRawHeaders(b"host", [host])
+
+        # XXX: This isn't the answer, but it allows me to test the proxiedLogFormatter using twisted
+        # See https://twistedmatrix.com/pipermail/twisted-python/2003-June/004353.html
+        # where a similar patch was committed by Itamar then reverted by Moshez.
+        request.requestHeaders.setRawHeaders(b"x-forwarded-for", [request.client.host])
         request.content.seek(0, 0)
         qs = urlparse.urlparse(request.uri)[4]
         if qs:
