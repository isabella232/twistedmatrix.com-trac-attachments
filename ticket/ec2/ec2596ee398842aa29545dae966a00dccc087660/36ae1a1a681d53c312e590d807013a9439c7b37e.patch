Index: twisted/conch/client/knownhosts.py
===================================================================
--- twisted/conch/client/knownhosts.py	(revision 34099)
+++ twisted/conch/client/knownhosts.py	(working copy)
@@ -413,13 +413,13 @@
         except IOError:
             return self
         for line in fp:
-            if line.startswith(HashedEntry.MAGIC):
-                entry = HashedEntry.fromString(line)
-            else:
-                try:
+            try:
+                if line.startswith(HashedEntry.MAGIC):
+                    entry = HashedEntry.fromString(line)
+                else:
                     entry = PlainEntry.fromString(line)
-                except (DecodeError, InvalidEntry, BadKeyError):
-                    entry = UnparsedEntry(line)
+            except (DecodeError, InvalidEntry, BadKeyError):
+                entry = UnparsedEntry(line)
             self._entries.append(entry)
         return self
 
Index: twisted/conch/test/test_knownhosts.py
===================================================================
--- twisted/conch/test/test_knownhosts.py	(revision 34099)
+++ twisted/conch/test/test_knownhosts.py	(working copy)
@@ -369,7 +369,7 @@
             sampleHashedLine + otherSamplePlaintextLine +
             "\n# That was a blank line.\n"
             "This is just unparseable.\n"
-            "This also unparseable.\n")):
+            "|1|This also unparseable.\n")):
         """
         Return a sample hosts file, with keys for www.twistedmatrix.com and
         divmod.com present.
@@ -401,7 +401,7 @@
                          "This is just unparseable.")
         self.assertIsInstance(hostsFile._entries[5], UnparsedEntry)
         self.assertEqual(hostsFile._entries[5].toString(),
-                         "This also unparseable.")
+                         "|1|This also unparseable.")
 
 
     def test_loadNonExistent(self):