diff --git bin/tap2deb bin/tap2deb
index 73d2032..7dd3afe 100755
--- bin/tap2deb
+++ bin/tap2deb
@@ -9,6 +9,7 @@ import sys
 
 try:
     import _preamble
+    _preamble  # Silence the linter.
 except ImportError:
     sys.exc_clear()
 
diff --git twisted/application/app.py twisted/application/app.py
index 3a4282e..2b4c750 100644
--- twisted/application/app.py
+++ twisted/application/app.py
@@ -8,9 +8,7 @@ import sys, os, pdb, getpass, traceback, signal
 from operator import attrgetter
 
 from twisted.python import runtime, log, usage, failure, util, logfile
-from twisted.python.versions import Version
 from twisted.python.reflect import qual, namedAny
-from twisted.python.deprecate import deprecated
 from twisted.python.log import ILogObserver
 from twisted.persisted import sob
 from twisted.application import service, reactors
@@ -22,7 +20,6 @@ from twisted.application.reactors import installReactor
 from twisted.application.reactors import NoSuchReactor
 
 
-
 class _BasicProfiler(object):
     """
     @ivar saveStats: if C{True}, save the stats information instead of the
@@ -334,7 +331,7 @@ def getPassphrase(needed):
 
 def getSavePassphrase(needed):
     if needed:
-        passphrase = util.getPassword("Encryption passphrase: ")
+        return util.getPassword("Encryption passphrase: ")
     else:
         return None
 
diff --git twisted/copyright.py twisted/copyright.py
index e650c87..d3caa06 100644
--- twisted/copyright.py
+++ twisted/copyright.py
@@ -7,6 +7,8 @@ Copyright information for Twisted.
 
 from __future__ import division, absolute_import
 
+__all__ = ['copyright', 'disclaimer', 'longversion' ,'version']
+
 from twisted import __version__ as version, version as longversion
 
 longversion = str(longversion)
diff --git twisted/enterprise/adbapi.py twisted/enterprise/adbapi.py
index 0531d2d..0d78d4b 100644
--- twisted/enterprise/adbapi.py
+++ twisted/enterprise/adbapi.py
@@ -10,9 +10,6 @@ import sys
 
 from twisted.internet import threads
 from twisted.python import reflect, log
-from twisted.python.deprecate import deprecated
-from twisted.python.versions import Version
-
 
 
 class ConnectionLost(Exception):
diff --git twisted/protocols/gps/nmea.py twisted/protocols/gps/nmea.py
index b09515e..7e0cae0 100644
--- twisted/protocols/gps/nmea.py
+++ twisted/protocols/gps/nmea.py
@@ -90,7 +90,7 @@ class NMEAReceiver(basic.LineReceiver):
         # return handler(*decoder(*message))
         try:
             decoded = decoder(*message)
-        except Exception, e:
+        except Exception:
             raise InvalidSentence("%r is not a valid %s (%s) sentence" % (
                 line, sentencetype, dispatch))
         return handler(*decoded)
diff --git twisted/protocols/sip.py twisted/protocols/sip.py
index 7a2c3a5..b7774c1 100644
--- twisted/protocols/sip.py
+++ twisted/protocols/sip.py
@@ -26,7 +26,6 @@ from twisted.python.versions import Version
 from twisted.internet import protocol, defer, reactor
 
 from twisted import cred
-import twisted.cred.error
 from twisted.cred.credentials import UsernameHashedPassword, UsernamePassword
 
 
diff --git twisted/scripts/tap2deb.py twisted/scripts/tap2deb.py
index 5c2d371..6be5ff2 100644
--- twisted/scripts/tap2deb.py
+++ twisted/scripts/tap2deb.py
@@ -80,6 +80,14 @@ def run(args=None):
     directory = debFile + '-' + version
     pythonVersion = '%s.%s' % sys.version_info[:2]
     buildDir = FilePath('.build').child(directory)
+    # Silence the linter with fake usage for variables as it can not
+    # detect their usage via vars().
+    maintainer
+    description
+    longDescription
+    twistdOption
+    date
+    pythonVersion
 
     if buildDir.exists():
         buildDir.remove()
diff --git twisted/scripts/test/test_scripts.py twisted/scripts/test/test_scripts.py
index 2cbff50..a26a82d 100644
--- twisted/scripts/test/test_scripts.py
+++ twisted/scripts/test/test_scripts.py
@@ -13,8 +13,9 @@ from sys import executable
 from subprocess import PIPE, Popen
 
 from twisted.trial.unittest import SkipTest, TestCase
-from twisted.python.modules import getModule
 from twisted.python.filepath import FilePath
+from twisted.python.modules import getModule
+from twisted.python.reflect import nameModule
 from twisted.python.test.test_shellcomp import ZshScriptTestMixin
 
 
@@ -159,7 +160,7 @@ class ScriptTests(TestCase, ScriptTestsMixin):
         The entire L{twisted.scripts.tkunzip} module, part of the old Windows
         installer tool chain, is deprecated.
         """
-        from twisted.scripts import tkunzip
+        namedModule('twisted.scripts.tkunzip')
         warnings = self.flushWarnings(
             offendingFunctions=[self.test_deprecatedTkunzip])
         self.assertEqual(DeprecationWarning, warnings[0]['category'])
@@ -174,7 +175,7 @@ class ScriptTests(TestCase, ScriptTestsMixin):
         """
         The entire L{twisted.scripts.tapconvert} module is deprecated.
         """
-        from twisted.scripts import tapconvert
+        nameModule('twisted.scripts.tapconvert')
         warnings = self.flushWarnings(
             offendingFunctions=[self.test_deprecatedTapconvert])
         self.assertEqual(DeprecationWarning, warnings[0]['category'])
diff --git twisted/scripts/tkunzip.py twisted/scripts/tkunzip.py
index e2a4629..2222353 100644
--- twisted/scripts/tkunzip.py
+++ twisted/scripts/tkunzip.py
@@ -7,28 +7,27 @@ Post-install GUI to compile to pyc and unpack twisted doco.
 """
 
 import sys
-import zipfile
 import py_compile
 
 # we're going to ignore failures to import tkinter and fall back
 # to using the console if the required dll is not found
 
 # Scary kludge to work around tk84.dll bug:
-# https://sourceforge.net/tracker/index.php?func=detail&aid=814654&group_id=5470&atid=105470
+# https://sourceforge.net/tracker/
+#    index.php?func=detail&aid=814654&group_id=5470&atid=105470
 # Without which(): you get a windows missing-dll popup message
 from twisted.python.procutils import which
 tkdll='tk84.dll'
 if which(tkdll) or which('DLLs/%s' % tkdll):
     try:
         import Tkinter
-        from Tkinter import *
         from twisted.internet import tksupport
     except ImportError:
         pass
 
 # twisted
 from twisted.internet import reactor, defer
-from twisted.python import failure, log, zipstream, util, usage, log
+from twisted.python import failure, log, zipstream, usage
 # local
 import os.path
 
@@ -55,9 +54,10 @@ class ProgressBar:
         self.labelText=labelText
         self.labelFormat=labelFormat
         self.value=value
-        self.frame=Frame(master, relief=appearance, bd=bd)
-        self.canvas=Canvas(self.frame, height=height, width=width, bd=0,
-                           highlightthickness=0, background=background)
+        self.frame=Tkinter.Frame(master, relief=appearance, bd=bd)
+        self.canvas=Tkinter.Canvas(
+            self.frame, height=height, width=width, bd=0,
+            highlightthickness=0, background=background)
         self.scale=self.canvas.create_rectangle(0, 0, width, height,
                                                 fill=fillColor)
         self.label=self.canvas.create_text(self.canvas.winfo_reqwidth() / 2,
@@ -136,7 +136,7 @@ class Progressor:
         b=self.bar
         try:
             b.updateProgress(b.max - self.remaining)
-        except TclError:
+        except Tkinter.TclError:
             self.stopping=1
         except:
             deferred.errback(failure.Failure())
diff --git twisted/scripts/trial.py twisted/scripts/trial.py
index 34adc07..8e11e32 100644
--- twisted/scripts/trial.py
+++ twisted/scripts/trial.py
@@ -18,6 +18,7 @@ from twisted.internet import defer
 from twisted.application import app
 from twisted.python import usage, reflect, failure
 from twisted.python.filepath import FilePath
+from twisted.python.reflect import namedModule
 from twisted import plugin
 from twisted.python.util import spewer
 from twisted.trial import runner, itrial, reporter
@@ -523,7 +524,7 @@ def _wrappedPdb():
 
     dbg = pdb.Pdb()
     try:
-        import readline
+       	namedModule('readline')
     except ImportError:
         print("readline module not available")
         sys.exc_clear()
