commit e9f5cda74691ce302c1f642e3208fbd605316dc8
Author: Wolfgang Rohdewald <wolfgang@rohdewald.de>
Date:   Thu Sep 11 11:24:18 2014 +0200

    Ticket 7663: spread.banana: Better exception message when encoding unsupported types
    
    which banana does not handle and a new test for this.

diff --git docs/core/specifications/banana.rst docs/core/specifications/banana.rst
index 6373f36..3c0c106 100644
--- docs/core/specifications/banana.rst
+++ docs/core/specifications/banana.rst
@@ -18,8 +18,10 @@ Introduction
     
 
 Banana is an efficient, extendable protocol for sending and receiving s-expressions.
-A s-expression in this context is a list composed of byte strings, integers, 
-large integers, floats and/or s-expressions.
+A s-expression in this context is a list composed of strings (Python 2), bytes,
+integers, large integers, floats and/or s-expressions. Unicode strings are not supported,
+neither are python 3 strings as they are always unicode. Unsupported types will
+have to be converted into something supported before sending them with Banana.
 
 
     
diff --git twisted/spread/banana.py twisted/spread/banana.py
index f87c6e7..347283d 100644
--- twisted/spread/banana.py
+++ twisted/spread/banana.py
@@ -17,6 +17,7 @@ import copy, cStringIO, struct
 from twisted.internet import protocol
 from twisted.persisted import styles
 from twisted.python import log
+from twisted.python.reflect import fullyQualifiedName
 
 class BananaError(Exception):
     pass
@@ -339,7 +340,8 @@ class Banana(protocol.Protocol, styles.Ephemeral):
                 write(STRING)
                 write(obj)
         else:
-            raise BananaError("could not send object: %r" % (obj,))
+            raise BananaError("Banana cannot send {} objects: {!r}".format(
+                fullyQualifiedName(type(obj)), obj))
 
 
 # For use from the interactive interpreter
diff --git twisted/test/test_banana.py twisted/test/test_banana.py
index 30f8f24..6c2f864 100644
--- twisted/test/test_banana.py
+++ twisted/test/test_banana.py
@@ -8,6 +8,7 @@ import sys
 from twisted.trial import unittest
 from twisted.spread import banana
 from twisted.python import failure
+from twisted.python.reflect import fullyQualifiedName
 from twisted.internet import protocol, main
 
 
@@ -55,6 +56,18 @@ class BananaTestCase(BananaTestBase):
         self.enc.dataReceived(self.io.getvalue())
         assert self.result == 'hello'
 
+
+    def test_unsupportedTypes(self):
+        """
+        Banana only supports some basic types.
+        """
+        for obj in (type, u'hello', MathTestCase()):
+            exc = self.assertRaises(banana.BananaError,
+                self.enc.sendEncoded, obj)
+            self.assertIn(b'Banana cannot send {} objects'.format(
+                fullyQualifiedName(type(obj))), str(exc))
+
+
     def test_int(self):
         """
         A positive integer less than 2 ** 32 should round-trip through
diff --git twisted/topfiles/7663.feature twisted/topfiles/7663.feature
new file mode 100644
index 0000000..8cc1f22
--- /dev/null
+++ twisted/topfiles/7663.feature
@@ -0,0 +1,2 @@
+twisted.spread.banana.Banana._encode() now raises a more informative
+error message if the user tries to encode objects of unsupported type.
