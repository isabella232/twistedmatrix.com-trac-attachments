Index: twisted/python/zippath.py
===================================================================
--- twisted/python/zippath.py	(revision 30993)
+++ twisted/python/zippath.py	(working copy)
@@ -16,8 +16,17 @@
 import time
 import errno
 
-from twisted.python.zipstream import ChunkingZipFile
 
+# Python 2.6 includes support for incremental unzipping of zipfiles, and
+# thus obviates the need for ChunkingZipFile.
+import sys
+if sys.version_info[:2] >= (2, 6):
+    _USE_ZIPFILE = True
+    from zipfile import ZipFile
+else:
+    _USE_ZIPFILE = False
+    from twisted.python.zipstream import ChunkingZipFile
+
 from twisted.python.filepath import FilePath, _PathHelper
 
 # using FilePath here exclusively rather than os to make sure that we don't do
@@ -128,7 +137,10 @@
         return self.parent().path
 
     def open(self):
-        return self.archive.zipfile.readfile(self.pathInArchive)
+        if _USE_ZIPFILE:
+            return self.archive.zipfile.open(self.pathInArchive)
+        else:
+            return self.archive.zipfile.readfile(self.pathInArchive)
 
     def restat(self):
         pass
@@ -177,7 +189,10 @@
 
         @param archivePathname: a str, naming a path in the filesystem.
         """
-        self.zipfile = ChunkingZipFile(archivePathname)
+        if _USE_ZIPFILE:
+            self.zipfile = ZipFile(archivePathname)
+        else:
+            self.zipfile = ChunkingZipFile(archivePathname)
         self.path = archivePathname
         self.pathInArchive = ''
         # zipfile is already wasting O(N) memory on cached ZipInfo instances,
