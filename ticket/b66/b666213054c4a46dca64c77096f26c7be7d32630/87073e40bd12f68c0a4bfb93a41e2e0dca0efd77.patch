From 268388c4b8abf8040ecec232d6a9d771ce762cbf Mon Sep 17 00:00:00 2001
From: Vadim Markovtsev <v.markovtsev@samsung.com>
Date: Tue, 27 May 2014 15:45:09 +0400
Subject: [PATCH] Add type(addr) = bytes support to isIPAddress and
 isIPv6Address

Added tests for isIPAddress
---
 twisted/internet/abstract.py           |  4 ++++
 twisted/internet/test/test_abstract.py | 41 +++++++++++++++++++++++++++++++++-
 2 files changed, 44 insertions(+), 1 deletion(-)

diff --git a/twisted/internet/abstract.py b/twisted/internet/abstract.py
index 1e49053..0c5a758 100644
--- a/twisted/internet/abstract.py
+++ b/twisted/internet/abstract.py
@@ -493,6 +493,8 @@ def isIPAddress(addr):
     @return: C{True} if C{addr} represents an IPv4 address, C{False}
     otherwise.
     """
+    if _PY3 and isinstance(addr, bytes):
+        addr = addr.decode('charmap')
     dottedParts = addr.split('.')
     if len(dottedParts) == 4:
         for octet in dottedParts:
@@ -519,6 +521,8 @@ def isIPv6Address(addr):
         otherwise.
     @rtype: C{bool}
     """
+    if _PY3 and isinstance(addr, bytes):
+        addr = addr.decode('charmap')
     if '%' in addr:
         addr = addr.split('%', 1)[0]
     if not addr:
diff --git a/twisted/internet/test/test_abstract.py b/twisted/internet/test/test_abstract.py
index 05e105b..ea4d80a 100644
--- a/twisted/internet/test/test_abstract.py
+++ b/twisted/internet/test/test_abstract.py
@@ -10,7 +10,40 @@
 
 from twisted.trial.unittest import SynchronousTestCase
 
-from twisted.internet.abstract import isIPv6Address
+from twisted.internet.abstract import isIPAddress, isIPv6Address
+
+
+class IPAddressTests(SynchronousTestCase):
+    """
+    Tests for L{isIPAddress}, a function for determining if a particular
+    string is an IPv4 address literal.
+    """
+    def test_empty(self):
+        """
+        The empty string is not an IPv6 address literal.
+        """
+        self.assertFalse(isIPAddress(""))
+
+
+    def test_colon(self):
+        """
+        A single C{":"} is not an IPv6 address literal.
+        """
+        self.assertFalse(isIPAddress(":"))
+
+
+    def test_loopback(self):
+        """
+        C{"::1"} is the IPv6 loopback address literal.
+        """
+        self.assertTrue(isIPAddress("127.0.0.1"))
+        
+    def test_Bytes(self):
+        """
+        Bytes should still be accepted and decoded inside the function.
+        """
+        self.assertTrue(isIPAddress(b"192.168.0.1"))
+
 
 class IPv6AddressTests(SynchronousTestCase):
     """
@@ -56,3 +89,9 @@ def test_invalidWithScopeID(self):
         self.assertFalse(isIPv6Address("%eth0"))
         self.assertFalse(isIPv6Address(":%eth0"))
         self.assertFalse(isIPv6Address("hello%eth0"))
+        
+    def test_Bytes(self):
+        """
+        Bytes should still be accepted and decoded inside the function.
+        """
+        self.assertTrue(isIPv6Address(b"2607:f0d0:1002:51::4"))
-- 
1.9.3
