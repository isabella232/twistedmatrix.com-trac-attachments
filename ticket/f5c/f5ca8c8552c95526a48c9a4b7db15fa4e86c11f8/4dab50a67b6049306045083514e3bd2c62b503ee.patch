Index: twisted/mail/test/test_imap.py
===================================================================
--- twisted/mail/test/test_imap.py	(revision 28756)
+++ twisted/mail/test/test_imap.py	(working copy)
@@ -3707,7 +3821,13 @@
         return self._messageSetSearchTest('2:* 3', [3])
 
 
+    def test_searchInalidTerm(self):
+        """
+        """
+        return self._messageSetSearchTest('foo', [])
 
+
+
 class FetchSearchStoreTestCase(unittest.TestCase, IMAP4HelperMixin):
     implements(imap4.ISearchableMailbox)
 
Index: twisted/mail/imap4.py
===================================================================
--- twisted/mail/imap4.py	(revision 28756)
+++ twisted/mail/imap4.py	(working copy)
@@ -1510,14 +1510,15 @@
                 messageSet.last = lastSequenceId
                 return id in messageSet
             else:
-                f = getattr(self, 'search_' + c)
-                if f is not None:
-                    if c in self._requiresLastSequenceId:
-                        result = f(query, id, msg, lastSequenceId)
-                    else:
-                        result = f(query, id, msg)
-                    if not result:
-                        return False
+                f = getattr(self, 'search_' + c, None)
+                if f is None:
+                    return False
+                if c in self._requiresLastSequenceId:
+                    result = f(query, id, msg, lastSequenceId)
+                else:
+                    result = f(query, id, msg)
+                if not result:
+                    return False
         return True
 
     def search_ALL(self, query, id, msg):
