=== modified file 'doc/core/howto/listings/pb/chatserver.py'
--- a/doc/core/howto/listings/pb/chatserver.py	2009-04-08 20:56:55 +0000
+++ b/doc/core/howto/listings/pb/chatserver.py	2009-11-14 12:19:22 +0000
@@ -14,7 +14,7 @@
         self.groups = {} # indexed by name
 
     def joinGroup(self, groupname, user, allowMattress):
-        if not self.groups.has_key(groupname):
+        if groupname not in self.groups:
             self.groups[groupname] = Group(groupname, allowMattress)
         self.groups[groupname].addUser(user)
         return self.groups[groupname]

=== modified file 'doc/core/howto/tutorial/listings/finger/finger/finger.py'
--- a/doc/core/howto/tutorial/listings/finger/finger/finger.py	2009-01-09 16:01:53 +0000
+++ b/doc/core/howto/tutorial/listings/finger/finger/finger.py	2009-11-14 12:19:22 +0000
@@ -314,7 +314,7 @@
 #        k.setServiceParent(s)
 
     # irc fingerbot
-    if config.has_key('ircnick'):
+    if 'ircnick' in config:
         i = IIRCClientFactory(f)
         i.nickname = config['ircnick']
         ircserver = config['ircserver']
@@ -322,7 +322,7 @@
         b.setServiceParent(s)
 
     # Pespective Broker on port 8889
-    if config.has_key('pbport'):
+    if 'pbport' in config:
         m = internet.TCPServer(
             int(config['pbport']),
             pb.PBServerFactory(IPerspectiveFinger(f)))

=== modified file 'doc/core/howto/tutorial/listings/finger/finger_config.py'
--- a/doc/core/howto/tutorial/listings/finger/finger_config.py	2004-07-30 12:01:15 +0000
+++ b/doc/core/howto/tutorial/listings/finger/finger_config.py	2009-11-14 12:19:22 +0000
@@ -21,7 +21,7 @@
         k.setServiceParent(s)
 
     # irc fingerbot
-    if config.has_key('ircnick'):
+    if 'ircnick' in config:
         i = IIRCClientFactory(f)
         i.nickname = config['ircnick']
         ircserver = config['ircserver']
@@ -29,7 +29,7 @@
         b.setServiceParent(s)
 
     # Pespective Broker on port 8889
-    if config.has_key('pbport'):
+    if 'pbport' in config:
         m = internet.TCPServer(
             int(config['pbport']),
             pb.PBServerFactory(IPerspectiveFinger(f)))

=== modified file 'twisted/application/service.py'
--- a/twisted/application/service.py	2008-11-16 14:40:19 +0000
+++ b/twisted/application/service.py	2009-11-14 12:19:22 +0000
@@ -168,7 +168,7 @@
 
     def __getstate__(self):
         dict = self.__dict__.copy()
-        if dict.has_key("running"):
+        if "running" in dict:
             del dict['running']
         return dict
 
@@ -294,7 +294,7 @@
 
     def addService(self, service):
         if service.name is not None:
-            if self.namedServices.has_key(service.name):
+            if service.name in self.namedServices:
                 raise RuntimeError("cannot have two services with same name"
                                    " '%s'" % service.name)
             self.namedServices[service.name] = service

=== modified file 'twisted/conch/client/options.py'
--- a/twisted/conch/client/options.py	2009-04-26 12:49:56 +0000
+++ b/twisted/conch/client/options.py	2009-11-14 12:19:22 +0000
@@ -59,7 +59,7 @@
         "Select encryption algorithms"
         ciphers = ciphers.split(',')
         for cipher in ciphers:
-            if not SSHCiphers.cipherMap.has_key(cipher):
+            if cipher not in SSHCiphers.cipherMap:
                 sys.exit("Unknown cipher type '%s'" % cipher)
         self['ciphers'] = ciphers
 
@@ -68,7 +68,7 @@
         "Specify MAC algorithms"
         macs = macs.split(',')
         for mac in macs:
-            if not SSHCiphers.macMap.has_key(mac):
+            if mac not in SSHCiphers.macMap:
                 sys.exit("Unknown mac type '%s'" % mac)
         self['macs'] = macs
 

=== modified file 'twisted/conch/openssh_compat/primes.py'
--- a/twisted/conch/openssh_compat/primes.py	2008-07-29 20:13:54 +0000
+++ b/twisted/conch/openssh_compat/primes.py	2009-11-14 12:19:22 +0000
@@ -20,7 +20,7 @@
         size = int(size) + 1
         gen = long(gen)
         mod = long(mod, 16)
-        if not primes.has_key(size):
+        if not size in primes:
             primes[size] = []
         primes[size].append((gen, mod))
     return primes

=== modified file 'twisted/conch/scripts/conch.py'
--- a/twisted/conch/scripts/conch.py	2009-04-26 12:49:56 +0000
+++ b/twisted/conch/scripts/conch.py	2009-11-14 12:19:22 +0000
@@ -303,7 +303,7 @@
         remoteHP, origHP = forwarding.unpackOpen_forwarded_tcpip(data)
         log.msg(self.remoteForwards)
         log.msg(remoteHP)
-        if self.remoteForwards.has_key(remoteHP[1]):
+        if remoteHP[1] in self.remoteForwards:
             connectHP = self.remoteForwards[remoteHP[1]]
             log.msg('connect forwarding %s' % (connectHP,))
             return SSHConnectForwardingChannel(connectHP,

=== modified file 'twisted/conch/unix.py'
--- a/twisted/conch/unix.py	2007-03-11 18:38:35 +0000
+++ b/twisted/conch/unix.py	2009-11-14 12:19:22 +0000
@@ -237,7 +237,7 @@
         pty = self.pty
         attr = tty.tcgetattr(pty.fileno())
         for mode, modeValue in self.modes:
-            if not ttymodes.TTYMODES.has_key(mode): continue
+            if mode not in ttymodes.TTYMODES: continue
             ttyMode = ttymodes.TTYMODES[mode]
             if len(ttyMode) == 2: # flag
                 flag, ttyAttr = ttyMode
@@ -303,11 +303,11 @@
         NOTE: this function assumes it runs as the logged-in user:
         i.e. under _runAsUser()
         """
-        if attrs.has_key("uid") and attrs.has_key("gid"):
+        if "uid" in attrs and "gid" in attrs:
             os.chown(path, attrs["uid"], attrs["gid"])
-        if attrs.has_key("permissions"):
+        if "permissions" in attrs:
             os.chmod(path, attrs["permissions"])
-        if attrs.has_key("atime") and attrs.has_key("mtime"):
+        if "atime" in attrs and "mtime" in attrs:
             os.utime(path, (attrs["atime"], attrs["mtime"]))
 
     def _getAttrs(self, s):
@@ -399,7 +399,7 @@
             openFlags |= os.O_TRUNC
         if flags & FXF_EXCL == FXF_EXCL:
             openFlags |= os.O_EXCL
-        if attrs.has_key("permissions"):
+        if "permissions" in attrs:
             mode = attrs["permissions"]
             del attrs["permissions"]
         else:

=== modified file 'twisted/enterprise/adbapi.py'
--- a/twisted/enterprise/adbapi.py	2008-08-04 11:46:54 +0000
+++ b/twisted/enterprise/adbapi.py	2009-11-14 12:19:22 +0000
@@ -197,7 +197,7 @@
 
         for arg in self.CP_ARGS:
             cp_arg = 'cp_%s' % arg
-            if connkw.has_key(cp_arg):
+            if cp_arg in connkw:
                 setattr(self, arg, connkw[cp_arg])
                 del connkw[cp_arg]
 

=== modified file 'twisted/enterprise/reflector.py'
--- a/twisted/enterprise/reflector.py	2008-03-26 16:49:32 +0000
+++ b/twisted/enterprise/reflector.py	2009-11-14 12:19:22 +0000
@@ -127,7 +127,7 @@
     def removeFromCache(self, rowObject):
         """NOTE: should this be recursive!??"""
         key = rowObject.getKeyTuple()
-        if self.rowCache.has_key(key):
+        if key in self.rowCache:
             del self.rowCache[key]
 
     ####### Row Operations ########

=== modified file 'twisted/internet/main.py'
--- a/twisted/internet/main.py	2008-07-29 20:13:54 +0000
+++ b/twisted/internet/main.py	2009-11-14 12:19:22 +0000
@@ -20,7 +20,7 @@
     # this stuff should be common to all reactors.
     import twisted.internet
     import sys
-    assert not sys.modules.has_key('twisted.internet.reactor'), \
+    assert 'twisted.internet.reactor' not in sys.modules, \
            "reactor already installed"
     twisted.internet.reactor = reactor
     sys.modules['twisted.internet.reactor'] = reactor

=== modified file 'twisted/lore/indexer.py'
--- a/twisted/lore/indexer.py	2004-08-25 08:36:30 +0000
+++ b/twisted/lore/indexer.py	2009-11-14 12:28:48 +0000
@@ -12,7 +12,7 @@
 
 def addEntry(filename, anchor, text, reference):
     global entries
-    if not entries.has_key(text):
+    if text not in entries:
         entries[text] = []
     entries[text].append((filename, anchor, reference))
 

=== modified file 'twisted/lore/lint.py'
--- a/twisted/lore/lint.py	2009-05-12 19:27:53 +0000
+++ b/twisted/lore/lint.py	2009-11-14 12:19:22 +0000
@@ -205,12 +205,19 @@
 
 pre = list2dict(['python', 'shell', 'python-interpreter', 'elisp'])
 
-allowed = {'code': classes.has_key, 'span': span.has_key, 'div': div.has_key,
-           'a': a.has_key, 'pre': pre.has_key, 'ul': lambda x: x=='toc',
-           'ol': lambda x: x=='toc', 'li': lambda x: x=='ignoretoc'}
+allowed = {
+        'code': lambda x: x in classes,
+        'span': lambda x: x in span,
+        'div': lambda x: x in div,
+        'a': lambda x: x in a,
+        'pre': lambda x: x in pre,
+        'ul': lambda x: x=='toc',
+        'ol': lambda x: x=='toc',
+        'li': lambda x: x=='ignoretoc',
+    }
 
 def getDefaultChecker():
-    return DefaultTagChecker(tags.has_key, allowed)
+    return DefaultTagChecker(lambda x: x in tags, allowed)
 
 def doFile(file, checker):
     doc = tree.parseFileAndReport(file)

=== modified file 'twisted/mail/imap4.py'
--- a/twisted/mail/imap4.py	2009-11-11 21:40:54 +0000
+++ b/twisted/mail/imap4.py	2009-11-14 12:19:22 +0000
@@ -4391,7 +4391,7 @@
     ##
     def addMailbox(self, name, mbox = None):
         name = name.upper()
-        if self.mailboxes.has_key(name):
+        if name in self.mailboxes:
             raise MailboxCollision, name
         if mbox is None:
             mbox = self._emptyMailbox(name, self.allocateID())
@@ -4441,14 +4441,14 @@
     def rename(self, oldname, newname):
         oldname = oldname.upper()
         newname = newname.upper()
-        if not self.mailboxes.has_key(oldname):
+        if not oldname in self.mailboxes:
             raise NoSuchMailbox, oldname
 
         inferiors = self._inferiorNames(oldname)
         inferiors = [(o, o.replace(oldname, newname, 1)) for o in inferiors]
 
         for (old, new) in inferiors:
-            if self.mailboxes.has_key(new):
+            if new in self.mailboxes:
                 raise MailboxCollision, new
 
         for (old, new) in inferiors:

=== modified file 'twisted/mail/mail.py'
--- a/twisted/mail/mail.py	2008-02-22 09:13:08 +0000
+++ b/twisted/mail/mail.py	2009-11-14 13:15:16 +0000
@@ -33,9 +33,6 @@
     def setDefaultDomain(self, domain):
         self.default = domain
 
-    def has_key(self, name):
-        return 1
-
     def fromkeys(klass, keys, value=None):
         d = klass()
         for k in keys:
@@ -45,6 +42,7 @@
 
     def __contains__(self, name):
         return 1
+    has_key = __contains__
 
     def __getitem__(self, name):
         return self.domains.get(name, self.default)

=== modified file 'twisted/mail/maildir.py'
--- a/twisted/mail/maildir.py	2009-05-03 22:17:54 +0000
+++ b/twisted/mail/maildir.py	2009-11-14 12:19:22 +0000
@@ -460,7 +460,7 @@
         Otherwise, returns postmaster's mailbox instead if bounces
         go to postmaster, otherwise return None
         """
-        if not self.dbm.has_key(name):
+        if not name in self.dbm:
             if not self.postmaster:
                 return None
             name = 'postmaster'

=== modified file 'twisted/mail/pb.py'
--- a/twisted/mail/pb.py	2004-08-25 08:36:30 +0000
+++ b/twisted/mail/pb.py	2009-11-14 12:19:22 +0000
@@ -99,10 +99,10 @@
             self.sendAnswer(requestID, collection)
 
     def getCollection(self, name, domain, password):
-        if not self.domains.has_key(domain):
+        if not domain in self.domains:
             return
         domain = self.domains[domain]
-        if (domain.dbm.has_key(name) and
+        if (name in domain.dbm and
             domain.dbm[name] == password):
             return MaildirCollection(domain.userDirectory(name))
 

=== modified file 'twisted/mail/test/test_mail.py'
--- a/twisted/mail/test/test_mail.py	2009-05-03 22:17:54 +0000
+++ b/twisted/mail/test/test_mail.py	2009-11-14 12:19:22 +0000
@@ -631,7 +631,7 @@
          fp = StringIO.StringIO(hdr)
          m = rfc822.Message(fp)
          self.assertEquals(len(m.items()), 1)
-         self.failUnless(m.has_key('Received'))
+         self.failUnless('Received' in m)
 
     def testValidateTo(self):
         user = smtp.User('user@test.domain', 'helo', None, 'wherever@whatever')

=== modified file 'twisted/manhole/explorer.py'
--- a/twisted/manhole/explorer.py	2004-08-25 08:36:30 +0000
+++ b/twisted/manhole/explorer.py	2009-11-14 12:19:22 +0000
@@ -29,7 +29,7 @@
 class Pool(UserDict.UserDict):
     def getExplorer(self, object, identifier):
         oid = id(object)
-        if self.data.has_key(oid):
+        if oid in self.data:
             # XXX: This potentially returns something with
             # 'identifier' set to a different value.
             return self.data[oid]

=== modified file 'twisted/manhole/service.py'
--- a/twisted/manhole/service.py	2006-07-01 16:08:17 +0000
+++ b/twisted/manhole/service.py	2009-11-14 12:19:22 +0000
@@ -202,8 +202,7 @@
     def __getstate__(self):
         state = self.__dict__.copy()
         state['clients'] = {}
-        if state['localNamespace'].has_key("__builtins__"):
-            del state['localNamespace']['__builtins__']
+        state['localNamespace'].pop('__builtins__', None)
         return state
 
     def attached(self, client, identity):
@@ -255,7 +254,7 @@
         compatMessage = None
         for client in clients:
             try:
-                if not client.capabilities.has_key("Failure"):
+                if "Failure" not in client.capabilities:
                     if compatMessage is None:
                         compatMessage = origMessage[:]
                         for i in xrange(len(message)):
@@ -394,6 +393,5 @@
         dict = self.__dict__.copy()
         ns = dict['namespace'].copy()
         dict['namespace'] = ns
-        if ns.has_key('__builtins__'):
-            del ns['__builtins__']
+        ns.pop('__builtins__', None)
         return dict

=== modified file 'twisted/manhole/telnet.py'
--- a/twisted/manhole/telnet.py	2004-08-25 08:36:30 +0000
+++ b/twisted/manhole/telnet.py	2009-11-14 12:19:22 +0000
@@ -112,6 +112,5 @@
         dict = self.__dict__
         ns = copy.copy(dict['namespace'])
         dict['namespace'] = ns
-        if ns.has_key('__builtins__'):
-            del ns['__builtins__']
+        ns.pop('__builtins__', None)
         return dict

=== modified file 'twisted/names/authority.py'
--- a/twisted/names/authority.py	2006-03-17 02:29:41 +0000
+++ b/twisted/names/authority.py	2009-11-14 12:29:05 +0000
@@ -50,7 +50,7 @@
 #            self._cache = {}
 #            self._meth = super(LookupCacherMixin, self)._lookup
 #
-#        if self._cache.has_key((name, cls, type)):
+#        if (name, cls, type) in self._cache:
 #            return self._cache[(name, cls, type)]
 #        else:
 #            r = self._meth(name, cls, type, timeout)
@@ -160,7 +160,7 @@
     def loadFile(self, filename):
         g, l = self.setupConfigNamespace(), {}
         execfile(filename, g, l)
-        if not l.has_key('zone'):
+        if 'zone' not in l:
             raise ValueError, "No zone defined in " + filename
 
         self.records = {}

=== modified file 'twisted/names/cache.py'
--- a/twisted/names/cache.py	2006-07-01 16:08:17 +0000
+++ b/twisted/names/cache.py	2009-11-14 12:19:22 +0000
@@ -79,7 +79,7 @@
 
         self.cache[query] = (time.time(), payload)
 
-        if self.cancel.has_key(query):
+        if query in self.cancel:
             self.cancel[query].cancel()
 
         s = list(payload[0]) + list(payload[1]) + list(payload[2])

=== modified file 'twisted/news/database.py'
--- a/twisted/news/database.py	2008-11-19 18:56:50 +0000
+++ b/twisted/news/database.py	2009-11-14 12:19:22 +0000
@@ -69,7 +69,7 @@
 
     def getHeader(self, header):
         h = header.lower()
-        if self.headers.has_key(h):
+        if h in self.headers:
             return self.headers[h][1]
         else:
             return ''

=== modified file 'twisted/persisted/aot.py'
--- a/twisted/persisted/aot.py	2008-12-14 22:09:07 +0000
+++ b/twisted/persisted/aot.py	2009-11-14 12:19:22 +0000
@@ -260,7 +260,7 @@
     else:
         exec stringOrFile in ns
 
-    if ns.has_key('app'):
+    if 'app' in ns:
         return unjellyFromAOT(ns['app'])
     else:
         raise ValueError("%s needs to define an 'app', it didn't!" % stringOrFile)
@@ -504,7 +504,7 @@
 #mutable inside one. The Ref() class will only print the "Ref(..)" around an
 #object if it has a Reference explicitly attached.
 
-            if self.prepared.has_key(id(obj)):
+            if id(obj) in self.prepared:
                 oldRef = self.prepared[id(obj)]
                 if oldRef.refnum:
                     # it's been referenced already
@@ -538,7 +538,7 @@
                     state = self.jellyToAO(obj.__dict__)
                 retval.setObj(Instance(reflect.qual(obj.__class__), state))
 
-            elif copy_reg.dispatch_table.has_key(objType):
+            elif objType in copy_reg.dispatch_table:
                 unpickleFunc, state = copy_reg.dispatch_table[objType](obj)
                 
                 retval.setObj(Copyreg( reflect.fullFuncName(unpickleFunc),

=== modified file 'twisted/persisted/dirdbm.py'
--- a/twisted/persisted/dirdbm.py	2008-07-29 20:13:54 +0000
+++ b/twisted/persisted/dirdbm.py	2009-11-14 12:19:22 +0000
@@ -218,7 +218,7 @@
         @param value: The value to associate with key if key is not already
         associated with a value.
         """
-        if not self.has_key(key):
+        if key not in self:
             self[key] = value
             return value
         return self[key]
@@ -233,7 +233,7 @@
         @return: The value associated with C{key} or C{default} if not
         C{self.has_key(key)}
         """
-        if self.has_key(key):
+        if key in self:
             return self[key]
         else:
             return default

=== modified file 'twisted/persisted/styles.py'
--- a/twisted/persisted/styles.py	2008-12-05 18:16:58 +0000
+++ b/twisted/persisted/styles.py	2009-11-14 12:19:22 +0000
@@ -75,7 +75,7 @@
 
 def unpickleModule(name):
     'support function for copy_reg to unpickle module refs'
-    if oldModules.has_key(name):
+    if name in oldModules:
         log.msg("Module has moved: %s" % name)
         name = oldModules[name]
         log.msg(name)
@@ -197,11 +197,11 @@
         bases.reverse()
         bases.append(self.__class__) # don't forget me!!
         for base in bases:
-            if base.__dict__.has_key('persistenceForgets'):
+            if 'persistenceForgets' in base.__dict__:
                 for slot in base.persistenceForgets:
-                    if dct.has_key(slot):
+                    if slot in dct:
                         del dct[slot]
-            if base.__dict__.has_key('persistenceVersion'):
+            if 'persistenceVersion' in base.__dict__:
                 dct['%s.persistenceVersion' % reflect.qual(base)] = base.persistenceVersion
         return dct
 
@@ -214,7 +214,7 @@
         bases.reverse()
         bases.append(self.__class__) # don't forget me!!
         # first let's look for old-skool versioned's
-        if self.__dict__.has_key("persistenceVersion"):
+        if "persistenceVersion" in self.__dict__:
             
             # Hacky heuristic: if more than one class subclasses Versioned,
             # we'll assume that the higher version number wins for the older
@@ -229,7 +229,7 @@
             highestVersion = 0
             highestBase = None
             for base in bases:
-                if not base.__dict__.has_key('persistenceVersion'):
+                if 'persistenceVersion' not in base.__dict__:
                     continue
                 if base.persistenceVersion > highestVersion:
                     highestBase = base
@@ -239,7 +239,7 @@
         for base in bases:
             # ugly hack, but it's what the user expects, really
             if (Versioned not in base.__bases__ and
-                not base.__dict__.has_key('persistenceVersion')):
+                'persistenceVersion' not in base.__dict__):
                 continue
             currentVers = base.persistenceVersion
             pverName = '%s.persistenceVersion' % reflect.qual(base)

=== modified file 'twisted/protocols/sip.py'
--- a/twisted/protocols/sip.py	2009-02-27 20:46:13 +0000
+++ b/twisted/protocols/sip.py	2009-11-14 12:19:22 +0000
@@ -1170,7 +1170,7 @@
             self.register(message, host, port)
         else:
             # There is a portal.  Check for credentials.
-            if not message.headers.has_key("authorization"):
+            if "authorization" not in message.headers:
                 return self.unauthorized(message, host, port)
             else:
                 return self.login(message, host, port)
@@ -1220,7 +1220,7 @@
         """Allow all users to register"""
         name, toURL, params = parseAddress(message.headers["to"][0], clean=1)
         contact = None
-        if message.headers.has_key("contact"):
+        if "contact" in message.headers:
             contact = message.headers["contact"][0]
 
         if message.headers.get("expires", [None])[0] == "0":
@@ -1289,7 +1289,7 @@
     def getAddress(self, userURI):
         if userURI.host != self.domain:
             return defer.fail(LookupError("unknown domain"))
-        if self.users.has_key(userURI.username):
+        if userURI.username in self.users:
             dc, url = self.users[userURI.username]
             return defer.succeed(url)
         else:
@@ -1298,7 +1298,7 @@
     def getRegistrationInfo(self, userURI):
         if userURI.host != self.domain:
             return defer.fail(LookupError("unknown domain"))
-        if self.users.has_key(userURI.username):
+        if userURI.username in self.users:
             dc, url = self.users[userURI.username]
             return defer.succeed(Registration(int(dc.getTime() - time.time()), url))
         else:
@@ -1321,7 +1321,7 @@
         if logicalURL.host != self.domain:
             log.msg("Registration for domain we don't handle.")
             return defer.fail(RegistrationError(404))
-        if self.users.has_key(logicalURL.username):
+        if logicalURL.username in self.users:
             dc, old = self.users[logicalURL.username]
             dc.reset(3600)
         else:

=== modified file 'twisted/python/components.py'
--- a/twisted/python/components.py	2009-02-15 00:45:29 +0000
+++ b/twisted/python/components.py	2009-11-14 12:19:22 +0000
@@ -287,7 +287,7 @@
         True on your adapter class.
         """
         k = reflect.qual(interface)
-        if self._adapterCache.has_key(k):
+        if k in self._adapterCache:
             return self._adapterCache[k]
         else:
             adapter = interface.__adapt__(self)

=== modified file 'twisted/python/failure.py'
--- a/twisted/python/failure.py	2009-04-02 04:50:29 +0000
+++ b/twisted/python/failure.py	2009-11-14 12:19:22 +0000
@@ -238,8 +238,8 @@
             else:
                 globalz = f.f_globals.copy()
             for d in globalz, localz:
-                if d.has_key("__builtins__"):
-                    del d["__builtins__"]
+                # Remove __builtins__ if present.
+                d.pop("__builtins__", None)
             stack.insert(0, [
                 f.f_code.co_name,
                 f.f_code.co_filename,
@@ -257,8 +257,8 @@
             else:
                 globalz = f.f_globals.copy()
             for d in globalz, localz:
-                if d.has_key("__builtins__"):
-                    del d["__builtins__"]
+                # Remove __builtins__ if present.
+                d.pop("__builtins__", None)
 
             frames.append([
                 f.f_code.co_name,

=== modified file 'twisted/python/filepath.py'
--- a/twisted/python/filepath.py	2009-09-30 19:10:56 +0000
+++ b/twisted/python/filepath.py	2009-11-14 12:19:22 +0000
@@ -338,8 +338,7 @@
 
     def __getstate__(self):
         d = self.__dict__.copy()
-        if d.has_key('statinfo'):
-            del d['statinfo']
+        d.pop('statinfo', None)
         return d
 
     def child(self, path):

=== modified file 'twisted/python/rebuild.py'
--- a/twisted/python/rebuild.py	2009-05-10 19:43:24 +0000
+++ b/twisted/python/rebuild.py	2009-11-14 12:19:22 +0000
@@ -176,7 +176,7 @@
 
     values.update(classes)
     values.update(functions)
-    fromOldModule = values.has_key
+    fromOldModule = lambda key: key in values
     newclasses = newclasses.keys()
     classes = classes.keys()
     functions = functions.keys()

=== modified file 'twisted/python/reflect.py'
--- a/twisted/python/reflect.py	2008-11-25 11:32:05 +0000
+++ b/twisted/python/reflect.py	2009-11-14 12:19:22 +0000
@@ -481,7 +481,7 @@
 
     This allows you to create macro-like behaviors in python.
     """
-    if not identifiers.has_key('name'):
+    if not 'name' in identifiers:
         identifiers['name'] = name
     source = source % identifiers
     codeplace = "<%s (macro)>" % filename
@@ -490,7 +490,7 @@
     # shield your eyes!
     sm = sys.modules
     tprm = "twisted.python.reflect.macros"
-    if not sm.has_key(tprm):
+    if not tprm in sm:
         macros = new.module(tprm)
         sm[tprm] = macros
         macros.count = 0

=== modified file 'twisted/python/util.py'
--- a/twisted/python/util.py	2009-06-01 18:07:14 +0000
+++ b/twisted/python/util.py	2009-11-14 12:19:22 +0000
@@ -55,11 +55,11 @@
         k = self._lowerOrReturn(key)
         self.data[k] = (key, value)
 
-    def has_key(self, key):
+    def __contains__(self, key):
         """Case insensitive test whether 'key' exists."""
         k = self._lowerOrReturn(key)
-        return self.data.has_key(k)
-    __contains__=has_key
+        return k in self.data
+    has_key = __contains__
 
     def _doPreserve(self, key):
         if not self.preserve and (isinstance(key, str)
@@ -91,7 +91,7 @@
     def setdefault(self, key, default):
         """If 'key' doesn't exists, associate it with the 'default' value.
         Return value associated with 'key'."""
-        if not self.has_key(key):
+        if not key in self:
             self[key] = default
         return self[key]
 
@@ -155,7 +155,7 @@
         return '{'+', '.join([('%r: %r' % item) for item in self.items()])+'}'
 
     def __setitem__(self, key, value):
-        if not self.has_key(key):
+        if not key in self:
             self._order.append(key)
         UserDict.__setitem__(self, key, value)
 
@@ -193,7 +193,7 @@
         return (key, value)
 
     def setdefault(self, item, default):
-        if self.has_key(item):
+        if item in self:
             return self[item]
         self[item] = default
         return default
@@ -209,7 +209,7 @@
     dct = {}
     result = []
     for k in lst:
-        if not dct.has_key(k): result.append(k)
+        if not k in dct: result.append(k)
         dct[k] = 1
     return result
 
@@ -370,7 +370,7 @@
 def spewer(frame, s, ignored):
     """A trace function for sys.settrace that prints every function or method call."""
     from twisted.python import reflect
-    if frame.f_locals.has_key('self'):
+    if 'self' in frame.f_locals:
         se = frame.f_locals['self']
         if hasattr(se, '__class__'):
             k = reflect.qual(se.__class__)

=== modified file 'twisted/runner/inetd.py'
--- a/twisted/runner/inetd.py	2008-07-29 20:13:54 +0000
+++ b/twisted/runner/inetd.py	2009-11-14 12:19:22 +0000
@@ -41,7 +41,7 @@
         # FIXME: maybe this should be done in process.py?  are other uses of
         #        Process possibly affected by this?
         fdesc.setBlocking(sockFD)
-        if childFDs.has_key(2):
+        if 2 in childFDs:
             fdesc.setBlocking(childFDs[2])
 
         service = self.factory.service

=== modified file 'twisted/runner/inetdtap.py'
--- a/twisted/runner/inetdtap.py	2008-07-29 20:13:54 +0000
+++ b/twisted/runner/inetdtap.py	2009-11-14 12:19:22 +0000
@@ -81,7 +81,7 @@
         if rpc:
             # RPC has extra options, so extract that
             protocol = protocol[4:]     # trim 'rpc/'
-            if not protocolDict.has_key(protocol):
+            if protocol not in protocolDict:
                 log.msg('Bad protocol: ' + protocol)
                 continue
             
@@ -91,7 +91,7 @@
                 log.msg('Bad RPC service/version: ' + service.name)
                 continue
 
-            if not rpcConf.services.has_key(name):
+            if rpcConf.name not in services:
                 log.msg('Unknown RPC service: ' + repr(service.name))
                 continue
 
@@ -140,7 +140,7 @@
                 continue
 
             # Internal services can use a standard ServerFactory
-            if not inetd.internalProtocols.has_key(service.name):
+            if inetd.service.name not in internalProtocols:
                 log.msg('Unknown internal service: ' + service.name)
                 continue
             factory = ServerFactory()

=== modified file 'twisted/runner/procmon.py'
--- a/twisted/runner/procmon.py	2009-04-17 10:37:09 +0000
+++ b/twisted/runner/procmon.py	2009-11-14 12:19:22 +0000
@@ -109,7 +109,7 @@
     def __getstate__(self):
         dct = service.Service.__getstate__(self)
         for k in ('active', 'consistency'):
-            if dct.has_key(k):
+            if k in dct:
                 del dct[k]
         dct['protocols'] = {}
         dct['delay'] = {}
@@ -175,20 +175,20 @@
         self.consistency.cancel()
 
     def connectionLost(self, name):
-        if self.murder.has_key(name):
+        if name in self.murder:
             self.murder[name].cancel()
             del self.murder[name]
-        if self.protocols.has_key(name):
+        if name in self.protocols:
             del self.protocols[name]
         if time.time()-self.timeStarted[name]<self.threshold:
             delay = self.delay[name] = min(1+2*self.delay.get(name, 0), 3600)
         else:
             delay = self.delay[name] = 0
-        if self.active and self.processes.has_key(name):
+        if self.active and self.name in processes:
             reactor.callLater(delay, self.startProcess, name)
 
     def startProcess(self, name):
-        if self.protocols.has_key(name):
+        if name in self.protocols:
             return
         p = self.protocols[name] = LoggingProtocol()
         p.service = self
@@ -204,7 +204,7 @@
             pass
 
     def stopProcess(self, name):
-        if not self.protocols.has_key(name):
+        if name not in self.protocols:
             return
         proc = self.protocols[name].transport
         del self.protocols[name]

=== modified file 'twisted/scripts/mktap.py'
--- a/twisted/scripts/mktap.py	2009-01-05 16:41:11 +0000
+++ b/twisted/scripts/mktap.py	2009-11-14 12:19:22 +0000
@@ -157,7 +157,7 @@
             raise usage.UsageError(str(self))
         if hasattr(self, 'subOptions') and self.subOptions.get('help'):
             raise usage.UsageError(str(self.subOptions))
-        if not self.tapLookup.has_key(self.subCommand):
+        if self.subCommand not in self.tapLookup:
             raise usage.UsageError("Please select one of: "+
                                    ' '.join(self.tapLookup))
 

=== modified file 'twisted/spread/pb.py'
--- a/twisted/spread/pb.py	2008-11-19 18:56:50 +0000
+++ b/twisted/spread/pb.py	2009-11-14 12:19:22 +0000
@@ -793,13 +793,13 @@
         pbc = None
         pbe = None
         answerRequired = 1
-        if kw.has_key('pbcallback'):
+        if 'pbcallback' in kw:
             pbc = kw['pbcallback']
             del kw['pbcallback']
-        if kw.has_key('pberrback'):
+        if 'pberrback' in kw:
             pbe = kw['pberrback']
             del kw['pberrback']
-        if kw.has_key('pbanswer'):
+        if 'pbanswer' in kw:
             assert (not pbe) and (not pbc), "You can't specify a no-answer requirement."
             answerRequired = kw['pbanswer']
             del kw['pbanswer']

=== modified file 'twisted/spread/ui/gtk2util.py'
--- a/twisted/spread/ui/gtk2util.py	2004-08-25 08:36:30 +0000
+++ b/twisted/spread/ui/gtk2util.py	2009-11-14 12:19:22 +0000
@@ -91,7 +91,7 @@
 
 
     def setDefaults(self, defaults):
-        if not defaults.has_key('port'):
+        if 'port' not in defaults:
             defaults['port'] = str(pb.portno)
         elif isinstance(defaults['port'], (int, long)):
             defaults['port'] = str(defaults['port'])

=== modified file 'twisted/tap/manhole.py'
--- a/twisted/tap/manhole.py	2008-10-28 19:12:14 +0000
+++ b/twisted/tap/manhole.py	2009-11-14 12:19:22 +0000
@@ -39,7 +39,7 @@
     opt_w = opt_password
 
     def postOptions(self):
-        if not self.has_key('password'):
+        if not 'password' in self:
             self.opt_password('-')
 
 def makeService(config):

=== modified file 'twisted/test/test_adbapi.py'
--- a/twisted/test/test_adbapi.py	2008-08-04 11:46:54 +0000
+++ b/twisted/test/test_adbapi.py	2009-11-14 12:19:22 +0000
@@ -54,7 +54,7 @@
         if not conn:
             self.failUnless(self.openfun_called)
         else:
-            self.failUnless(self.openfun_called.has_key(conn))
+            self.failUnless(conn in self.openfun_called)
 
     def testPool(self):
         d = self.dbpool.runOperation(simple_table_schema)

=== modified file 'twisted/test/test_dirdbm.py'
--- a/twisted/test/test_dirdbm.py	2008-06-28 15:25:16 +0000
+++ b/twisted/test/test_dirdbm.py	2009-11-14 12:19:22 +0000
@@ -52,7 +52,7 @@
 
         # check they exist
         for k, v in self.items:
-            assert d.has_key(k), "has_key() failed"
+            assert k in d, "has_key() failed"
             assert d[k] == v, "database has wrong value"
 
         # check non existent key
@@ -97,7 +97,7 @@
         # delete items
         for k, v in self.items:
             del d[k]
-            assert not d.has_key(k), "has_key() even though we deleted it"
+            assert not k in d, "has_key() even though we deleted it"
         assert len(d.keys()) == 0, "database has keys"
         assert len(d.values()) == 0, "database has values"
         assert len(d.items()) == 0, "database has items"

=== modified file 'twisted/test/test_log.py'
--- a/twisted/test/test_log.py	2009-08-10 12:44:10 +0000
+++ b/twisted/test/test_log.py	2009-11-14 12:19:22 +0000
@@ -36,7 +36,7 @@
         i = catcher.pop()
         self.assertEquals(i["message"][0], "test")
         self.assertEquals(i["testShouldCatch"], True)
-        self.failUnless(i.has_key("time"))
+        self.failUnless("time" in i)
         self.assertEquals(len(catcher), 0)
 
 

=== modified file 'twisted/test/test_newcred.py'
--- a/twisted/test/test_newcred.py	2008-11-19 18:56:50 +0000
+++ b/twisted/test/test_newcred.py	2009-11-14 12:19:22 +0000
@@ -113,7 +113,7 @@
         self.avatars = {}
 
     def requestAvatar(self, avatarId, mind, *interfaces):
-        if self.avatars.has_key(avatarId):
+        if avatarId in self.avatars:
             avatar = self.avatars[avatarId]
         else:
             avatar = TestAvatar(avatarId)

=== modified file 'twisted/vfs/adapters/sftp.py'
--- a/twisted/vfs/adapters/sftp.py	2007-05-22 09:24:14 +0000
+++ b/twisted/vfs/adapters/sftp.py	2009-11-14 13:13:48 +0000
@@ -71,11 +71,11 @@
         NOTE: this function assumes it runs as the logged-in user:
         i.e. under _runAsUser()
         """
-        if attrs.has_key("uid") and attrs.has_key("gid"):
+        if "uid" in attrs and gid in attrs:
             os.lchown(path, attrs["uid"], attrs["gid"])
-        if attrs.has_key("permissions"):
+        if "permissions" in attrs:
             os.chmod(path, attrs["permissions"])
-        if attrs.has_key("atime") and attrs.has_key("mtime"):
+        if "atime" in attrs and mtime in attrs:
             os.utime(path, (attrs["atime"]. attrs["mtime"]))
 
     def gotVersion(self, otherVersion, extData):

=== modified file 'twisted/vfs/backends/adhoc.py'
--- a/twisted/vfs/backends/adhoc.py	2005-12-16 06:06:52 +0000
+++ b/twisted/vfs/backends/adhoc.py	2009-11-14 12:19:22 +0000
@@ -35,7 +35,7 @@
         return {}
 
     def exists(self, childName):
-        return self._children.has_key(childName)
+        return self.childName in _children
 
     def putChild(self, name, node):
         node.parent = self

=== modified file 'twisted/web/client.py'
--- a/twisted/web/client.py	2009-11-08 22:57:59 +0000
+++ b/twisted/web/client.py	2009-11-14 12:19:22 +0000
@@ -306,7 +306,7 @@
 
     def gotHeaders(self, headers):
         self.response_headers = headers
-        if headers.has_key('set-cookie'):
+        if 'set-cookie' in headers:
             for cookie in headers['set-cookie']:
                 cookparts = cookie.split(';')
                 cook = cookparts[0]

=== modified file 'twisted/web/microdom.py'
--- a/twisted/web/microdom.py	2009-03-19 15:34:01 +0000
+++ b/twisted/web/microdom.py	2009-11-14 12:19:22 +0000
@@ -523,7 +523,7 @@
 
     def getAttributeNS(self, ns, name, default=None):
         nsk = (ns, name)
-        if self.attributes.has_key(nsk):
+        if nsk in self.attributes:
             return self.attributes[nsk]
         if ns == self.namespace:
             return self.attributes.get(name, default)
@@ -628,7 +628,7 @@
         for attr, val in self.attributes.iteritems():
             if isinstance(attr, tuple):
                 ns, key = attr
-                if nsprefixes.has_key(ns):
+                if ns in nsprefixes:
                     prefix = nsprefixes[ns]
                 else:
                     prefix = genprefix()
@@ -827,7 +827,7 @@
             ksplit = k.split(':', 1)
             if len(ksplit) == 2:
                 pfx, tv = ksplit
-                if pfx != 'xml' and namespaces.has_key(pfx):
+                if pfx != 'xml' and pfx in namespaces:
                     attributes[namespaces[pfx], tv] = v
                     del attributes[k]
         el = Element(name, attributes, parent,

=== modified file 'twisted/web/resource.py'
--- a/twisted/web/resource.py	2009-01-25 20:40:09 +0000
+++ b/twisted/web/resource.py	2009-11-14 12:19:22 +0000
@@ -109,7 +109,7 @@
         return self.children.get(name)
 
     def getDynamicEntity(self, name, request):
-        if not self.children.has_key(name):
+        if name not in self.children:
             return self.getChild(name, request)
         else:
             return None

=== modified file 'twisted/web/static.py'
--- a/twisted/web/static.py	2009-07-30 20:36:14 +0000
+++ b/twisted/web/static.py	2009-11-14 12:19:22 +0000
@@ -136,7 +136,7 @@
 def getTypeAndEncoding(filename, types, encodings, defaultType):
     p, ext = os.path.splitext(filename)
     ext = ext.lower()
-    if encodings.has_key(ext):
+    if ext in encodings:
         enc = encodings[ext]
         ext = os.path.splitext(p)[1].lower()
     else:

=== modified file 'twisted/web/sux.py'
--- a/twisted/web/sux.py	2006-11-10 04:41:09 +0000
+++ b/twisted/web/sux.py	2009-11-14 12:19:22 +0000
@@ -133,7 +133,7 @@
         # -radix
 
         if (self.tagName == 'script'
-            and not self.tagAttributes.has_key('src')):
+            and 'src' not in self.tagAttributes):
             # we do this ourselves rather than having begin_waitforendscript
             # becuase that can get called multiple times and we don't want
             # bodydata to get reset other than the first time.

=== modified file 'twisted/web/twcgi.py'
--- a/twisted/web/twcgi.py	2009-01-25 20:40:09 +0000
+++ b/twisted/web/twcgi.py	2009-11-14 12:19:22 +0000
@@ -110,7 +110,7 @@
             env[envname] = header
         # Propogate our environment
         for key, value in os.environ.items():
-            if not env.has_key(key):
+            if key not in env:
                 env[key] = value
         # And they're off!
         self.runProcess(env, request, qargs)

=== modified file 'twisted/web2/http_headers.py'
--- a/twisted/web2/http_headers.py	2008-10-28 21:25:18 +0000
+++ b/twisted/web2/http_headers.py	2009-11-14 12:19:22 +0000
@@ -1323,7 +1323,7 @@
     def hasHeader(self, name):
         """Does a header with the given name exist?"""
         name=name.lower()
-        return self._raw_headers.has_key(name)
+        return name in self._raw_headers
 
     def getRawHeaders(self, name, default=None):
         """Returns a list of headers matching the given name as the raw string given."""
@@ -1389,7 +1389,7 @@
         """Removes the header named."""
 
         name=name.lower()
-        if self._raw_headers.has_key(name):
+        if name in self._raw_headers:
             del self._raw_headers[name]
             del self._headers[name]
 

=== modified file 'twisted/web2/proxy.py'
--- a/twisted/web2/proxy.py	2006-07-02 03:53:32 +0000
+++ b/twisted/web2/proxy.py	2009-11-14 12:19:22 +0000
@@ -37,8 +37,7 @@
         self.father = father
         self.command = command
         self.rest = rest
-        if headers.has_key("proxy-connection"):
-            del headers["proxy-connection"]
+        headers.pop("proxy-connection", None)
         headers["connection"] = "close"
         self.headers = headers
         self.data = data
@@ -111,7 +110,7 @@
             rest = rest+'/'
         class_ = self.protocols[protocol]
         headers = self.getAllHeaders().copy()
-        if not headers.has_key('host'):
+        if 'host' not in headers:
             headers['host'] = host
         self.content.seek(0, 0)
         s = self.content.read()

=== modified file 'twisted/web2/server.py'
--- a/twisted/web2/server.py	2008-11-19 18:56:50 +0000
+++ b/twisted/web2/server.py	2009-11-14 12:19:22 +0000
@@ -171,10 +171,10 @@
                        error.defaultErrorHandler, defaultHeadersFilter]
 
     def __init__(self, *args, **kw):
-        if kw.has_key('site'):
+        if 'site' in kw:
             self.site = kw['site']
             del kw['site']
-        if kw.has_key('prepathuri'):
+        if 'prepathuri' in kw:
             self._initialprepath = kw['prepathuri']
             del kw['prepathuri']
 

=== modified file 'twisted/web2/static.py'
--- a/twisted/web2/static.py	2008-11-19 18:56:50 +0000
+++ b/twisted/web2/static.py	2009-11-14 12:19:22 +0000
@@ -575,7 +575,7 @@
 def getTypeAndEncoding(filename, types, encodings, defaultType):
     p, ext = os.path.splitext(filename)
     ext = ext.lower()
-    if encodings.has_key(ext):
+    if ext in encodings:
         enc = encodings[ext]
         ext = os.path.splitext(p)[1].lower()
     else:

=== modified file 'twisted/web2/test/test_httpauth.py'
--- a/twisted/web2/test/test_httpauth.py	2008-11-19 18:56:50 +0000
+++ b/twisted/web2/test/test_httpauth.py	2009-11-14 12:19:22 +0000
@@ -149,8 +149,8 @@
         self.assertEquals(challenge['qop'], 'auth')
         self.assertEquals(challenge['realm'], 'test realm')
         self.assertEquals(challenge['algorithm'], 'md5')
-        self.assertTrue(challenge.has_key("nonce"))
-        self.assertTrue(challenge.has_key("opaque"))
+        self.failUnlessIn("nonce", challenge)
+        self.failUnlessIn("opaque", challenge)
 
     def test_response(self):
         """

=== modified file 'twisted/web2/vhost.py'
--- a/twisted/web2/vhost.py	2006-07-16 00:31:55 +0000
+++ b/twisted/web2/vhost.py	2009-11-14 12:19:22 +0000
@@ -78,7 +78,7 @@
         host = req.host.lower()
         
         if self.supportNested:
-            while not self.hosts.has_key(host) and len(host.split('.')) > 1:
+            while host not in self.hosts and len(host.split('.')) > 1:
                 host = '.'.join(host.split('.')[1:])
 
         # Default being None is okay, it'll turn into a 404

=== modified file 'twisted/words/im/basechat.py'
--- a/twisted/words/im/basechat.py	2006-02-05 01:29:31 +0000
+++ b/twisted/words/im/basechat.py	2009-11-14 12:19:22 +0000
@@ -24,12 +24,12 @@
 
         @type person: L{Person<interfaces.IPerson>}
         """
-        if not self.contacts.has_key(person.name):
+        if person.name not in self.contacts:
             self.contacts[person.name] = person
-        if not self.onlineContacts.has_key(person.name) and \
+        if person.name not in self.onlineContacts and \
             (person.status == ONLINE or person.status == AWAY):
             self.onlineContacts[person.name] = person
-        if self.onlineContacts.has_key(person.name) and \
+        if person.name in self.onlineContacts and \
            person.status == OFFLINE:
             del self.onlineContacts[person.name]
 
@@ -52,11 +52,11 @@
 
     def contactChangedNick(self, person, newnick):
         oldname = person.name
-        if self.contacts.has_key(oldname):
+        if oldname in self.contacts:
             del self.contacts[oldname]
             person.name = newnick
             self.contacts[newnick] = person
-            if self.onlineContacts.has_key(oldname):
+            if oldname in self.onlineContacts:
                 del self.onlineContacts[oldname]
                 self.onlineContacts[newnick] = person
 
@@ -304,7 +304,7 @@
         @type oldnick: string
         @type newnick: string
         """
-        if self.persons.has_key((person.name, person.account)):
+        if (person.name, person.account) in self.persons:
             conv = self.conversations.get(person)
             if conv:
                 conv.contactChangedNick(person, newnick)

=== modified file 'twisted/words/im/ircsupport.py'
--- a/twisted/words/im/ircsupport.py	2006-11-25 22:46:48 +0000
+++ b/twisted/words/im/ircsupport.py	2009-11-14 12:19:22 +0000
@@ -168,7 +168,7 @@
         for ui in range(len(users)):
             while users[ui][0] in ["@","+"]: # channel modes
                 users[ui]=users[ui][1:]
-        if not self._namreplies.has_key(group):
+        if group not in self._namreplies:
             self._namreplies[group]=[]
         self._namreplies[group].extend(users)
         for nickname in users:
@@ -218,7 +218,7 @@
 
     def irc_QUIT(self,prefix,params):
         nickname=string.split(prefix,"!")[0]
-        if self._ingroups.has_key(nickname):
+        if nickname in self._ingroups:
             for group in self._ingroups[nickname]:
                 self.getGroupConversation(group).memberLeft(nickname)
             self._ingroups[nickname]=[]
@@ -228,7 +228,7 @@
     def irc_NICK(self, prefix, params):
         fromNick = string.split(prefix, "!")[0]
         toNick = params[0]
-        if not self._ingroups.has_key(fromNick):
+        if fromNick not in self._ingroups:
             print "%s changed nick to %s. But she's not in any groups!?" % (fromNick, toNick)
             return
         for group in self._ingroups[fromNick]:

=== modified file 'twisted/words/im/pbsupport.py'
--- a/twisted/words/im/pbsupport.py	2006-07-01 16:08:17 +0000
+++ b/twisted/words/im/pbsupport.py	2009-11-14 12:19:22 +0000
@@ -145,7 +145,7 @@
             self.chat.getPerson(name, self).setStatus(status)
 
     def remote_setGroupMetadata(self, dict_, groupName):
-        if dict_.has_key("topic"):
+        if "topic" in dict_:
             self.getGroupConversation(groupName).setTopic(dict_["topic"], dict_.get("topic_author", None))
 
     def joinGroup(self, name):

=== modified file 'twisted/words/im/tocsupport.py'
--- a/twisted/words/im/tocsupport.py	2006-07-01 16:08:17 +0000
+++ b/twisted/words/im/tocsupport.py	2009-11-14 12:19:22 +0000
@@ -102,7 +102,7 @@
 
     def addContact(self, name):
         self.add_buddy([name])
-        if not self._buddylist.has_key('TwistedIM'):
+        if 'TwistedIM' not in self._buddylist:
             self._buddylist['TwistedIM'] = []
         if name in self._buddylist['TwistedIM']:
             # whoops, don't add again

=== modified file 'twisted/words/protocols/irc.py'
--- a/twisted/words/protocols/irc.py	2009-11-14 00:02:57 +0000
+++ b/twisted/words/protocols/irc.py	2009-11-14 12:19:22 +0000
@@ -202,7 +202,7 @@
                   " look like a command to me: %s" % command
 
         line = string.join([command] + list(parameter_list))
-        if prefix.has_key('prefix'):
+        if 'prefix' in prefix:
             line = ":%s %s" % (prefix['prefix'], line)
         self.sendLine(line)
 
@@ -2152,7 +2152,7 @@
 
     def ctcpReply_PING(self, user, channel, data):
         nick = user.split('!', 1)[0]
-        if (not self._pings) or (not self._pings.has_key((nick, data))):
+        if (not self._pings) or ((nick, data) not in self._pings):
             raise IRCBadMessage,\
                   "Bogus PING response from %s: %s" % (user, data)
 
@@ -2201,7 +2201,7 @@
         line = lowDequote(line)
         try:
             prefix, command, params = parsemsg(line)
-            if numeric_to_symbolic.has_key(command):
+            if command in numeric_to_symbolic:
                 command = numeric_to_symbolic[command]
             self.handleCommand(command, prefix, params)
         except IRCBadMessage:

=== modified file 'twisted/words/protocols/msn.py'
--- a/twisted/words/protocols/msn.py	2008-11-19 18:56:50 +0000
+++ b/twisted/words/protocols/msn.py	2009-11-14 12:19:22 +0000
@@ -213,7 +213,7 @@
     def handleEndHeaders(self):
         if self.connected:
             self.transport.loseConnection()
-        if not self.headers.has_key('passporturls') or not self.headers['passporturls'].has_key('dalogin'):
+        if 'passporturls' not in self.headers or 'dalogin' not in self.headers['passporturls']:
             self.deferred.errback(failure.Failure(failure.DefaultException("Invalid Nexus Reply")))
         self.deferred.callback('https://' + self.headers['passporturls']['dalogin'])
 
@@ -256,7 +256,7 @@
             self.transport.loseConnection()
         authHeader = 'authentication-info'
         _interHeader = 'www-authenticate'
-        if self.headers.has_key(_interHeader):
+        if _interHeader in self.headers:
             authHeader = _interHeader
         try:
             info = self.headers[authHeader]
@@ -367,7 +367,7 @@
 
     def hasHeader(self, header):
         """ check to see if the desired header exists """
-        return self.headers.has_key(header)
+        return header in self.headers
 
     def getMessage(self):
         """ return the message - not including headers """
@@ -583,7 +583,7 @@
         Fire the callback for the given id
         if one exists and return 1, else return false
         """
-        if self.ids.has_key(id):
+        if id in self.ids:
             self.ids[id][0].callback(args)
             del self.ids[id]
             return 1

=== modified file 'twisted/words/protocols/oscar.py'
--- a/twisted/words/protocols/oscar.py	2008-11-19 18:56:50 +0000
+++ b/twisted/words/protocols/oscar.py	2009-11-14 12:19:22 +0000
@@ -183,7 +183,7 @@
         #self.userIDs = []
         self.usersToID = {}
         self.users = []
-        #if not tlvs.has_key(0xC8): return
+        #if 0xC8 not in tlvs: return
         #buddyIDs = tlvs[0xC8]
         #while buddyIDs:
         #    bid = struct.unpack('!H',buddyIDs[:2])[0]
@@ -349,7 +349,7 @@
 
     def oscar_Data(self,data):
         snac=readSNAC(data[1])
-        if self.requestCallbacks.has_key(snac[4]):
+        if snac[4] in self.requestCallbacks:
             d = self.requestCallbacks[snac[4]]
             del self.requestCallbacks[snac[4]]
             if snac[1]!=1:
@@ -374,7 +374,7 @@
         self.supportedFamilies = struct.unpack("!"+str(numFamilies)+'H', snac[3])
         d = ''
         for fam in self.supportedFamilies:
-            if self.snacFamilies.has_key(fam):
+            if fam in self.snacFamilies:
                 d=d+struct.pack('!2H',fam,self.snacFamilies[fam][0])
         self.sendSNACnr(0x01,0x17, d)
 
@@ -397,7 +397,7 @@
         """
         d = ''
         for fam in self.supportedFamilies:
-            if self.snacFamilies.has_key(fam):
+            if fam in self.snacFamilies:
                 version, toolID, toolVersion = self.snacFamilies[fam]
                 d = d + struct.pack('!4H',fam,version,toolID,toolVersion)
         self.sendSNACnr(0x01,0x02,d)
@@ -592,14 +592,14 @@
                 exchange = struct.unpack('!H',moreTLVs[10001][:2])[0]
                 name = moreTLVs[10001][3:-2]
                 instance = struct.unpack('!H',moreTLVs[10001][-2:])[0]
-                if not self.services.has_key(SERVICE_CHATNAV):
+                if SERVICE_CHATNAV not in self.services:
                     self.connectService(SERVICE_CHATNAV,1).addCallback(lambda x: self.services[SERVICE_CHATNAV].getChatInfo(exchange, name, instance).\
                         addCallback(self._cbGetChatInfoForInvite, user, moreTLVs[12]))
                 else:
                     self.services[SERVICE_CHATNAV].getChatInfo(exchange, name, instance).\
                         addCallback(self._cbGetChatInfoForInvite, user, moreTLVs[12])
             elif requestClass == CAP_SEND_FILE:
-                if moreTLVs.has_key(11): # cancel
+                if 11 in moreTLVs: # cancel
                     log.msg('cancelled file request')
                     log.msg(status)
                     return # handle this later
@@ -692,14 +692,14 @@
                 groups[groupID].addUser(buddyID, SSIBuddy(name, tlvs))
             elif itemType == 1: # group
                 g = SSIGroup(name, tlvs)
-                if groups.has_key(0): groups[0].addUser(groupID, g)
+                if 0 in groups: groups[0].addUser(groupID, g)
                 groups[groupID] = g
             elif itemType == 2: # permit
                 permit.append(name)
             elif itemType == 3: # deny
                 deny.append(name)
             elif itemType == 4: # permit deny info
-                if not tlvs.has_key(0xcb):
+                if not 0xcb in tlvs:
                     continue # this happens with ICQ
                 permitMode = {1:'permitall',2:'denyall',3:'permitsome',4:'denysome',5:'permitbuddies'}[ord(tlvs[0xca])]
                 visibility = {'\xff\xff\xff\xff':'all','\x00\x00\x00\x04':'notaim'}[tlvs[0xcb]]
@@ -861,7 +861,7 @@
         """
         create a chat room
         """
-        if self.services.has_key(SERVICE_CHATNAV):
+        if SERVICE_CHATNAV in self.services:
             return self.services[SERVICE_CHATNAV].createChat(shortName)
         else:
             return self.connectService(SERVICE_CHATNAV,1).addCallback(lambda s: s.createChat(shortName))
@@ -1168,7 +1168,7 @@
             i=snac[5].find("\000")
             snac[5]=snac[5][i:]
         tlvs=readTLVs(snac[5])
-        if tlvs.has_key(6):
+        if 6 in tlvs:
             self.cookie=tlvs[6]
             server,port=string.split(tlvs[5],":")
             d = self.connectToBOS(server, int(port))
@@ -1176,7 +1176,7 @@
             if self.deferred:
                 d.chainDeferred(self.deferred)
             self.disconnect()
-        elif tlvs.has_key(8):
+        elif 8 in tlvs:
             errorcode=tlvs[8]
             errorurl=tlvs[4]
             if errorcode=='\000\030':

=== modified file 'twisted/words/protocols/toc.py'
--- a/twisted/words/protocols/toc.py	2009-01-05 17:13:00 +0000
+++ b/twisted/words/protocols/toc.py	2009-11-14 12:19:22 +0000
@@ -406,7 +406,7 @@
             user=""
         else:
             user=self.saved.nick
-        if not(self.factory.users.has_key(username)):
+        if username not in self.factory.users:
             self.sendError(CANT_WARN,username)
             return
         if self.factory.users[username].saved.evilness>=100:
@@ -456,7 +456,7 @@
             auto=1
             data=data[:-5]
         data=unquote(data)
-        if not(self.factory.users.has_key(username)):
+        if username not in self.factory.users:
             self.sendError(NOT_AVAILABLE,username)
             return
         user=self.factory.users[username]
@@ -576,7 +576,7 @@
 
         toc_get_info <username>
         """
-        if not self.factory.users.has_key(data):
+        if data not in self.factory.users:
             self.sendError(901,data)
             return
         self.sendFlap(2,"GOTO_URL:TIC:info/%s"%data)
@@ -651,7 +651,7 @@
         """
         if not self.canContact(user): return
         status=user.getStatus(self)
-        if not self._laststatus.has_key(user):
+        if user not in self._laststatus:
             self._laststatus[user]=()
         if self._laststatus[user]!=status:
             send="UPDATE_BUDDY:%s:%s:%s:%s:%s:%s"%status
@@ -878,7 +878,7 @@
             self._debug("bad SNAC:%s"%(flap[1]))
             return
         command,rest=string.split(flap[1],":",1)
-        if MAXARGS.has_key(command):
+        if command in MAXARGS:
             maxsplit=MAXARGS[command]
         else:
             maxsplit=-1
@@ -1078,7 +1078,7 @@
         func(user,cookie,seq,pip,vip,port,tlvs)
 
     def tocSEND_FILE(self,user,cookie,seq,pip,vip,port,tlvs):
-        if tlvs.has_key('12'):
+        if 12 in tlvs:
             description=tlvs['12']
         else:
             description=""

=== modified file 'twisted/words/service.py'
--- a/twisted/words/service.py	2009-02-23 00:11:16 +0000
+++ b/twisted/words/service.py	2009-11-14 12:19:22 +0000
@@ -213,9 +213,9 @@
 
     # Make sendMessage a bit more useful to us
     def sendMessage(self, command, *parameter_list, **kw):
-        if not kw.has_key('prefix'):
+        if 'prefix' not in kw:
             kw['prefix'] = self.hostname
-        if not kw.has_key('to'):
+        if 'to' not in kw:
             kw['to'] = self.name.encode(self.encoding)
 
         arglist = [self, command, kw['to']] + list(parameter_list)

=== modified file 'twisted/words/xish/domish.py'
--- a/twisted/words/xish/domish.py	2008-10-29 19:17:26 +0000
+++ b/twisted/words/xish/domish.py	2009-11-14 12:19:22 +0000
@@ -44,7 +44,7 @@
         return u"".join(self.writelist)
 
     def getPrefix(self, uri):
-        if not self.prefixes.has_key(uri):
+        if uri not in self.prefixes:
             self.prefixes[uri] = "xn%d" % (self.prefixCounter)
             self.prefixCounter = self.prefixCounter + 1
         return self.prefixes[uri]
@@ -453,7 +453,7 @@
 
     def hasAttribute(self, attrib):
         """ Determine if the specified attribute exists """
-        return self.attributes.has_key(self._dqa(attrib))
+        return self._dqa(attrib) in self.attributes
 
     def compareAttribute(self, attrib, value):
         """ Safely compare the value of an attribute against a provided value.

