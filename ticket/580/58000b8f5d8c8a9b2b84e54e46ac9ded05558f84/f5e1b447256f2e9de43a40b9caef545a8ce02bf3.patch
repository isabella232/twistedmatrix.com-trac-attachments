==== Patch <static-data-content-type> level 2
Source: e3c0e7b8-6901-0410-b62d-a6081d6f05f7:/branches/twisted-static-data:20564
Target: bbbe8e31-12d6-0310-92fd-ac37d47ddeeb:/trunk:17716
        (svn://svn.twistedmatrix.com/svn/Twisted)
Log:
 r20561@andi-lap:  andreas | 2006-07-28 15:39:47 +0200
 Fix content-type bug for static.Data.
 r20562@andi-lap:  andreas | 2006-07-28 17:16:46 +0200
 fixed static.Data Content-Type header
 r20564@andi-lap:  andreas | 2006-07-28 20:43:31 +0200
 refactored unit test

=== twisted/web2/test/test_static.py
==================================================================
--- twisted/web2/test/test_static.py	(revision 17716)
+++ twisted/web2/test/test_static.py	(patch static-data-content-type level 2)
@@ -7,19 +7,32 @@
 from twisted.web2 import iweb
 
 class TestData(BaseCase):
-    def test_data(self):
-        text = "Hello, World\n"
-        data = static.Data(text, "text/plain")
+    def setUp(self):
+        self.text = "Hello, World\n"
+        self.data = static.Data(self.text, "text/plain")
+    def test_data_state(self):
+        "test the internal state of the Data object"
+        self.assert_(hasattr(self.data, "created_time"))
+        self.assertEquals(self.data.data, self.text)
+        self.assertEquals(self.data.type, http_headers.MimeType("text", "plain"))
+        self.assertEquals(self.data.contentType(), http_headers.MimeType("text", "plain"))
 
-        self.assertEquals(data.data, text)
-        self.assertEquals(data.type, http_headers.MimeType("text", "plain"))
-        self.assertEquals(data.contentType(), http_headers.MimeType("text", "plain"))
-        self.failUnless(data.etag())
+    def test_etag(self):
+        "test that we can get an ETag"
+        self.failUnless(self.data.etag())
 
+    def test_render(self):
+        "test that the result from Data.render is acceptable"
+        response = iweb.IResponse(self.data.render(None))
+        self.assertEqual(response.code, 200)
+        self.assert_(response.headers.hasHeader("content-type"))
+        self.assertEqual(response.headers.getHeader("content-type"),
+                         http_headers.MimeType("text", "plain"))
         def checkStream(data):
-            self.assertEquals(str(data), text)
+            self.assertEquals(str(data), self.text)
 
-        return stream.readStream(iweb.IResponse(data.render(None)).stream, checkStream)
+        return stream.readStream(iweb.IResponse(self.data.render(None)).stream,
+                                 checkStream)
 
 class TestFileSaver(BaseCase):
     def setUpClass(self):
=== twisted/web2/static.py
==================================================================
--- twisted/web2/static.py	(revision 17716)
+++ twisted/web2/static.py	(patch static-data-content-type level 2)
@@ -149,7 +149,7 @@
         return self.type
 
     def render(self, req):
-        return http.Response(responsecode.OK, stream=self.data)
+        return http.Response(responsecode.OK, http_headers.Headers({'content-type':self.contentType()}), stream=self.data)
 
 class File(StaticRenderMixin):
     """

==== BEGIN SVK PATCH BLOCK ====
Version: svk 1.07 (linux)

eJyNlstu4zYUhr3OsttuCEODsdvIFqm7ihoGphlkehkUTdJuChiUeBSro0gaic4FVYsJ0KJ9gll0
VWDQh+hz9QV6RMuOnDiOhSCWRJ7vP+cnRfJlefrZlNaTiVFr1KhPvv8qCL7lMpo/o1atOTWIROal
ZtcpXEKqmXWan2tWnfELwNYqX5RRcyN5eQ6yuUmiNyAnE4o4b4k7UogVVlFDLvOs0nyFn8kSQKO1
M3Xrqdn8zTTq1xVgi8LOSrhMqiTPMA1m2I6FXbA/xfi8gGxW5rlcNtn+lDXRRh2leQWzBo9vpnbT
n2lYkgoQSQkR5nSjubW8SioJQvFWDJWB3TLuOmOXNczcAqNsRRtfQciU5JNI1pSskNY2pLuBHEuo
pFJfcVWks3IiTlLQ2GYa40pyHJVRcbMR+GhC5rpGewNrsoepqH+zroD1tIC1FFCtvCjSm5mEaykg
lVyJopDrU+b5kRO5nuVbzAFhAvVC6lERxyz0NEqZg7Prda/395f/XHz053HvFnrv/vi69+o3/13d
++vq9xOcP2fFoII0HgYHpL2ax1EjRz4n/WNI0/yQ/JCXqfgx6292Elxy7NTW9gU+DdbBh6Tf/IyL
lCdZf6gCBcREudEEKkvgvni/aSdyDiTJJJQZTxUeSB6rt40IycOf0Kl7yfCqglLOBnNecSnLwTpD
zCQqARliJpML6A+H2wKP3i54Wt1FtaHrevYLkjcFHJK5lMVsDlxAWY2+Qc1TfD1QfvQxm9aS/YhR
jj5kUhGG+6M3/QbJzx9zmktyBSTiGcFlhODP0Sk/v+dtzJP0LEuh6mamoA+kSsgwtx1izSiWUC1S
SeIyv1AjOlpGkaQiPIqgkDxM4S4H7F7gWgg41xL8rkavvmtfdLJpdV/nGexwdrBCoa8CR4oZxtbO
s7uOK7NxXh2r20G/HRO9Ge1d4/gQghZvhxyuIQ+uPYe8M1M7xslFmeEXhPP/Ai3i4kTdDvazcbQM
3JFbe02t7o6ilsJ2lQqjiEa2gIhx5jNKI5/GYLOYW4Ka3Iad65zTEBwHlzjheY7PIi+2Q9uwLMqo
6zkeN5kbap6xXOVu37+4ff/rgd/78Env395/H38YbDi39L0a/Py86/zzQNW+8ZX9Mtxaj8rG417k
R6HrOiYDEHZIeRwC4zEwi8fUUxsac+yalM02TKc8E4me8iIg+G0JtLMidTPtHN1wdeYRagemH1gu
+dTAtwfkZXJNugmScHFO4rzsrrKjgyWdPU13A+oElrOix8k1iC6KvGi1mtLJ0quWbj1JZ0ZgmYFJ
V/QSYt7sYCixyBKpFoQDjVn1UlBvZpjeLW4yYXWzF6sz0Kk6yATBWZZc4kDx9JlT4zGq4HKOZyo8
3+DDYpEIjfn1OCx5Fs2hGrf7rd6RWB2BNBPPZmZkgBt6uuMbVDcsauihw4TOHQM3Sic27NidDFn9
mJZTj2W5yN4gk7oudRpmGIbggUl1ygRaYSLTZzEyI9MVlisEQKi5bC/tYGclgarjf0QcVNk=
==== END SVK PATCH BLOCK ====
