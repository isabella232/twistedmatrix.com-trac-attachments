Index: twisted/conch/test/test_cftp.py
===================================================================
--- twisted/conch/test/test_cftp.py	(revision 18270)
+++ twisted/conch/test/test_cftp.py	(working copy)
@@ -364,48 +364,57 @@
         log.msg('running %s %s' % (sys.executable, cmds))
         env = os.environ.copy()
         env['PYTHONPATH'] = os.pathsep.join(sys.path)
+
+        self.server.factory.expectedLoseConnection = 1
         d = getProcessOutputAndValue(sys.executable, cmds, env=env)
-        d.setTimeout(10)
-        d.addBoth(l.append)
-        while not l:
-            if hasattr(self.server.factory, 'proto'):
-                self.server.factory.proto.expectedLoseConnection = 1
-            reactor.iterate(0.1)
-        os.remove(fn)
-        result = l[0]
-        if isinstance(result, failure.Failure):
-            raise result.value
-        else:
-            log.msg(result[1])
-            return result[0]
+        def cleanup(res):
+            os.remove(fn)
+            return res[0]
+        d.addBoth(cleanup)
+        return d
 
+
     def testBatchFile(self):
         cmds = """pwd
 ls
 exit
 """
-        res = self._getBatchOutput(cmds).split('\n')
-        log.msg('RES %s' % str(res))
-        self.failUnless(res[1].find(self.testDir) != -1, repr(res))
-        self.failUnlessEqual(res[3:-2], ['testDirectory', 'testRemoveFile', 'testRenameFile', 'testfile1'])
 
+        def _cbCheckRes(res):
+            res = res.split('\n')
+            log.msg('RES %s' % str(res))
+            self.failUnless(res[1].find(self.testDir) != -1, repr(res))
+            self.failUnlessEqual(res[3:-2], ['testDirectory', 
+                                             'testRemoveFile', 
+                                             'testRenameFile', 
+                                             'testfile1'])
+            
+        d = self._getBatchOutput(cmds)
+        return d
+
     def testError(self):
         cmds = """chown 0 missingFile
 pwd
 exit
 """
-        res = self._getBatchOutput(cmds)
-        self.failIf(res.find(self.testDir) != -1)
+        def _cbCheckRes(res):
+            self.failIf(res.find(self.testDir) != -1)
 
+        d = self._getBatchOutput(cmds)
+        return d
+
     def testIgnoredError(self):
         cmds = """-chown 0 missingFile
 pwd
 exit
 """
-        res = self._getBatchOutput(cmds)
-        self.failIf(res.find(self.testDir) == -1)
+        def _cbCheckRes(res):
+            self.failIf(res.find(self.testDir) == -1)
 
+        d = self._getBatchOutput(cmds)
+        return d
 
+
 class TestOurServerUnixClient(test_process.SignalMixin, CFTPClientTestBase):
     def setUpClass(self):
         if hasattr(self, 'skip'):
@@ -457,8 +466,7 @@
         log.msg('running %s %s' % (sys.executable, cmds))
         env = os.environ.copy()
         env['PYTHONPATH'] = os.pathsep.join(sys.path)
-        if hasattr(self.server.factory, 'proto'):
-            self.server.factory.proto.expectedLoseConnection = 1
+        self.server.factory.expectedLoseConnection = 1
         d = getProcessOutputAndValue(sys.executable, cmds, env=env)
         def cleanup(res):
             os.remove(fn)
Index: twisted/conch/test/test_ssh.py
===================================================================
--- twisted/conch/test/test_ssh.py	(revision 18270)
+++ twisted/conch/test/test_ssh.py	(working copy)
@@ -290,6 +290,8 @@
             proto = ConchTestServer()
             proto.supportedPublicKeys = self.privateKeys.keys()
             proto.factory = self
+            if hasattr(self, 'expectedLoseConnection'):
+                proto.expectedLoseConnection = 1
             self.proto = proto
             return proto
 
