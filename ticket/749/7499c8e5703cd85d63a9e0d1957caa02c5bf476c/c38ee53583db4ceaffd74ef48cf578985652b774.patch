diff --git a/twisted/python/test/test_util.py b/twisted/python/test/test_util.py
index e36ef2b..89b0279 100644
--- a/twisted/python/test/test_util.py
+++ b/twisted/python/test/test_util.py
@@ -913,6 +913,43 @@ class SlowStringCompareTests(unittest.TestCase):
                 'Passing unicode strings to slowStringCompare is deprecated '
                 'since Twisted 10.2')
 
+        def _comparePy24(s1, s2):
+            # When Python 2.4 cannot decode the non-unicode side of a string
+            # comparion, it raises UnicodeDecodeError instead of giving a
+            # UnicodeWarning and returning False.
+            eqRaisedUDE = False
+            try:
+                expected = s1 == s2
+            except UnicodeDecodeError:
+                expected = False
+                eqRaisedUDE = True
+
+            ws = self.flushWarnings()
+            self.assertEquals([], ws)
+
+            compareRaisedUDE = False
+            try:
+                result = util.slowStringCompare(s1, s2)
+            except UnicodeDecodeError:
+                result = False
+                compareRaisedUDE = True
+
+            self.assertEquals(result, expected)
+            # If == raised a UnicodeDecodeError, slowStringCompare
+            # should have also raised UnicodeDecodeError.
+            self.assertEquals(compareRaisedUDE, eqRaisedUDE)
+
+            [w] = self.flushWarnings(
+                [SlowStringCompareTests.test_unicodeComparison])
+            self.assertEquals(w['category'], DeprecationWarning)
+            self.assertEquals(
+                w['message'],
+                'Passing unicode strings to slowStringCompare is deprecated '
+                'since Twisted 10.2')
+
+        if sys.version_info < (2, 5):
+            _compare = _comparePy24
+
         _compare(u'test', 'test')
         _compare('test', u'test')
         _compare(u'test', u'test')
diff --git a/twisted/python/util.py b/twisted/python/util.py
index 0e9cc12..e15ef89 100644
--- a/twisted/python/util.py
+++ b/twisted/python/util.py
@@ -1001,11 +1001,19 @@ def slowStringCompare(s1, s2):
         try:
             s2 = unicode(s2)
         except UnicodeDecodeError:
+            if sys.version_info < (2, 5):
+                # When Python 2.4 cannot decode the non-unicode side of a
+                # string comparion, it raises UnicodeDecodeError instead of
+                # giving a UnicodeWarning and returning False.  Match this
+                # behavior and re-raise the exception.
+                raise
             return False
     elif not isinstance(s1, unicode) and isinstance(s2, unicode):
         try:
             s1 = unicode(s1)
         except UnicodeDecodeError:
+            if sys.version_info < (2, 5):
+                raise
             return False
 
     if len(s1) != len(s2):
