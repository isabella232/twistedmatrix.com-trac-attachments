Index: doc/core/howto/listings/TwistedQuotes/quoteproto.py
===================================================================
--- doc/core/howto/listings/TwistedQuotes/quoteproto.py	(revision 23925)
+++ doc/core/howto/listings/TwistedQuotes/quoteproto.py	(working copy)
@@ -1,13 +1,35 @@
+from zope.interface import Interface
+
 from twisted.internet.protocol import Factory, Protocol
 
+
+
+class IQuoter(Interface):
+    """
+    An object that returns quotes.
+    """
+    def getQuote():
+        """
+        Return a quote.
+        """
+
+
+
 class QOTD(Protocol):
-
     def connectionMade(self):
         self.transport.write(self.factory.quoter.getQuote()+'\r\n')
         self.transport.loseConnection()
 
+
+
 class QOTDFactory(Factory):
+    """
+    A factory for the Quote of the Day protocol.
 
+    @type quoter: L{IQuoter} provider
+    @ivar quoter: An object which provides L{IQuoter} which will be used by
+        the L{QOTD} protocol to get quotes to emit.
+    """
     protocol = QOTD
 
     def __init__(self, quoter):
Index: doc/core/howto/listings/TwistedQuotes/quoters.py
===================================================================
--- doc/core/howto/listings/TwistedQuotes/quoters.py	(revision 23925)
+++ doc/core/howto/listings/TwistedQuotes/quoters.py	(working copy)
@@ -1,34 +1,39 @@
-from zope.interface import Interface, implements
-
 from random import choice
 
+from zope.interface import implements
 
-class IQuoter(Interface):
-    """An object that returns quotes."""
-    
-    def getQuote():
-        """Return a quote."""
+from TwistedQuotes import quoteproto
 
 
+
 class StaticQuoter:
-    """Return a static quote."""
-    
-    implements(IQuoter)
-    
+    """
+    Return a static quote.
+    """
+
+    implements(quoteproto.IQuoter)
+
     def __init__(self, quote):
         self.quote = quote
-    
+
+
     def getQuote(self):
         return self.quote
 
 
+
 class FortuneQuoter:
-    """Load quotes from a fortune-format file."""
-    
-    implements(IQuoter)
-    
+    """
+    Load quotes from a fortune-format file.
+    """
+    implements(quoteproto.IQuoter)
+
     def __init__(self, filenames):
         self.filenames = filenames
 
+
     def getQuote(self):
-        return choice(open(choice(self.filenames)).read().split('\n%\n'))
+        quoteFile = file(choice(self.filenames))
+        quotes = quoteFile.read().split('\n%\n')
+        quoteFile.close()
+        return choice(quotes)
