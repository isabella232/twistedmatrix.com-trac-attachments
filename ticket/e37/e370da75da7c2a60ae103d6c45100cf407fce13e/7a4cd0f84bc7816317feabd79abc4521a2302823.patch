Index: twisted/web/test/test_newclient.py
===================================================================
--- twisted/web/test/test_newclient.py	(revision 39591)
+++ twisted/web/test/test_newclient.py	(working copy)
@@ -456,6 +456,19 @@
         header = self._noBodyTest(request, status)
         self.assertEqual(header, {'Content-Length': '10'})
 
+    def test_connectResponse(self):
+        """
+        If the response is to a CONNECT request, no body is expected, the body
+        callback is not invoked, and any returned headers should be passed to
+        the header callback.
+        """
+        request = Request('CONNECT', 'example.com:80', _boringHeaders, None)
+        status = (
+            'HTTP/1.1 200 Connection Established\r\n'
+            'Proxy-Agent: Twisted Unit Tests\r\n'
+            '\r\n')
+        header = self._noBodyTest(request, status)
+        self.assertEqual(header, {'Proxy-Agent': 'Twisted Unit Tests'})
 
     def test_noContentResponse(self):
         """
Index: twisted/web/topfiles/6679.misc
===================================================================
--- twisted/web/topfiles/6679.misc	(revision 0)
+++ twisted/web/topfiles/6679.misc	(revision 0)
@@ -0,0 +1 @@
+Make HTTPClientParser (and therefore HTTP11ClientProtocol) handle 'CONNECT' responses correctly
Index: twisted/web/_newclient.py
===================================================================
--- twisted/web/_newclient.py	(revision 39591)
+++ twisted/web/_newclient.py	(working copy)
@@ -438,11 +438,15 @@
 
     def isConnectionControlHeader(self, name):
         """
-        Content-Length in the response to a HEAD request is an entity header,
-        not a connection control header.
+        Content-Length in the response to a HEAD request is an entity
+        header, not a connection control header. Also, any header in
+        the response to a CONNECT request should not be treated as a
+        connection control header.
         """
         if self.request.method == 'HEAD' and name == 'content-length':
             return False
+        elif self.request.method == 'CONNECT':
+            return False
         return HTTPParser.isConnectionControlHeader(self, name)
 
 
@@ -452,7 +456,7 @@
         headers and stuff.
         """
         if (self.response.code in self.NO_BODY_CODES
-            or self.request.method == 'HEAD'):
+            or self.request.method in ('HEAD', 'CONNECT')):
             self.response.length = 0
             self._finished(self.clearLineBuffer())
         else:
