Index: twisted/mail/test/test_options.py
===================================================================
--- twisted/mail/test/test_options.py	(revision 34957)
+++ twisted/mail/test/test_options.py	(working copy)
@@ -28,12 +28,11 @@
     """
     def setUp(self):
         self.aliasFilename = self.mktemp()
-        aliasFile = file(self.aliasFilename, 'w')
-        aliasFile.write('someuser:\tdifferentuser\n')
-        aliasFile.close()
+        with open(self.aliasFilename, 'w') as aliasFile:
+            aliasFile.write('someuser:\tdifferentuser\n')
 
 
-    def testAliasesWithoutDomain(self):
+    def test_aliasesWithoutDomain(self):
         """
         Test that adding an aliases(5) file before adding a domain raises a
         UsageError.
@@ -44,7 +43,7 @@
             ['--aliases', self.aliasFilename])
 
 
-    def testAliases(self):
+    def test_aliases(self):
         """
         Test that adding an aliases(5) file to an IAliasableDomain at least
         doesn't raise an unhandled exception.
Index: twisted/mail/test/test_mail.py
===================================================================
--- twisted/mail/test/test_mail.py	(revision 34957)
+++ twisted/mail/test/test_mail.py	(working copy)
@@ -162,11 +162,13 @@
         self.domain.addUser("bob", "password")
         self.assertRaises(smtp.SMTPBadRcpt, self.domain.exists, "bob")
 
+
+
 class FileMessageTestCase(unittest.TestCase):
     def setUp(self):
         self.name = "fileMessage.testFile"
         self.final = "final.fileMessage.testFile"
-        self.f = file(self.name, 'w')
+        self.f = open(self.name, 'w')
         self.fp = mail.mail.FileMessage(self.f, self.name, self.final)
 
     def tearDown(self):
@@ -206,6 +208,8 @@
         self.failIf(os.path.exists(self.name))
         self.failIf(os.path.exists(self.final))
 
+
+
 class MailServiceTestCase(unittest.TestCase):
     def setUp(self):
         self.service = mail.mail.MailService()
@@ -537,9 +541,8 @@
         # Toss a few files into the mailbox
         i = 1
         for f in msgs:
-            fObj = file(j(self.d, f), 'w')
-            fObj.write('x' * i)
-            fObj.close()
+            with open(j(self.d, f), 'w') as fObj:
+                fObj.write('x' * i)
             i = i + 1
 
         mb = mail.maildir.MaildirMailbox(self.d)
@@ -846,6 +849,8 @@
 
             self.assertRaises(smtp.SMTPBadRcpt, domain.exists, user)
 
+
+
 class RelayerTestCase(unittest.TestCase):
     def setUp(self):
         self.tmpdir = self.mktemp()
@@ -853,11 +858,10 @@
         self.messageFiles = []
         for i in range(10):
             name = os.path.join(self.tmpdir, 'body-%d' % (i,))
-            f = file(name + '-H', 'w')
-            pickle.dump(['from-%d' % (i,), 'to-%d' % (i,)], f)
-            f.close()
+            with open(name + '-H', 'w') as f:
+                pickle.dump(['from-%d' % (i,), 'to-%d' % (i,)], f)
 
-            f = file(name + '-D', 'w')
+            f = open(name + '-D', 'w')
             f.write(name)
             f.seek(0, 0)
             self.messageFiles.append(name)
@@ -1690,7 +1694,7 @@
         return m.eomReceived().addCallback(self._cbTestFileAlias, tmpfile)
 
     def _cbTestFileAlias(self, ignored, tmpfile):
-        lines = file(tmpfile).readlines()
+        lines = open(tmpfile).readlines()
         self.assertEqual([L[:-1] for L in lines], self.lines)
 
 
@@ -1842,7 +1846,7 @@
             m.lineReceived(l)
 
         def _cbProcessAlias(ignored):
-            lines = file('process.alias.out').readlines()
+            lines = open('process.alias.out').readlines()
             self.assertEqual([L[:-1] for L in lines], self.lines)
 
         return m.eomReceived().addCallback(_cbProcessAlias)
Index: twisted/mail/test/test_imap.py
===================================================================
--- twisted/mail/test/test_imap.py	(revision 34957)
+++ twisted/mail/test/test_imap.py	(working copy)
@@ -1560,7 +1560,7 @@
         def login():
             return self.client.login('testuser', 'password-test')
         def append():
-            message = file(infile)
+            message = open(infile)
             return self.client.sendCommand(
                 imap4.Command(
                     'APPEND',
Index: twisted/mail/alias.py
===================================================================
--- twisted/mail/alias.py	(revision 34957)
+++ twisted/mail/alias.py	(working copy)
@@ -37,8 +37,10 @@
         user, alias = parts
         result.setdefault(user.strip(), []).extend(map(str.strip, alias.split(',')))
 
+
 def loadAliasFile(domains, filename=None, fp=None):
-    """Load a file containing email aliases.
+    """
+    Load a file containing email aliases.
 
     Lines in the file should be formatted like so::
 
@@ -67,7 +69,7 @@
     """
     result = {}
     if fp is None:
-        fp = file(filename)
+        fp = open(filename)
     else:
         filename = getattr(fp, 'name', '<unknown>')
     i = 0
@@ -152,7 +154,7 @@
     def eomReceived(self):
         self.fp.seek(0, 0)
         try:
-            f = file(self.finalname, 'a')
+            f = open(self.finalname, 'a')
         except:
             return defer.fail(failure.Failure())
 
@@ -400,7 +402,7 @@
             addr = items.pop().strip()
             if addr.startswith(':'):
                 try:
-                    f = file(addr[1:])
+                    f = open(addr[1:])
                 except:
                     log.err("Invalid filename in alias file %r" % (addr[1:],))
                 else:
