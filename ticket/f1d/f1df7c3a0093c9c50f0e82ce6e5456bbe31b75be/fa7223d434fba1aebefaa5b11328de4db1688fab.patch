Index: twisted/runner/portmap.c
===================================================================
--- twisted/runner/portmap.c	(revision 40714)
+++ twisted/runner/portmap.c	(working copy)
@@ -1,57 +0,0 @@
-/*
- * Copyright (c) 2001-2004 Twisted Matrix Laboratories.
- * See LICENSE for details.
-
- * 
- */
-
-/* portmap.c: A simple Python wrapper for pmap_set(3) and pmap_unset(3) */
-
-#include <Python.h>
-#include <rpc/rpc.h>
-#include <rpc/pmap_clnt.h>
-
-static PyObject * portmap_set(PyObject *self, PyObject *args)
-{
-	unsigned long program, version;
-	int protocol;
-	unsigned short port;
-	
-	if (!PyArg_ParseTuple(args, "llih:set", 
-			      &program, &version, &protocol, &port))
-		return NULL;
-
-	pmap_unset(program, version);
-	pmap_set(program, version, protocol, port);
-	
-	Py_INCREF(Py_None);
-	return Py_None;
-}
-
-static PyObject * portmap_unset(PyObject *self, PyObject *args)
-{
-	unsigned long program, version;
-	
-	if (!PyArg_ParseTuple(args, "ll:unset",
-			      &program, &version))
-		return NULL;
-
-	pmap_unset(program, version);
-	
-	Py_INCREF(Py_None);
-	return Py_None;
-}
-
-static PyMethodDef PortmapMethods[] = {
-	{"set", portmap_set, METH_VARARGS, 
-	 "Set an entry in the portmapper."},
-	{"unset", portmap_unset, METH_VARARGS,
-	 "Unset an entry in the portmapper."},
-	{NULL, NULL, 0, NULL}
-};
-
-void initportmap(void)
-{
-	(void) Py_InitModule("portmap", PortmapMethods);
-}
-
Index: twisted/runner/topfiles/setup.py
===================================================================
--- twisted/runner/topfiles/setup.py	(revision 40714)
+++ twisted/runner/topfiles/setup.py	(working copy)
@@ -2,18 +2,12 @@
 # See LICENSE for details.
 
 try:
-    from twisted.python.dist import setup, ConditionalExtension as Extension
+    from twisted.python.dist import setup
 except ImportError:
     raise SystemExit("twisted.python.dist module not found.  Make sure you "
                      "have installed the Twisted core package before "
                      "attempting to install any other Twisted projects.")
 
-extensions = [
-    Extension("twisted.runner.portmap",
-              ["twisted/runner/portmap.c"],
-              condition=lambda builder: builder._check_header("rpc/rpc.h")),
-]
-
 if __name__ == '__main__':
     setup(
         twisted_subproject="runner",
@@ -30,6 +24,4 @@
 Twisted Runner contains code useful for persistent process management
 with Python and Twisted, and has an almost full replacement for inetd.
 """,
-        # build stuff
-        conditionalExtensions=extensions,
     )
Index: twisted/runner/portmap.py
===================================================================
--- twisted/runner/portmap.py	(revision 0)
+++ twisted/runner/portmap.py	(revision 0)
@@ -0,0 +1,35 @@
+# Copyright (c) Twisted Matrix Laboratories.
+# See LICENSE for details.
+
+"""
+A simple Python wrapper for pmap_set(3) and pmap_unset(3).
+"""
+
+__all__ = ["set", "unset"]
+
+import cffi
+
+source = """
+    typedef int bool_t;
+    bool_t pmap_set(unsigned long prognum, unsigned long versnum, unsigned int protocol, unsigned short port);
+    bool_t pmap_unset(unsigned long prognum, unsigned long versnum);
+"""
+
+_ffi = cffi.FFI()
+_ffi.cdef(source)
+_lib = _ffi.verify(source="#include <rpc/rpc.h>\n" + source)
+
+
+def set(program, version, protocol, port):
+    """
+    Set an entry in the portmapper.
+    """
+    return _lib.pmap_set(program, version, protocol, port)
+
+
+
+def unset(program, version):
+    """
+    Unset an entry in the portmapper.
+    """
+    return _lib.pmap_unset(program, version)
