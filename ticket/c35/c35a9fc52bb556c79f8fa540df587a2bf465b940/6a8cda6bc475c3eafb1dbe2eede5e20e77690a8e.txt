Index: ftp.py
===================================================================
RCS file: /cvs/Twisted/twisted/protocols/ftp.py,v
retrieving revision 1.90
diff -u -r1.90 ftp.py
--- ftp.py	19 Nov 2003 00:17:21 -0000	1.90
+++ ftp.py	19 Nov 2003 00:53:20 -0000
@@ -1140,6 +1140,12 @@
 
 import pwd, grp
 
+def _callWithDefault(default, _f, *_a, **_kw):
+    try:
+        return _f(*_a, **_kw)
+    except KeyError:
+        return default
+
 class FTPAnonymousShell(object):
     """"""
     __implements__ = (IFTPShell,)
@@ -1158,7 +1164,8 @@
 
         # TODO: self.user needs to be set to something!!!
         if self.user is None:
-            self.user = pwd.getpwuid(os.getuid())[0]
+            uid = os.getuid()
+            self.user = _callWithDefault([str(uid)], pwd.getpwuid, uid)[0]
 
             self.getUserUIDAndGID()
 
@@ -1264,7 +1271,6 @@
         @attention: this has only been tested on posix systems, I don't
             know at this point whether or not it will work on win32
         """
-        from stat import ST_MODE,ST_NLINK,ST_UID,ST_GID,ST_SIZE,ST_MTIME
         import pwd, grp, time
         cpath, spath = self.mapCPathToSPath(path)
         log.debug('cpath: %s,   spath:%s' % (cpath, spath))
@@ -1295,13 +1301,13 @@
                 pmask = lambda mode: ''.join([mode & (256 >> n) and 'rwx'[n % 3] or '-' for n in range(9)])
                 dtype = lambda mode: [fmt[i] for i in range(7) if (mode >> 12) & (1 << i)][0]
 
-                type = dtype(pstat[ST_MODE])
-                pmstr = pmask(pstat[ST_MODE])
-                nlinks = str(pstat[ST_NLINK])
-                owner = pwd.getpwuid(pstat[ST_UID])[0]
-                group = grp.getgrgid(pstat[ST_GID])[0]
-                size = str(pstat[ST_SIZE])
-                mtime = time.strftime('%b %d %I:%M', time.gmtime(pstat[ST_MTIME]))
+                type = dtype(pstat.st_mode)
+                pmstr = pmask(pstat.st_mode)
+                nlinks = str(pstat.st_nlink)
+                owner = _callWithDefault([str(pstat.st_uid)], pwd.getpwuid, pstat.st_uid)[0]
+                group = _callWithDefault([str(pstat.st_gid)], grp.getgrgid, pstat.st_gid)[0]
+                size = str(pstat.st_size)
+                mtime = time.strftime('%b %d %I:%M', time.gmtime(pstat.st_mtime))
                 name = os.path.split(item)[1]
                 unixpms = "%s%s" % (type,pmstr)
             except (OSError, KeyError), e:
