--- trunk/twisted/test/test_paths.py	2006-08-23 11:57:39.000000000 -0600
+++ branches/netloc-2093/twisted/test/test_paths.py	2006-09-15 22:37:28.000000000 -0600
@@ -425,3 +425,63 @@
         self.assertEquals(str(self.path.here()), 'http://example.com/foo/')
         self.assertEquals(str(self.path.child('').here()), 'http://example.com/foo/bar/')
 
+class URLPathAuthTestCase(unittest.TestCase):
+    def setUp(self):
+        self.path = urlpath.URLPath.fromString("http://alice:asecret@example.com/foo/bar?yes=no&no=yes#footer")
+
+    def testStringConversion(self):
+        self.assertEquals(str(self.path), "http://alice:asecret@example.com/foo/bar?yes=no&no=yes#footer")
+        
+    def testChildString(self):
+        self.assertEquals(str(self.path.child('hello')), "http://alice:asecret@example.com/foo/bar/hello")
+        self.assertEquals(str(self.path.child('hello').child('')), "http://alice:asecret@example.com/foo/bar/hello/")
+        
+    def testSiblingString(self):
+        self.assertEquals(str(self.path.sibling('baz')), 'http://alice:asecret@example.com/foo/baz')
+
+        # The sibling of http://example.com/foo/bar/
+        #     is http://example.comf/foo/bar/baz
+        # because really we are constructing a sibling of
+        # http://example.com/foo/bar/index.html
+        self.assertEquals(str(self.path.child('').sibling('baz')), 'http://alice:asecret@example.com/foo/bar/baz')
+        
+    def testParentString(self):
+        # parent should be equivalent to '..'
+        # 'foo' is the current directory, '/' is the parent directory
+        self.assertEquals(str(self.path.parent()), 'http://alice:asecret@example.com/')
+        self.assertEquals(str(self.path.child('').parent()), 'http://alice:asecret@example.com/foo/')
+        self.assertEquals(str(self.path.child('baz').parent()), 'http://alice:asecret@example.com/foo/')
+        self.assertEquals(str(self.path.parent().parent().parent().parent().parent()), 'http://alice:asecret@example.com/')
+
+    def testHereString(self):
+        # here should be equivalent to '.'
+        self.assertEquals(str(self.path.here()), 'http://alice:asecret@example.com/foo/')
+        self.assertEquals(str(self.path.child('').here()), 'http://alice:asecret@example.com/foo/bar/')
+
+    def testAuthString(self):
+        self.assertEquals(str(self.path.user), 'alice')
+        self.assertEquals(str(self.path.password), 'asecret')
+        self.assertEquals(str(self.path.host), 'example.com')
+        self.assertEquals(self.path.port, 0)
+
+class URLPathAuthPartialNoPassword(unittest.TestCase):
+    def setUp(self):
+        self.path = urlpath.URLPath.fromString("http://bob@example.com:8080")
+
+    def testAuthString(self):
+        self.assertEquals(str(self.path.user), 'bob')
+        self.assertEquals(str(self.path.password), '')
+        self.assertEquals(str(self.path.host), 'example.com')
+        self.assertEquals(self.path.port, 8080)
+
+
+class URLPathAuthPartialNoUser(unittest.TestCase):
+    def setUp(self):
+        # not really sure of a use case for this one, but oh well...
+        self.path = urlpath.URLPath.fromString("http://:asecret@example.com:8080")
+
+    def testAuthString(self):
+        self.assertEquals(str(self.path.user), '')
+        self.assertEquals(str(self.path.password), 'asecret')
+        self.assertEquals(str(self.path.host), 'example.com')
+        self.assertEquals(self.path.port, 8080)
