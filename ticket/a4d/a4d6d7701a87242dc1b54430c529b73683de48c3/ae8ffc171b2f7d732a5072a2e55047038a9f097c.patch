=== modified file 'twisted/python/filepath.py'
--- old/twisted/python/filepath.py	2011-07-01 22:37:45 +0000
+++ new/twisted/python/filepath.py	2012-03-13 06:20:31 +0000
@@ -875,18 +875,25 @@
                 return False
 
 
+    def _getStatMode(self):
+        """
+        @return: mode of the cached stat result or zero on error.
+        """
+        st = self.statinfo
+        if not st:
+            self.restat(False)
+            st = self.statinfo
+            if not st:
+                return 0
+        return st.st_mode
+
+
     def isdir(self):
         """
         @return: C{True} if this L{FilePath} refers to a directory, C{False}
             otherwise.
         """
-        st = self.statinfo
-        if not st:
-            self.restat(False)
-            st = self.statinfo
-            if not st:
-                return False
-        return S_ISDIR(st.st_mode)
+        return S_ISDIR(self._getStatMode())
 
 
     def isfile(self):
@@ -894,13 +901,7 @@
         @return: C{True} if this L{FilePath} points to a regular file (not a
             directory, socket, named pipe, etc), C{False} otherwise.
         """
-        st = self.statinfo
-        if not st:
-            self.restat(False)
-            st = self.statinfo
-            if not st:
-                return False
-        return S_ISREG(st.st_mode)
+        return S_ISREG(self._getStatMode())
 
 
     def isBlockDevice(self):
@@ -911,13 +912,7 @@
         @rtype: C{bool}
         @since: 11.1
         """
-        st = self.statinfo
-        if not st:
-            self.restat(False)
-            st = self.statinfo
-            if not st:
-                return False
-        return S_ISBLK(st.st_mode)
+        return S_ISBLK(self._getStatMode())
 
 
     def isSocket(self):
@@ -928,13 +923,7 @@
         @rtype: C{bool}
         @since: 11.1
         """
-        st = self.statinfo
-        if not st:
-            self.restat(False)
-            st = self.statinfo
-            if not st:
-                return False
-        return S_ISSOCK(st.st_mode)
+        return S_ISSOCK(self._getStatMode())
 
 
     def islink(self):

