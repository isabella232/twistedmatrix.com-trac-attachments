Index: twisted/internet/gtk2reactor.py
===================================================================
--- twisted/internet/gtk2reactor.py	(revision 16950)
+++ twisted/internet/gtk2reactor.py	(working copy)
@@ -221,44 +221,6 @@
         _simtag = gobject.timeout_add(int(timeout * 1010), self.simulate)
 
 
-class PortableGtkReactor(selectreactor.SelectReactor):
-    """Reactor that works on Windows.
-
-    input_add is not supported on GTK+ for Win32, apparently.
-    """
-
-    def crash(self):
-        import gtk
-        # mainquit is deprecated in newer versions
-        if hasattr(gtk, 'main_quit'):
-            gtk.main_quit()
-        else:
-            gtk.mainquit()
-
-    def run(self, installSignalHandlers=1):
-        import gtk
-        self.startRunning(installSignalHandlers=installSignalHandlers)
-        self.simulate()
-        # mainloop is deprecated in newer versions
-        if hasattr(gtk, 'main'):
-            gtk.main()
-        else:
-            gtk.mainloop()
-
-    def simulate(self):
-        """Run simulation loops and reschedule callbacks.
-        """
-        global _simtag
-        if _simtag is not None:
-            gobject.source_remove(_simtag)
-        self.iterate()
-        timeout = min(self.timeout(), 0.1)
-        if timeout is None:
-            timeout = 0.1
-        # grumble
-        _simtag = gobject.timeout_add(int(timeout * 1010), self.simulate)
-
-
 def install(useGtk=True):
     """Configure the twisted mainloop to be run inside the gtk mainloop.
 
@@ -269,14 +231,3 @@
     from twisted.internet.main import installReactor
     installReactor(reactor)
     return reactor
-
-def portableInstall(useGtk=True):
-    """Configure the twisted mainloop to be run inside the gtk mainloop.
-    """
-    reactor = PortableGtkReactor()
-    from twisted.internet.main import installReactor
-    installReactor(reactor)
-    return reactor
-
-if runtime.platform.getType() != 'posix':
-    install = portableInstall
