Index: twisted/python/urlpath.py
===================================================================
--- twisted/python/urlpath.py	(revision 27248)
+++ twisted/python/urlpath.py	(working copy)
@@ -54,20 +54,33 @@
                         '/'.join(newpathsegs),
                         query)
 
-    def sibling(self, path, keepQuery=0):
+    def sibling(self, path, keepQuery=False):
         l = self.pathList()
         l[-1] = path
         return self._pathMod(l, keepQuery)
 
-    def child(self, path, keepQuery=0):
+    def child(self, path, keepQuery=False):
+        """
+        Add a child segment to URL path part. 
+        
+        @param path: path segment to add. The path argument should not be quoted.
+        @type path: C{str}
+        @param keepQuery: if set to True, will keep the query part of URL, 
+                          else (and by default) will strip query part.
+        @type keepQuery: C{bool}
+        @return: A new L{URLPath} object with path appended to current object
+        @rtype: L{URLPath}
+        """
+        #Clean up path with urlescaped version
+        fixedPath = urllib.quote(path,'')
         l = self.pathList()
         if l[-1] == '':
-            l[-1] = path
+            l[-1] = fixedPath
         else:
-            l.append(path)
+            l.append(fixedPath)
         return self._pathMod(l, keepQuery)
 
-    def parent(self, keepQuery=0):
+    def parent(self, keepQuery=False):
         l = self.pathList()
         if l[-1] == '':
             del l[-2]
@@ -78,7 +91,7 @@
             l[-1] = ''
         return self._pathMod(l, keepQuery)
 
-    def here(self, keepQuery=0):
+    def here(self, keepQuery=False):
         l = self.pathList()
         if l[-1] != '':
             l[-1] = ''
Index: twisted/test/test_paths.py
===================================================================
--- twisted/test/test_paths.py	(revision 27248)
+++ twisted/test/test_paths.py	(working copy)
@@ -831,4 +831,13 @@
         # here should be equivalent to '.'
         self.assertEquals(str(self.path.here()), 'http://example.com/foo/')
         self.assertEquals(str(self.path.child('').here()), 'http://example.com/foo/bar/')
+        
+    def test_childQuotes(self):
+        """ 
+        This test checks if child path with spaces and slashes is handled in least surprising way:
+        properly escaped and result in single segment path amendment.
+        """ 
+        #child() with quotes (",') and slashes  should be properly escaped
+        self.assertEquals(str(self.path.child("hello/ there")), 'http://example.com/foo/bar/hello%2F%20there')
+
 
