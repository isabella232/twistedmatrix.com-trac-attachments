Index: twisted/conch/test/test_insults.py
===================================================================
--- twisted/conch/test/test_insults.py	(revision 29204)
+++ twisted/conch/test/test_insults.py	(working copy)
@@ -1,5 +1,5 @@
 # -*- test-case-name: twisted.conch.test.test_insults -*-
-# Copyright (c) 2001-2004 Twisted Matrix Laboratories.
+# Copyright (c) 2001-2010 Twisted Matrix Laboratories.
 # See LICENSE for details.
 
 from twisted.trial import unittest
@@ -458,3 +458,33 @@
         protocol.makeConnection(transport)
         protocol.nextLine()
         self.assertEqual(transport.value(), "\r\n")
+
+
+
+class Deprecations(unittest.TestCase):
+    """
+    Tests to ensure deprecation of L{colors} and {client}.
+    """
+
+    def test_colors(self):
+        """
+        Test deprecation of L{insults.colors}
+        """
+        from twisted.conch.insults import colors
+        warningsShown = self.flushWarnings()
+        # Because of the way imports from packages work, the deprecation is
+        # first emitted by an insults.colors(-like) access which raises an
+        # AttributeError. The access is then retried after colors.py has
+        # actually been loaded; the warning is emitted again, and this time the
+        # lookup succeeds and the import is complete. Normally this will
+        # probably be invisible, because duplicate warnings from the same
+        # location are suppressed by the reporting code, but trial goes out of
+        # its way to make sure every warning gets emitted.
+        # As a result, flushWarnings() produces 2 of the exact same warning.
+        self.assertTrue(len(warningsShown) >= 1)
+        for warning in warningsShown:
+            self.assertIdentical(warning['category'], DeprecationWarning)
+            self.assertEquals(
+                warning['message'],
+                "twisted.conch.insults.colors was deprecated in Twisted "
+                "10.1.0: Please use twisted.conch.insults.helper instead.")
Index: twisted/conch/insults/__init__.py
===================================================================
--- twisted/conch/insults/__init__.py	(revision 29204)
+++ twisted/conch/insults/__init__.py	(working copy)
@@ -2,3 +2,11 @@
 Insults: a replacement for Curses/S-Lang.
 
 Very basic at the moment."""
+
+from twisted.python import deprecate, versions
+
+deprecate.deprecatedModuleAttribute(
+    versions.Version("Twisted", 10, 1, 0),
+    "Please use twisted.conch.insults.helper instead.",
+    __name__, "colors")
+
