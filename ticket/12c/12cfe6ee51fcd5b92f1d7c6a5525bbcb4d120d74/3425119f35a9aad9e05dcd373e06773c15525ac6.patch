Index: twisted/test/test_protocols.py
===================================================================
--- twisted/test/test_protocols.py	(revision 27782)
+++ twisted/test/test_protocols.py	(working copy)
@@ -406,7 +406,38 @@
                     a.dataReceived(s)
             self.assertEquals(a.received, self.strings)
 
+    def test_sendNonStrings(self):
+        """
+        L{basic.NetstringReceiver.sendString} will send objects that are not
+        strings by sending their string representation according to str().
+        """
+        nonStrings = [ [], { 1 : 'a', 2 : 'b' }, ['a', 'b', 'c'], 673,
+                       (12, "fine", "and", "you?") ]
+        a = TestNetstring()
+        t = proto_helpers.StringTransport()
+        a.MAX_LENGTH = 100
+        a.makeConnection(t)
+        for s in nonStrings:
+            a.sendString(s)
+            out = t.value()
+            t.clear()
+            length = out[:out.find(":")]
+            data = out[out.find(":") + 1:-1] #[:-1] to ignore the trailing ","
+            self.assertEquals(int(length), len(str(s)))
+            self.assertEquals(data, str(s))
 
+        warnings = self.flushWarnings(
+            offendingFunctions=[self.test_sendNonStrings])
+        self.assertEqual(len(warnings), 5)
+        self.assertEqual(
+            warnings[0]["message"],
+            "data passed to sendString() must be a string. Non-string support "
+            "is deprecated since Twisted 10.0")
+        self.assertEqual(
+            warnings[0]['category'],
+            DeprecationWarning)
+
+
 class IntNTestCaseMixin(LPTestCaseMixin):
     """
     TestCase mixin for int-prefixed protocols.
Index: twisted/protocols/basic.py
===================================================================
--- twisted/protocols/basic.py	(revision 27782)
+++ twisted/protocols/basic.py	(working copy)
@@ -1,5 +1,5 @@
 # -*- test-case-name: twisted.test.test_protocols -*-
-# Copyright (c) 2001-2008 Twisted Matrix Laboratories.
+# Copyright (c) 2001-2009 Twisted Matrix Laboratories.
 # See LICENSE for details.
 
 
@@ -12,6 +12,7 @@
 # System imports
 import re
 import struct
+import warnings
 
 from zope.interface import implements
 
@@ -107,6 +108,18 @@
             self.brokenPeer = 1
 
     def sendString(self, data):
+        """
+        A method for sending a Netstring. This method accepts a string and
+        writes it to the transport.
+
+        @type data: C{str}
+	"""
+        if not isinstance(data, str):
+            warnings.warn(
+                "data passed to sendString() must be a string. Non-string "
+                "support is deprecated since Twisted 10.0",
+                DeprecationWarning, 2)
+            data = str(data)
         self.transport.write('%d:%s,' % (len(data), data))
 
 
