diff --git docs/core/examples/echoclient.py docs/core/examples/echoclient.py
index 6bb6750..8abfb36 100644
--- docs/core/examples/echoclient.py
+++ docs/core/examples/echoclient.py
@@ -1,16 +1,15 @@
 #!/usr/bin/env python
-
 # Copyright (c) Twisted Matrix Laboratories.
 # See LICENSE for details.
 
-
 from twisted.internet.protocol import ClientFactory
+from twisted.internet.defer import Deferred
 from twisted.protocols.basic import LineReceiver
-from twisted.internet import reactor
-import sys
+
 
 class EchoClient(LineReceiver):
-    end="Bye-bye!"
+    end = "Bye-bye!"
+
     def connectionMade(self):
         self.sendLine("Hello, world!")
         self.sendLine("What a fine day it is.")
@@ -18,24 +17,28 @@ class EchoClient(LineReceiver):
 
     def lineReceived(self, line):
         print "receive:", line
-        if line==self.end:
+        if line == self.end:
             self.transport.loseConnection()
 
 class EchoClientFactory(ClientFactory):
     protocol = EchoClient
 
+    def __init__(self):
+        self.done = Deferred()
+
     def clientConnectionFailed(self, connector, reason):
         print 'connection failed:', reason.getErrorMessage()
-        reactor.stop()
+        self.done.errback(None)
 
     def clientConnectionLost(self, connector, reason):
         print 'connection lost:', reason.getErrorMessage()
-        reactor.stop()
+        self.done.callback(None)
 
-def main():
+def main(reactor):
     factory = EchoClientFactory()
     reactor.connectTCP('localhost', 8000, factory)
-    reactor.run()
+    return factory.done
 
 if __name__ == '__main__':
-    main()
+    from twisted.internet.task import react
+    react(main)
diff --git docs/core/examples/echoclient_ssl.py docs/core/examples/echoclient_ssl.py
index eb11405..cdb6526 100755
--- docs/core/examples/echoclient_ssl.py
+++ docs/core/examples/echoclient_ssl.py
@@ -2,44 +2,44 @@
 # Copyright (c) Twisted Matrix Laboratories.
 # See LICENSE for details.
 
-if __name__ == '__main__':
-    import echoclient_ssl
-    raise SystemExit(echoclient_ssl.main())
-
-import sys
-
 from twisted.internet.protocol import ClientFactory
 from twisted.protocols.basic import LineReceiver
-from twisted.internet import ssl, reactor
+from twisted.internet import ssl
+from twisted.internet.defer import Deferred
 
 
 class EchoClient(LineReceiver):
-    end="Bye-bye!"
+    end = "Bye-bye!"
+
     def connectionMade(self):
         self.sendLine("Hello, world!")
         self.sendLine("What a fine day it is.")
         self.sendLine(self.end)
 
-    def connectionLost(self, reason):
-        print 'connection lost (protocol)'
-
     def lineReceived(self, line):
         print "receive:", line
-        if line==self.end:
+        if line == self.end:
             self.transport.loseConnection()
 
 class EchoClientFactory(ClientFactory):
     protocol = EchoClient
 
+    def __init__(self):
+        self.done = Deferred()
+
     def clientConnectionFailed(self, connector, reason):
         print 'connection failed:', reason.getErrorMessage()
-        reactor.stop()
+        self.done.errback(None)
 
     def clientConnectionLost(self, connector, reason):
         print 'connection lost:', reason.getErrorMessage()
-        reactor.stop()
+        self.done.callback(None)
 
-def main():
+def main(reactor):
     factory = EchoClientFactory()
     reactor.connectSSL('localhost', 8000, factory, ssl.CertificateOptions())
     reactor.run()
+
+if __name__ == '__main__':
+    from twisted.internet.task import react
+    react(main)
diff --git twisted/internet/_sslverify.py twisted/internet/_sslverify.py
index cc63675..bdb0326 100644
--- twisted/internet/_sslverify.py
+++ twisted/internet/_sslverify.py
@@ -83,8 +83,8 @@ def _selectVerifyImplementation():
     """
 
     whatsWrong = (
-        "Without the service_identity module and a recent enough pyOpenSSL to"
-        "support it, Twisted can perform only rudimentary TLS client hostname"
+        "Without the service_identity module and a recent enough pyOpenSSL to "
+        "support it, Twisted can perform only rudimentary TLS client hostname "
         "verification.  Many valid certificate/hostname mappings may be "
         "rejected."
     )
