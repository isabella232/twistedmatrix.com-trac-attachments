diff --git twisted/web/test/test_newclient.py twisted/web/test/test_newclient.py
index 50b6846..3e1d291 100644
--- twisted/web/test/test_newclient.py
+++ twisted/web/test/test_newclient.py
@@ -2673,3 +2673,60 @@ class ResponseTests(TestCase):
         response.deliverBody(protocol)
 
         protocol.closedReason.trap(ArbitraryException)
+
+
+class BodyProducerTerminationTests(TestCase):
+
+    def setUp(self):
+        from twisted.internet.tcp import Client
+        from twisted.test.proto_helpers import MemoryReactor
+        from cStringIO import StringIO
+        from twisted.web.client import FileBodyProducer
+        from twisted.internet.test.test_tcp import FakeSocket
+
+        proto = HTTP11ClientProtocol()
+        reactor = MemoryReactor()
+
+        class FakeConnector(object):
+            def buildProtocol(self, *args):
+                return proto
+
+            def connectionLost(self, *args):
+                pass
+
+        class FakeClient(Client):
+            def createInternetSocket(self):
+                sock = FakeSocket(b'')
+                sock.connect_ex = sock.getsockopt = lambda *args: None
+                return sock
+
+        def callLater(seconds, func, *args, **kwargs):
+            assert seconds == 0
+            func(*args, **kwargs)
+        reactor.callLater = callLater
+
+        self.client = FakeClient(host='127.0.0.1', port='bar',
+                                 bindAddress=None, connector=FakeConnector(),
+                                 reactor=reactor)
+        self.proto = proto
+        self.req = Request(
+            b'POST', b'http://localhost:27500', _boringHeaders,
+            bodyProducer=FileBodyProducer(StringIO("foobar")))
+
+    def test_bodyProducerTaskIsCancelledCleanly(self):
+        """
+        This test exercises failure from #7427.
+        """
+        d = self.proto.request(self.req)
+        d.cancel()
+        d.addErrback(lambda f: f.trap(RequestGenerationFailed))
+        return d
+
+    def test_bodyProducerConnectionIsLostRemotely(self):
+        """
+        This test exercises failure from #7457.
+        """
+        d = self.proto.request(self.req)
+        self.client.connectionLost(Failure(RuntimeError("we're crazy")))
+        d.addErrback(lambda f: f.trap(RequestTransmissionFailed))
+        return d
