Index: twisted/conch/telnet.py
===================================================================
--- twisted/conch/telnet.py	(revision 17619)
+++ twisted/conch/telnet.py	(working copy)
@@ -196,8 +196,8 @@
         Returns a Deferred that fires with True when the peer begins performing
         the option, or False when the peer refuses to perform it.  If the peer
         is already performing the given option, the Deferred will fail with
-        C{AlreadyEnabled}.  If a negotiation regarding this option is already
-        in progress, the Deferred will fail with C{AlreadyNegotiating}.
+        L{AlreadyEnabled}.  If a negotiation regarding this option is already
+        in progress, the Deferred will fail with L{AlreadyNegotiating}.
 
         Note: It is currently possible that this Deferred will never fire,
         if the peer never responds, or if the peer believes the option to
@@ -209,9 +209,9 @@
 
         Returns a Deferred that fires with True when the peer ceases performing
         the option.  If the peer is not performing the given option, the
-        Deferred will fail with C{AlreadyDisabled}.  If negotiation regarding
+        Deferred will fail with L{AlreadyDisabled}.  If negotiation regarding
         this option is already in progress, the Deferred will fail with
-        C{AlreadyNegotiating}.
+        L{AlreadyNegotiating}.
 
         Note: It is currently possible that this Deferred will never fire,
         if the peer never responds, or if the peer believes the option to
@@ -224,9 +224,9 @@
         Returns a Deferred that fires with True when the peer agrees to allow
         us to begin performing this option, or False if the peer refuses to
         allow us to begin performing it.  If the option is already enabled
-        locally, the Deferred will fail with C{AlreadyEnabled}.  If negotiation
+        locally, the Deferred will fail with L{AlreadyEnabled}.  If negotiation
         regarding this option is already in progress, the Deferred will fail with
-        C{AlreadyNegotiating}.
+        L{AlreadyNegotiating}.
 
         Note: It is currently possible that this Deferred will never fire,
         if the peer never responds, or if the peer believes the option to
@@ -238,9 +238,9 @@
 
         Returns a Deferred that fires with True when the peer acknowledges
         we have stopped performing this option.  If the option is already
-        disabled locally, the Deferred will fail with C{AlreadyDisabled}.
+        disabled locally, the Deferred will fail with L{AlreadyDisabled}.
         If negotiation regarding this option is already in progress,
-        the Deferred will fail with C{AlreadyNegotiation}.
+        the Deferred will fail with L{AlreadyNegotiating}.
 
         Note: It is currently possible that this Deferred will never fire,
         if the peer never responds, or if the peer believes the option to
@@ -696,7 +696,7 @@
     established and after it is lost.
 
     @ivar protocolFactory: A callable which returns protocol instances
-    which provide ITelnetProtocol.  This will be invoked when a
+    which provide L{ITelnetProtocol}.  This will be invoked when a
     connection is established.  It is passed *protocolArgs and
     **protocolKwArgs.
 
@@ -880,7 +880,7 @@
 
     Username and password prompts are given (the password is obscured).  When the
     information is collected, it is passed to a portal and an avatar implementing
-    ITelnetProtocol is requested.  If an avatar is returned, it connected to this
+    L{ITelnetProtocol} is requested.  If an avatar is returned, it connected to this
     protocol's transport, and this protocol's transport is connected to it.
     Otherwise, the user is re-prompted for credentials.
     """
Index: twisted/conch/ssh/transport.py
===================================================================
--- twisted/conch/ssh/transport.py	(revision 17619)
+++ twisted/conch/ssh/transport.py	(working copy)
@@ -600,7 +600,7 @@
         """
         Request that a service be run over this transport.
 
-        @type instance: subclass of C{twisted.conch.ssh.service.SSHService}
+        @type instance: subclass of L{twisted.conch.ssh.service.SSHService}
         """
         self.sendPacket(MSG_SERVICE_REQUEST, NS(instance.name))
         self.instance = instance
@@ -612,7 +612,7 @@
 
         @type hostKey:      C{str}
         @type fingerprint:  C{str}
-        @rtype:             C{Deferred}
+        @rtype:             L{Deferred}
         """
         # return  if it's good
         return defer.fail(NotImplementedError)
@@ -734,7 +734,7 @@
 
         @type blockSize: C{int}
         @param blockSize: The length of the output buffer, as well as the
-        number of bytes at the beginning of L{initialVector} to consider.
+        number of bytes at the beginning of C{initialVector} to consider.
         """
         initialVector = initialVector[:blockSize]
         self.count = getMP('\xff\xff\xff\xff' + initialVector)[0]
Index: twisted/conch/ssh/connection.py
===================================================================
--- twisted/conch/ssh/connection.py	(revision 17619)
+++ twisted/conch/ssh/connection.py	(working copy)
@@ -271,7 +271,7 @@
         Tell the other side that we will receive more data.  This should not
         normally need to be called as it is managed automatically.
 
-        @type channel:      subclass of C{SSHChannel}
+        @type channel:      subclass of L{SSHChannel}
         @type bytesToAdd:   C{int}
         """
         if channel.localClosed:
@@ -287,7 +287,7 @@
         Send data to a channel.  This should not normally be used: instead use
         channel.write(data) as it manages the window automatically.
 
-        @type channel:  subclass of C{SSHChannel}
+        @type channel:  subclass of L{SSHChannel}
         @type data:     C{str}
         """
         if channel.localClosed:
@@ -302,7 +302,7 @@
         instead use channel.writeExtendedData(data, dataType) as it manages
         the window automatically.
 
-        @type channel:  subclass of C{SSHChannel}
+        @type channel:  subclass of L{SSHChannel}
         @type dataType: C{int}
         @type data:     C{str}
         """
@@ -316,7 +316,7 @@
         """
         Send an EOF (End of File) for a channel.
 
-        @type channel:  subclass of C{SSHChannel}
+        @type channel:  subclass of L{SSHChannel}
         """
         if channel.localClosed:
             return # we're already closed
@@ -328,7 +328,7 @@
         """
         Close a channel.
 
-        @type channel:  subclass of C{SSHChannel}
+        @type channel:  subclass of L{SSHChannel}
         """
         if channel.localClosed:
             return # we're already closed
@@ -348,7 +348,7 @@
         maxPacket is the largest packet we should send,
         data is any other packet data (often nothing).
 
-        We return a subclass of SSHChannel
+        We return a subclass of L{SSHChannel}.
 
         By default, this dispatches to a method 'channel_channelType' with any
         non-alphanumerics in the channelType replace with _'s.  If it cannot 
@@ -359,7 +359,7 @@
         @type windowSize:   C{int}
         @type maxPacket:    C{int}
         @type data:         C{str}
-        @rtype:             subclass of C{SSHChannel}/C{tuple}
+        @rtype:             subclass of L{SSHChannel}/C{tuple}
         """
         log.msg('got channel %s request' % channelType)
         if hasattr(self.transport, "avatar"): # this is a server!
@@ -380,7 +380,7 @@
         """
         We got a global request.  pretty much, this is just used by the client
         to request that we forward a port from the server to the client.
-        returns either:
+        Returns either:
             - 1: request accepted
             - 1, <data>: request accepted with request specific data
             - 0: request denied
@@ -409,7 +409,7 @@
         Called when a channel is closed.
         It clears the local state related to the channel, and calls 
         channel.closed().
-        MAKE SURE CALL THIS METHOD, even if you subclass SSHConnection.
+        MAKE SURE YOU CALL THIS METHOD, even if you subclass L{SSHConnection}.
         If you don't, things will break mysteriously.
         """
         channel.localClosed = channel.remoteClosed = 1
Index: twisted/conch/ssh/userauth.py
===================================================================
--- twisted/conch/ssh/userauth.py	(revision 17619)
+++ twisted/conch/ssh/userauth.py	(working copy)
@@ -387,28 +387,28 @@
 
     def getPrivateKey(self):
         """
-        Return a C{Deferred} that will be called back with the private key
+        Return a L{Deferred} that will be called back with the private key
         corresponding to the last public key from getPublicKey().
         If the private key is not available, errback on the Deferred.
 
-        @rtype: C{Deferred}
+        @rtype: L{Deferred}
         """
         return defer.fail(NotImplementedError())
 
     def getPassword(self, prompt = None):
         """
-        Return a C{Deferred} that will be called back with a password.
+        Return a L{Deferred} that will be called back with a password.
         prompt is a string to display for the password, or None for a generic
         'user@hostname's password: '.
 
         @type prompt: C{str}/C{None}
-        @rtype: C{Deferred}
+        @rtype: L{Deferred}
         """
         return defer.fail(NotImplementedError())
 
     def getGenericAnswers(self, name, instruction, prompts):
         """
-        Returns a C{Deferred} with the responses to the promopts.
+        Returns a L{Deferred} with the responses to the promopts.
 
         @param name: The name of the authentication currently in progress.
         @param instruction: Describes what the authentication wants. 
Index: twisted/conch/ssh/factory.py
===================================================================
--- twisted/conch/ssh/factory.py	(revision 17619)
+++ twisted/conch/ssh/factory.py	(working copy)
@@ -106,9 +106,9 @@
         """
         Return a class to use as a service for the given transport.
 
-        @type transport:    C{transport.SSHServerTransport}
+        @type transport:    L{transport.SSHServerTransport}
         @type service:      C{stR}
-        @rtype:             subclass of {service.SSHService}
+        @rtype:             subclass of L{service.SSHService}
         """
         if transport.isAuthorized or service == 'ssh-userauth':
             return self.services[service]
Index: twisted/conch/ssh/channel.py
===================================================================
--- twisted/conch/ssh/channel.py	(revision 17619)
+++ twisted/conch/ssh/channel.py	(working copy)
@@ -55,7 +55,7 @@
         Called when the the open failed for some reason.
         reason.desc is a string descrption, reason.code the the SSH error code.
 
-        @type reason: C{error.ConchError}
+        @type reason: L{error.ConchError}
         """
         log.msg('other side refused open\nreason: %s'% reason)
 
@@ -64,7 +64,7 @@
         Called when bytes are added to the remote window.  By default it clears
         the data buffers.
 
-        @type bytes:    C{in:t}
+        @type bytes:    C{int}
         """
         self.remoteWindowLeft = self.remoteWindowLeft+bytes
         if not self.areWriting and not self.closing:
Index: twisted/conch/ssh/keys.py
===================================================================
--- twisted/conch/ssh/keys.py	(revision 17619)
+++ twisted/conch/ssh/keys.py	(working copy)
@@ -151,7 +151,7 @@
     """
     Return a C{Crypto.PublicKey.pubkey.pubkey} object corresponding to the
     private key file/data.  If the private key is encrypted, passphrase B{must}
-    be specified, other wise a C{BadKeyError} will be raised.
+    be specified, other wise a L{BadKeyError} will be raised.
 
     @type filename:     C{str}
     @type data:         C{str}
Index: twisted/conch/ssh/session.py
===================================================================
--- twisted/conch/ssh/session.py	(revision 17619)
+++ twisted/conch/ssh/session.py	(working copy)
@@ -133,7 +133,7 @@
 
 class _ProtocolWrapper(protocol.ProcessProtocol):
     """
-    This class wraps a Protocol instance in a ProcessProtocol instance.
+    This class wraps a L{Protocol} instance in a L{ProcessProtocol} instance.
     """
     def __init__(self, proto):
         self.proto = proto
Index: twisted/conch/ssh/filetransfer.py
===================================================================
--- twisted/conch/ssh/filetransfer.py	(revision 17619)
+++ twisted/conch/ssh/filetransfer.py	(working copy)
@@ -451,7 +451,7 @@
 
     def __init__(self, extData = {}):
         """
-        extData is a dict of extended_name : extended_data items
+        @param extData: a dict of extended_name : extended_data items
         to be sent to the server.
         """
         FileTransferBase.__init__(self)
@@ -484,12 +484,15 @@
         """
         Open a file.
 
-        filename is a string representing the file to open.
+        This method returns an L{Deferred} that is called back with an object
+        that meets the L{ISFTPFile} interface.
 
-        flags is a integer of the flags to open the file with, ORed together.
+        @param filename: a string representing the file to open.
+
+        @param flags: a integer of the flags to open the file with, ORed together.
         The flags and their values are listed at the bottom of this file.
 
-        attrs is a list of attributes to open the file with.  It is a
+        @param attrs: a list of attributes to open the file with.  It is a
         dictionary, consisting of 0 or more keys.  The possible keys are::
 
             size: the size of the file in bytes
@@ -504,9 +507,6 @@
 
         NOTE: there is no way to indicate text or binary files.  it is up
         to the SFTP client to deal with this.
-
-        This method returns an Deferred that is called back with an object
-        that meets the ISFTPFile interface.
         """
         data = NS(filename) + struct.pack('!L', flags) + self._packAttributes(attrs)
         d = self._sendRequest(FXP_OPEN, data)
@@ -517,9 +517,9 @@
         """
         Remove the given file.
 
-        filename is the name of the file as a string.
+        This method returns a Deferred that is called back when it succeeds.
 
-        This method returns a Deferred that is called back when it succeeds.
+        @param filename: the name of the file as a string.
         """
         return self._sendRequest(FXP_REMOVE, NS(filename))
 
@@ -527,10 +527,10 @@
         """
         Rename the given file.
 
-        oldpath is the current location of the file.
-        newpath is the new file name.
+        This method returns a Deferred that is called back when it succeeds.
 
-        This method returns a Deferred that is called back when it succeeds.
+        @param oldpath: the current location of the file.
+        @param newpath: the new file name.
         """
         return self._sendRequest(FXP_RENAME, NS(oldpath)+NS(newpath))
 
@@ -538,12 +538,12 @@
         """
         Make a directory.
 
-        path is the name of the directory to create as a string.
+        This method returns a Deferred that is called back when it is 
+        created.
+
+        @param path: the name of the directory to create as a string.
         attrs is a dictionary of attributes to create the directory with.
         It's meaning is the same as the attrs in the openFile method.
-
-        This method returns a Deferred that is called back when it is 
-        created.
         """
         return self._sendRequest(FXP_MKDIR, NS(path)+self._packAttributes(attrs))
 
@@ -551,12 +551,12 @@
         """
         Remove a directory (non-recursively)
 
-        path is the directory to remove.
-
         It is an error to remove a directory that has files or directories in
         it.
 
         This method returns a Deferred that is called back when it is removed.
+
+        @param path: the directory to remove.
         """
         return self._sendRequest(FXP_RMDIR, NS(path))
 
@@ -564,10 +564,8 @@
         """
         Open a directory for scanning.
 
-        path is the directory to open.
-
         This method returns a Deferred that is called back with an iterable 
-        object that has a close() method,
+        object that has a close() method.
 
         The close() method is called when the client is finished reading
         from the directory.  At this point, the iterable will no longer
@@ -588,6 +586,8 @@
         size in bytes, modification time.
 
         attrs is a dictionary in the format of the attrs argument to openFile.
+
+        @param path: the directory to open.
         """
         d = self._sendRequest(FXP_OPENDIR, NS(path))
         self.wasAFile[d] = (0, path)
@@ -597,13 +597,13 @@
         """
         Return the attributes for the given path.
 
-        path is the path to return attributes for as a string.
-        followLinks is a boolean.  if it is True, follow symbolic links
+        This method returns a dictionary in the same format as the attrs
+        argument to openFile or a Deferred that is called back with same.
+
+        @param path: the path to return attributes for as a string.
+        @param followLinks: a boolean.  if it is True, follow symbolic links
         and return attributes for the real path at the base.  if it is False,
         return attributes for the specified path.
-
-        This method returns a dictionary in the same format as the attrs
-        argument to openFile or a Deferred that is called back with same.
         """
         if followLinks: m = FXP_STAT
         else: m = FXP_LSTAT
@@ -613,12 +613,12 @@
         """
         Set the attributes for the path.
 
-        path is the path to set attributes for as a string.
-        attrs is a idctionary in the same format as the attrs argument to
-        openFile.
-
         This method returns when the attributes are set or a Deferred that is
         called back when they are.
+
+        @param path: the path to set attributes for as a string.
+        @param attrs: a dictionary in the same format as the attrs argument to
+        openFile.
         """
         data = NS(path) + self._packAttributes(attrs)
         return self._sendRequest(FXP_SETSTAT, data)
@@ -627,10 +627,10 @@
         """
         Find the root of a set of symbolic links.
 
-        path is the path of the symlink to read.
-
         This method returns the target of the link, or a Deferred that
         returns the same.
+
+        @param path: the path of the symlink to read.
         """
         d = self._sendRequest(FXP_READLINK, NS(path))
         return d.addCallback(self._cbRealPath)
@@ -639,11 +639,11 @@
         """
         Create a symbolic link.
 
-        linkPath is is the pathname of the symlink as a string
-        targetPath is the path of the target of the link as a string.
-
         This method returns when the link is made, or a Deferred that
         returns the same.
+
+        @param linkPath: is the pathname of the symlink as a string
+        @param targetPath: the path of the target of the link as a string.
         """
         return self._sendRequest(FXP_SYMLINK, NS(linkPath)+NS(targetPath))
 
@@ -651,10 +651,10 @@
         """
         Convert any path to an absolute path.
 
-        path is the path to convert as a string.
-
         This method returns the absolute path as a string, or a Deferred
         that returns the same.
+
+        @param path: the path to convert as a string.
         """
         d = self._sendRequest(FXP_REALPATH, NS(path))
         return d.addCallback(self._cbRealPath)
@@ -666,11 +666,12 @@
     def extendedRequest(self, request, data):
         """
         Make an extended request of the server.
-        request is the name of the extended request to make.
-        data is any other data that goes along with the request.
 
         The method returns a Deferred that is called back with
         the result of the extended request.
+
+        @param request: the name of the extended request to make.
+        @param data: any other data that goes along with the request.
         """
         return self._sendRequest(FXP_EXTENDED, NS(request) + data)
 
@@ -738,9 +739,9 @@
         """
         Called when the client sends their version info.
 
-        otherVersion is an integer representing the version of the SFTP
+        @param otherVersion: an integer representing the version of the SFTP
         protocol they are claiming.
-        extData is a dictionary of extended_name : extended_data items.
+        @param extData: a dictionary of extended_name : extended_data items.
         These items are sent by the client to indicate additional features.
         """
 
Index: twisted/conch/recvline.py
===================================================================
--- twisted/conch/recvline.py	(revision 17619)
+++ twisted/conch/recvline.py	(working copy)
@@ -45,8 +45,8 @@
         return getattr(original, name)
 
 class TransportSequence(object):
-    """An ITerminalTransport implementation which forwards calls to
-    one or more other ITerminalTransports.
+    """An L{ITerminalTransport} implementation which forwards calls to
+    one or more other L{ITerminalTransport}s.
 
     This is a cheap way for servers to keep track of the state they
     expect the client to see, since all terminal manipulations can be
@@ -79,10 +79,10 @@
 class LocalTerminalBufferMixin(object):
     """A mixin for RecvLine subclasses which records the state of the terminal.
 
-    This is accomplished by performing all ITerminalTransport operations on both
+    This is accomplished by performing all L{ITerminalTransport} operations on both
     the transport passed to makeConnection and an instance of helper.TerminalBuffer.
 
-    @ivar terminalCopy: A helper.TerminalBuffer instance which efforts
+    @ivar terminalCopy: A L{helper.TerminalBuffer} instance which efforts
     will be made to keep up to date with the actual terminal
     associated with this protocol instance.
     """
@@ -97,7 +97,7 @@
         return str(self.terminalCopy)
 
 class RecvLine(insults.TerminalProtocol):
-    """TerminalProtocol which adds line editing features.
+    """L{TerminalProtocol} which adds line editing features.
 
     Clients will be prompted for lines of input with all the usual
     features: character echoing, left and right arrow support for
@@ -267,9 +267,9 @@
         pass
 
 class HistoricRecvLine(RecvLine):
-    """TerminalProtocol which adds both basic line-editing features and input history.
+    """L{TerminalProtocol} which adds both basic line-editing features and input history.
 
-    Everything supported by RecvLine is also supported by this class.  In addition, the
+    Everything supported by L{RecvLine} is also supported by this class.  In addition, the
     up and down arrows traverse the input history.  Each received line is automatically
     added to the end of the input history.
     """
Index: twisted/conch/insults/insults.py
===================================================================
--- twisted/conch/insults/insults.py	(revision 17619)
+++ twisted/conch/insults/insults.py	(working copy)
@@ -17,7 +17,7 @@
 
 class ITerminalProtocol(Interface):
     def makeConnection(transport):
-        """Called with an ITerminalTransport when a connection is established.
+        """Called with an L{ITerminalTransport} when a connection is established.
         """
 
     def keystrokeReceived(keyID, modifier):
@@ -27,7 +27,7 @@
         keyID is a string identifier for that key.  Printable characters
         are represented by themselves.  Control keys, such as arrows and
         function keys, are represented with symbolic constants on
-        C{ServerProtocol}.
+        L{ServerProtocol}.
         """
 
     def terminalSize(width, height):
Index: twisted/conch/insults/text.py
===================================================================
--- twisted/conch/insults/text.py	(revision 17619)
+++ twisted/conch/insults/text.py	(working copy)
@@ -19,34 +19,34 @@
 defaults, assuming the name twisted.conch.insults.text.attributes has
 been imported and bound to the name \"A\" (with the statement C{from
 twisted.conch.insults.text import attributes as A}, for example) one
-uses this expression:
+uses this expression::
 
-| A.fg.red[\"Hello world\"]
+ | A.fg.red[\"Hello world\"]
 
 Other foreground colors are set by substituting their name for
 \"red\".  To set both a foreground and a background color, this
-expression is used:
+expression is used::
 
-| A.fg.red[A.bg.green[\"Hello world\"]]
+ | A.fg.red[A.bg.green[\"Hello world\"]]
 
 Note that either A.bg.green can be nested within A.fg.red or vice
 versa.  Also note that multiple items can be nested within a single
-index operation by separating them with commas:
+index operation by separating them with commas::
 
-| A.bg.green[A.fg.red[\"Hello\"], " ", A.fg.blue[\"world\"]]
+ | A.bg.green[A.fg.red[\"Hello\"], " ", A.fg.blue[\"world\"]]
 
 Other character attributes are set in a similar fashion.  To specify a
-blinking version of the previous expression:
+blinking version of the previous expression::
 
-| A.blink[A.bg.green[A.fg.red[\"Hello\"], " ", A.fg.blue[\"world\"]]]
+ | A.blink[A.bg.green[A.fg.red[\"Hello\"], " ", A.fg.blue[\"world\"]]]
 
 C{A.reverseVideo}, C{A.underline}, and C{A.bold} are also valid.
 
 A third operation is actually supported: unary negation.  This turns
 off an attribute when an enclosing expression would otherwise have
-caused it to be on.  For example:
+caused it to be on.  For example::
 
-| A.underline[A.fg.red[\"Hello\", -A.underline[\" world\"]]]
+ | A.underline[A.fg.red[\"Hello\", -A.underline[\" world\"]]]
 
 API Stability: Unstable
 
@@ -161,14 +161,14 @@
     specified in the input.
 
     For example, if your terminal is VT102 compatible, you might run
-    this for a colorful variation on the \"hello world\" theme:
+    this for a colorful variation on the \"hello world\" theme::
 
-    | from twisted.conch.insults.text import flatten, attributes as A
-    | from twisted.conch.insults.helper import CharacterAttribute
-    | print flatten(
-    |     A.normal[A.bold[A.fg.red['He'], A.fg.green['ll'], A.fg.magenta['o'], ' ',
-    |                     A.fg.yellow['Wo'], A.fg.blue['rl'], A.fg.cyan['d!']]],
-    |     CharacterAttribute())
+     | from twisted.conch.insults.text import flatten, attributes as A
+     | from twisted.conch.insults.helper import CharacterAttribute
+     | print flatten(
+     |     A.normal[A.bold[A.fg.red['He'], A.fg.green['ll'], A.fg.magenta['o'], ' ',
+     |                     A.fg.yellow['Wo'], A.fg.blue['rl'], A.fg.cyan['d!']]],
+     |     CharacterAttribute())
 
     @param output: Object returned by accessing attributes of the
     module-level attributes object.
Index: twisted/conch/interfaces.py
===================================================================
--- twisted/conch/interfaces.py	(revision 17619)
+++ twisted/conch/interfaces.py	(working copy)
@@ -15,16 +15,17 @@
         maxPacket is the largest packet we should send,
         data is any other packet data (often nothing).
 
-        We return a subclass of SSHChannel.  If an appropriate
-        channel can not be found, an exception will be raised.
-        If a ConchError is raised, the .value will be the message,
-        and the .data will be the error code.
+        We return a subclass of L{SSHChannel<ssh.channel.SSHChannel>}.
+        If an appropriate channel can not be found, an exception will
+        be raised.  If a L{ConchError<error.ConchError>} is raised,
+        the .value will be the message, and the .data will be the
+        error code.
 
         @type channelType:  C{str}
         @type windowSize:   C{int}
         @type maxPacket:    C{int}
         @type data:         C{str}
-        @rtype:             subclass of C{SSHChannel}/C{tuple}
+        @rtype:             subclass of L{SSHChannel}/C{tuple}
         """
 
     def lookupSubsystem(subsystem, data):
@@ -33,7 +34,7 @@
         subsystem is the name of the subsystem being requested.
         data is any other packet data (often nothing).
         
-        We return a Protocol.
+        We return a L{Protocol}.
         """
 
     def gotGlobalRequest(requestType, data):
@@ -60,14 +61,14 @@
         """
         Open a shell and connect it to proto.
 
-        proto should be a ProcessProtocol instance.
+        @param proto: a L{ProcessProtocol} instance.
         """
 
     def execCommand(proto, command):
         """
         Execute a command.
 
-        proto should be a ProcessProtocol instance.
+        @param proto: a L{ProcessProtocol} instance.
         """
 
     def windowChanged(newWindowSize):
@@ -113,12 +114,12 @@
         """
         Called when the clients asks to open a file.
 
-        filename is a string representing the file to open.
+        @param filename: a string representing the file to open.
 
-        flags is a integer of the flags to open the file with, ORed together.
+        @param flags: an integer of the flags to open the file with, ORed together.
         The flags and their values are listed at the bottom of this file.
 
-        attrs is a list of attributes to open the file with.  It is a
+        @param attrs: a list of attributes to open the file with.  It is a
         dictionary, consisting of 0 or more keys.  The possible keys are::
 
             size: the size of the file in bytes
@@ -135,7 +136,7 @@
         to the SFTP client to deal with this.
 
         This method returns an object that meets the ISFTPFile interface.
-        Alternatively, it can return a Deferred that will be called back
+        Alternatively, it can return a L{Deferred} that will be called back
         with the object.
         """
 
@@ -143,54 +144,52 @@
         """
         Remove the given file.
 
-        filename is the name of the file as a string.
-
         This method returns when the remove succeeds, or a Deferred that is
         called back when it succeeds.
+
+        @param filename: the name of the file as a string.
         """
 
     def renameFile(oldpath, newpath):
         """
         Rename the given file.
 
-        oldpath is the current location of the file.
-        newpath is the new file name.
+        This method returns when the rename succeeds, or a L{Deferred} that is
+        called back when it succeeds.
 
-        This method returns when the rename succeeds, or a Deferred that is
-        called back when it succeeds.
+        @param oldpath: the current location of the file.
+        @param newpath: the new file name.
         """
 
     def makeDirectory(path, attrs):
         """
         Make a directory.
 
-        path is the name of the directory to create as a string.
-        attrs is a dictionary of attributes to create the directory with.
-        It's meaning is the same as the attrs in the openFile method.
-
         This method returns when the directory is created, or a Deferred that
         is called back when it is created.
+
+        @param path: the name of the directory to create as a string.
+        @param attrs: is a dictionary of attributes to create the directory with.
+        Its meaning is the same as the attrs in the L{openFile} method.
         """
 
     def removeDirectory(path):
         """
         Remove a directory (non-recursively)
 
-        path is the directory to remove.
-
         It is an error to remove a directory that has files or directories in
         it.
 
         This method returns when the directory is removed, or a Deferred that
         is called back when it is removed.
+
+        @param path: is the directory to remove.
         """
 
     def openDirectory(path):
         """
         Open a directory for scanning.
 
-        path is the directory to open.
-
         This method returns an iterable object that has a close() method,
         or a Deferred that is called back with same.
 
@@ -214,62 +213,64 @@
         size in bytes, modification time.
 
         attrs is a dictionary in the format of the attrs argument to openFile.
+
+        @param path: the directory to open.
         """
 
     def getAttrs(path, followLinks):
         """
         Return the attributes for the given path.
 
-        path is the path to return attributes for as a string.
-        followLinks is a boolean.  if it is True, follow symbolic links
-        and return attributes for the real path at the base.  if it is False,
-        return attributes for the specified path.
-
         This method returns a dictionary in the same format as the attrs
         argument to openFile or a Deferred that is called back with same.
+
+        @param path: the path to return attributes for as a string.
+        @param followLinks: a boolean.  If it is True, follow symbolic links
+        and return attributes for the real path at the base.  If it is False,
+        return attributes for the specified path.
         """
 
     def setAttrs(path, attrs):
         """
         Set the attributes for the path.
 
-        path is the path to set attributes for as a string.
-        attrs is a idctionary in the same format as the attrs argument to
-        openFile.
-
         This method returns when the attributes are set or a Deferred that is
         called back when they are.
+
+        @param path: the path to set attributes for as a string.
+        @param attrs: a dictionary in the same format as the attrs argument to
+        L{openFile}.
         """
 
     def readLink(path):
         """
         Find the root of a set of symbolic links.
 
-        path is the path of the symlink to read.
-
         This method returns the target of the link, or a Deferred that
         returns the same.
+
+        @param path: the path of the symlink to read.
         """
 
     def makeLink(linkPath, targetPath):
         """
         Create a symbolic link.
 
-        linkPath is is the pathname of the symlink as a string
-        targetPath is the path of the target of the link as a string.
-
         This method returns when the link is made, or a Deferred that
         returns the same.
+
+        @param linkPath: the pathname of the symlink as a string.
+        @param targetPath: the path of the target of the link as a string.
         """
 
     def realPath(path):
         """
         Convert any path to an absolute path.
 
-        path is the path to convert as a string.
-
         This method returns the absolute path as a string, or a Deferred
         that returns the same.
+
+        @param path: the path to convert as a string.
         """
 
     def extendedRequest(extendedName, extendedData):
@@ -277,28 +278,28 @@
         This is the extension mechanism for SFTP.  The other side can send us
         arbitrary requests.
 
-        extendedName is the name of the request as a string.
-        extendedData is the data the other side sent with the request,
-        as a string.
-
         If we don't implement the request given by extendedName, raise
         NotImplementedError.
 
         The return value is a string, or a Deferred that will be called
         back with a string.
+
+        @param extendedName: the name of the request as a string.
+        @param extendedData: the data the other side sent with the request,
+        as a string.
         """
 
 class ISFTPFile(Interface):
     """
     This represents an open file on the server.  An object adhering to this
-    interface should be returned from openFile().
+    interface should be returned from L{openFile}().
     """
 
     def close():
         """
         Close the file.
 
-        This method returns nothing if the close succeeds immediatly, or a
+        This method returns nothing if the close succeeds immediately, or a
         Deferred that is called back when the close succeeds.
         """
 
@@ -306,26 +307,26 @@
         """
         Read from the file.
 
-        offset is an integer that is the index to start from in the file.
-        length is the maximum length of data to return.  The actual amount
-        returned may less than this.  For normal disk files, however,
-        this should read the requested number (up to the end of the file).
-
         If EOF is reached before any data is read, raise EOFError.
 
         This method returns the data as a string, or a Deferred that is
         called back with same.
+
+        @param offset: an integer that is the index to start from in the file.
+        @param length: the maximum length of data to return.  The actual amount
+        returned may less than this.  For normal disk files, however,
+        this should read the requested number (up to the end of the file).
         """
 
     def writeChunk(offset, data):
         """
         Write to the file.
 
-        offset is an integer that is the index to start from in the file.
-        data is a string that is the data to write.
-
         This method returns when the write completes, or a Deferred that is
         called when it completes.
+
+        @param offset: an integer that is the index to start from in the file.
+        @param data: a string that is the data to write.
         """
 
     def getAttrs():
@@ -333,18 +334,18 @@
         Return the attributes for the file.
 
         This method returns a dictionary in the same format as the attrs
-        argument to openFile or a Deferred that is called back with same.
+        argument to L{openFile} or a L{Deferred} that is called back with same.
         """
 
     def setAttrs(attrs):
         """
         Set the attributes for the file.
 
-        attrs is a dictionary in the same format as the attrs argument to
-        openFile.
-
         This method returns when the attributes are set or a Deferred that is
         called back when they are.
+
+        @param attrs: a dictionary in the same format as the attrs argument to
+        L{openFile}.
         """
 
 
Index: twisted/conch/mixin.py
===================================================================
--- twisted/conch/mixin.py	(revision 17619)
+++ twisted/conch/mixin.py	(working copy)
@@ -33,7 +33,7 @@
 
         Every call to this function delays the real write by C{self.DELAY}
         seconds.  When the delay expires, all collected bytes are written
-        to the underlying transport using C{ITransport.writeSequence}.
+        to the underlying transport using L{ITransport.writeSequence}.
         """
         if self._delayedWriteCall is None:
             self.bytes = []
Index: twisted/conch/ui/ansi.py
===================================================================
--- twisted/conch/ui/ansi.py	(revision 17619)
+++ twisted/conch/ui/ansi.py	(working copy)
@@ -4,7 +4,7 @@
 #
 """Module to parse ANSI escape sequences
 
-Maintainer: U(Jean-Paul Calderone <exarkun@twistedmatrix.com>
+Maintainer: U{Jean-Paul Calderone <exarkun@twistedmatrix.com>}
 """
 
 import string
@@ -96,7 +96,7 @@
 
     def parseString(self, str):
         """
-        Turn a string input into a list of ColorText elements.
+        Turn a string input into a list of L{ColorText} elements.
         """
 
         if self.prepend:
Index: twisted/application/internet.py
===================================================================
--- twisted/application/internet.py	(revision 17619)
+++ twisted/application/internet.py	(working copy)
@@ -27,7 +27,7 @@
 reactor.connectXXX calls.
 
 For example, the following service starts a web server on port 8080:
-TCPServer(8080, server.Site(r)).  See the documentation for the
+C{TCPServer(8080, server.Site(r))}.  See the documentation for the
 reactor.listen/connect* methods for more information.
 
 API Stability: unstable
Index: twisted/application/service.py
===================================================================
--- twisted/application/service.py	(revision 17619)
+++ twisted/application/service.py	(working copy)
@@ -38,14 +38,14 @@
         """Set the name of the service.
 
         @type name: C{str}
-        @raise L{RuntimeError}: Raised if the service already has a parent.
+        @raise RuntimeError: Raised if the service already has a parent.
         """
 
     def setServiceParent(parent):
         """Set the parent of the service.
 
-        @type name: C{IServiceCollection}
-        @raise L{RuntimeError}: Raised if the service already has a parent
+        @type name: L{IServiceCollection}
+        @raise RuntimeError: Raised if the service already has a parent
         or if the service has a name and the parent already has a child
         by that name.
         """
@@ -53,7 +53,7 @@
     def disownServiceParent():
         """Remove the parent of the service.
 
-        @rtype: C{Deferred}
+        @rtype: L{Deferred}
         @return: a deferred which is triggered when the service has
         finished shutting down. If shutting down is immediate,
         a value can be returned (usually, None).
@@ -65,7 +65,7 @@
     def stopService():
         """Stop the service.
 
-        @rtype: C{Deferred}
+        @rtype: L{Deferred}
         @return: a deferred which is triggered when the service has
         finished shutting down. If shutting down is immediate,
         a value can be returned (usually, None).
@@ -140,8 +140,8 @@
         """Get the child service with a given name.
 
         @type name: C{str}
-        @rtype: C{IService}
-        @raise L{KeyError}: Raised if the service has no child with the
+        @rtype: L{IService}
+        @raise KeyError: Raised if the service has no child with the
         given name.
         """
 
@@ -151,17 +151,17 @@
     def addService(service):
          """Add a child service.
 
-        @type service: C{IService}
-        @raise L{RuntimeError}: Raised if the service has a child with
+        @type service: L{IService}
+        @raise RuntimeError: Raised if the service has a child with
         the given name.
         """
 
     def removeService(service):
         """Remove a child service.
 
-        @type service: C{IService}
-        @raise L{ValueError}: Raised if the given service is not a child.
-        @rtype: C{Deferred}
+        @type service: L{IService}
+        @raise ValueError: Raised if the given service is not a child.
+        @rtype: L{Deferred}
         @return: a deferred which is triggered when the service has
         finished shutting down. If shutting down is immediate,
         a value can be returned (usually, None).
@@ -274,8 +274,8 @@
 def Application(name, uid=None, gid=None):
     """Return a compound class.
 
-    Return an object supporting the C{IService}, C{IServiceCollection},
-    C{IProcess} and C{sob.IPersistable} interfaces, with the given
+    Return an object supporting the L{IService}, L{IServiceCollection},
+    L{IProcess} and L{sob.IPersistable} interfaces, with the given
     parameters. Always access the return value by explicit casting to
     one of the interfaces.
     """
@@ -286,16 +286,16 @@
     return ret
 
 def loadApplication(filename, kind, passphrase=None):
-    """Load Application from file
+    """Load Application from a given file.
 
+    The serialization format it was saved in should be given as
+    C{kind}, and is one of 'pickle', 'source', 'xml' or 'python'. If
+    C{passphrase} is given, the application was encrypted with the
+    given passphrase.
+
     @type filename: C{str}
     @type kind: C{str}
     @type passphrase: C{str}
-
-    Load application from a given file. The serialization format it
-    was saved in should be given as C{kind}, and is one of 'pickle', 'source',
-    'xml' or 'python'. If C{passphrase} is given, the application was encrypted
-    with the given passphrase.
     """
     if kind == 'python':
         application = sob.loadValueFromFile(filename, 'application', passphrase)
Index: twisted/application/strports.py
===================================================================
--- twisted/application/strports.py	(revision 17619)
+++ twisted/application/strports.py	(working copy)
@@ -95,24 +95,11 @@
     return args, kw 
 
 def parse(description, factory, default=None):
-    """Parse a description of a reliable virtual circuit server
+    """Parse the description of a reliable virtual circuit server
+    (that is, a TCP port, a UNIX domain socket or an SSL port) and
+    return the data necessary to call the reactor methods to listen on
+    the given socket with the given factory.
 
-    @type description: C{str}
-    @type factory: C{twisted.internet.interfaces.IProtocolFactory}
-    @type default: C{str} or C{None}
-    @rtype: C{tuple}
-    @return: a tuple of string, tuple and dictionary. The string
-    is the name of the method (sans C{'listen'}) to call, and
-    the tuple and dictionary are the arguments and keyword arguments
-    to the method.
-    @raises: C{ValueError} if the string is formatted incorrectly,
-    C{KeyError} if the type is other than unix, ssl or tcp.
-
-    Parse the description of a reliable virtual circuit server (that is,
-    a TCP port, a UNIX domain socket or an SSL port) and return the
-    data necessary to call the reactor methods to listen on the given
-    socket with the given factory.
-
     An argument with no colons means a default port. Usually the default
     type is C{tcp}, but passing a non-C{None} value as C{default} will
     set that as the default. Otherwise, it is a colon-separated string.
@@ -135,6 +122,17 @@
     which the certification is in), sslmethod (the name of the SSL method
     to allow), the interface (interface on which to listen) and the
     backlog (how many clients to keep in the backlog).
+
+    @type description: C{str}
+    @type factory: L{twisted.internet.interfaces.IProtocolFactory}
+    @type default: C{str} or C{None}
+    @rtype: C{tuple}
+    @return: a tuple of string, tuple and dictionary. The string
+    is the name of the method (sans C{'listen'}) to call, and
+    the tuple and dictionary are the arguments and keyword arguments
+    to the method.
+    @raises ValueError: if the string is formatted incorrectly.
+    @raises KeyError: if the type is other than unix, ssl or tcp.
     """
     args, kw = _parse(description)
     if not args or (len(args)==1 and not kw):
@@ -145,7 +143,7 @@
     """Return the service corresponding to a description
 
     @type description: C{str}
-    @type factory: C{twisted.internet.interfaces.IProtocolFactory}
+    @type factory: L{twisted.internet.interfaces.IProtocolFactory}
     @type default: C{str} or C{None}
     @rtype: C{twisted.application.service.IService}
     @return: the service corresponding to a description of a reliable
@@ -162,7 +160,7 @@
     """Listen on a port corresponding to a description
 
     @type description: C{str}
-    @type factory: C{twisted.internet.interfaces.IProtocolFactory}
+    @type factory: L{twisted.internet.interfaces.IProtocolFactory}
     @type default: C{str} or C{None}
     @rtype: C{twisted.internet.interfaces.IListeningPort}
     @return: the port corresponding to a description of a reliable
