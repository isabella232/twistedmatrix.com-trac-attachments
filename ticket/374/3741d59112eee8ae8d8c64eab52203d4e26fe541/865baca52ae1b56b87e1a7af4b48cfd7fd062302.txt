Index: twisted/trial/test/test_trial.py
===================================================================
--- twisted/trial/test/test_trial.py    (revision 13624)
+++ twisted/trial/test/test_trial.py    (working copy)
@@ -59,6 +59,40 @@

 statdatum = {"foo": "bar", "baz": "spam"}

+class TestSkip(unittest.TestCase):
+    """
+    Test that setUp is not run when class is set to skip
+    """
+
+    def testSkippedClasses(self):
+        class SkipperTester(unittest.TestCase):
+
+            skip = 'yes'
+
+            errorStr = None
+
+            def setUpClass(self):
+                '''
+                The class is set to skip, this should not be run
+                '''
+                SkipperTester.errorStr = "setUpClass should be skipped because the class has skip = 'yes'"
+
+            def testSkip(self):
+                '''
+                The class is set to skip, this should not be run
+                '''
+                SkipperTester.errorStr = "testSkip should be skipped because the class has skip = 'yes'"
+
+        from twisted import trial
+        from twisted.trial.test.common import BogusReporter
+
+        suite = runner.TestSuite(BogusReporter(), util._Janitor(), benchmark=True)
+        suite.addTestClass(SkipperTester)
+        suite.run()
+        if SkipperTester.errorStr is not None:
+            self.fail(SkipperTester.errorStr)
+
+
 class TestBenchmark(object):

     class Benchmark(common.BaseTest, unittest.TestCase):
Index: twisted/trial/runner.py
===================================================================
--- twisted/trial/runner.py     (revision 13624)
+++ twisted/trial/runner.py     (working copy)
@@ -564,7 +564,8 @@
             setUpClass = UserMethodWrapper(self.setUpClass, janitor,
                                            suppress=self.suppress)
             try:
-                setUpClass()
+                if not hasattr(tci, 'skip'):
+                    setUpClass()
             except UserMethodError:
                 for error in setUpClass.errors:
                     if error.check(unittest.SkipTest):
