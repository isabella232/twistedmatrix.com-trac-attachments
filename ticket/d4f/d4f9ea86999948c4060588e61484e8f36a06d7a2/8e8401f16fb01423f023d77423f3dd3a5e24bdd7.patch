diff -ur twisted/spread/pb.py twisted/spread/pb.py
--- twisted/spread/pb.py
+++ twisted/spread/pb.py
@@ -70,7 +70,7 @@
 import types
 
 # Twisted Imports
-from twisted.python import log, failure
+from twisted.python import log, failure, reflect
 from twisted.internet import defer, protocol
 from twisted.cred.portal import Portal
 from twisted.cred.credentials import ICredentials, IUsernameHashedPassword
@@ -421,7 +421,7 @@
             state['value'] = failure2Copyable(self.value, self.unsafeTracebacks)
         else:
             state['value'] = str(self.value) # Exception instance
-        state['type'] = str(self.type) # Exception class
+        state['type'] = reflect.qual(self.type) # Exception class
         if self.unsafeTracebacks:
             io = StringIO.StringIO()
             self.printTraceback(io)
diff -ur twisted/test/test_pbfailure.py twisted/test/test_pbfailure.py
--- twisted/test/test_pbfailure.py
+++ twisted/test/test_pbfailure.py
@@ -81,6 +81,14 @@
         """
         raise SynchronousError("remote synchronous error")
 
+    def remote_unknownError(self):
+        """
+        Fail with error that is not known to client.
+        """
+        class UnknownError(pb.Error):
+            pass
+        raise UnknownError("I'm not known to client!")
+
     def remote_jelly(self):
         self.raiseJelly()
 
@@ -251,6 +259,33 @@
         return self._testImpl('deferredJelly', 430, failureDeferredJelly)
 
 
+    def test_unjellyableFailure(self):
+        """
+        Test that an exception which is a subclass of L{pb.Error} but not
+        jellyable has its type set properly.
+        TODO Strings don't really cut it. This should read something like:
+        self.assertEquals(fail.type, SynchronousError)
+        """
+        def failureUnjellyable(fail):
+            self.failUnless(isinstance(fail.type, str))
+            self.assertEquals(fail.type, 'twisted.test.test_pbfailure.SynchronousError')
+            return 431
+        return self._testImpl('synchronousError', 431, failureUnjellyable)
+
+
+    def test_unknownFailure(self):
+        """
+        Test that an exception which is a subclass of L{pb.Error} but not known
+        on the client side has its type set properly.
+        TODO Strings don't really cut it. This should probably behave differently.
+        """
+        def failureUnknown(fail):
+            self.failUnless(isinstance(fail.type, str))
+            self.assertEquals(fail.type, 'twisted.test.test_pbfailure.UnknownError')
+            return 4310
+        return self._testImpl('unknownError', 4310, failureUnknown)
+
+
     def test_securityFailure(self):
         """
         Test that even if an exception is not explicitly jellyable (by being
