Index: twisted/mail/test/test_imap.py
===================================================================
--- twisted/mail/test/test_imap.py	(revision 34673)
+++ twisted/mail/test/test_imap.py	(working copy)
@@ -612,6 +612,23 @@
             self.assertEqual(p, outp[1])
 
 
+    def test_fetchParserBadMacros(self):
+        cases = [
+            ['ALLBAD', (4, ['flags', 'internaldate', 'rfc822.size', 'envelope'])],
+            ['FULLL', (5, ['flags', 'internaldate', 'rfc822.size', 'envelope', 'body'])],
+            ['FASTEST', (3, ['flags', 'internaldate', 'rfc822.size'])],
+        ]
+
+        for (inp, outp) in cases:
+            p = imap4._FetchParser()
+            p.parseString(inp)
+            self.assertEqual(len(p.result), outp[0])
+            p = [str(p).lower() for p in p.result]
+            p.sort()
+            outp[1].sort()
+            self.assertEqual(p, outp[1])
+
+
     def test_fetchParserBody(self):
         P = imap4._FetchParser
 
Index: twisted/mail/imap4.py
===================================================================
--- twisted/mail/imap4.py	(revision 34673)
+++ twisted/mail/imap4.py	(working copy)
@@ -5475,6 +5475,9 @@
         s = self.remaining + s
         try:
             while s or self.state:
+                if not self.state:
+                    s = ''
+                    break
                 # print 'Entering state_' + self.state[-1] + ' with', repr(s)
                 state = self.state.pop()
                 try:
