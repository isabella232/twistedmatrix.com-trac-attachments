diff --git a/twisted/test/test_process.py b/twisted/test/test_process.py
index b04f754..9a91b45 100644
--- a/twisted/test/test_process.py
+++ b/twisted/test/test_process.py
@@ -7,7 +7,6 @@ Test running processes.
 
 import gzip
 import os
-import popen2
 import sys
 import signal
 import StringIO
@@ -1902,19 +1901,24 @@ class PosixProcessTestCase(unittest.TestCase, PosixProcessBase):
     # add three non-pty test cases
 
     def testStderr(self):
-        # we assume there is no file named ZZXXX..., both in . and in /tmp
-        cmd = self.getCommand('ls')
+        """
+        Test that reading from the stderr of a spawned process
+        produces the correct result.
+        """
+        cmd = sys.executable
+
+        value = "42"
 
         p = Accumulator()
         d = p.endedDeferred = defer.Deferred()
         reactor.spawnProcess(p, cmd,
-                             [cmd,
-                              "ZZXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"],
+                             [cmd, "-c", 
+                              "import sys; sys.stderr.write('%s')" % (value,)],
                              env=None, path="/tmp",
                              usePTY=self.usePTY)
 
         def processEnded(ign):
-            self.assertEquals(lsOut, p.errF.getvalue())
+            self.assertEquals(value, p.errF.getvalue())
         return d.addCallback(processEnded)
 
     def testProcess(self):
@@ -2328,9 +2332,6 @@ if (runtime.platform.getType() != 'posix') or (not interfaces.IReactorProcess(re
     PosixProcessTestCasePTY.skip = skipMessage
     TestTwoProcessesPosix.skip = skipMessage
     FDTest.skip = skipMessage
-else:
-    # do this before running the tests: it uses SIGCHLD and stuff internally
-    lsOut = popen2.popen3("/bin/ls ZZXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX")[2].read()
 
 if (runtime.platform.getType() != 'win32') or (not interfaces.IReactorProcess(reactor, None)):
     Win32ProcessTestCase.skip = skipMessage
