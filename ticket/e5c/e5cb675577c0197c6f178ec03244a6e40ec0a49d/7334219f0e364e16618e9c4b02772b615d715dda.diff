Index: test/test_defer.py
===================================================================
--- test/test_defer.py	(revision 13302)
+++ test/test_defer.py	(working copy)
@@ -599,3 +599,18 @@
         for i in range(N):
             queue.get().addCallback(gotten.append)
             self.assertEquals(gotten, range(N, N + i + 1))
+
+        queue = defer.DeferredQueue()
+        gotten = []
+        for i in range(N):
+            queue.get().addCallback(gotten.append)
+        for i in range(N):
+            queue.put(i)
+        self.assertEquals(gotten, range(N))
+        
+        queue = defer.DeferredQueue(size=0)
+        self.assertRaises(defer.QueueOverflow, queue.put, None)
+
+        queue = defer.DeferredQueue(backlog=0)
+        self.assertRaises(defer.QueueUnderflow, queue.get)
+
Index: internet/defer.py
===================================================================
--- internet/defer.py	(revision 13302)
+++ internet/defer.py	(working copy)
@@ -802,7 +802,7 @@
          """
          if self.waiting:
              self.waiting.pop(0).callback(obj)
-         elif self.size is not None and len(self.pending) < self.size:
+         elif self.size is None or len(self.pending) < self.size:
              self.pending.append(obj)
          else:
              raise QueueOverflow()
@@ -817,7 +817,7 @@
          """
          if self.pending:
              return succeed(self.pending.pop(0))
-         elif self.size is not None and len(self.waiting) < self.backlog:
+         elif self.backlog is None or len(self.waiting) < self.backlog:
              d = Deferred()
              self.waiting.append(d)
              return d
