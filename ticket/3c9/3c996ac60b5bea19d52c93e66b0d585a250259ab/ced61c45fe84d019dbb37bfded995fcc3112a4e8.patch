diff --git a/twisted/names/dns.py b/twisted/names/dns.py
index 25f78de..882dac4 100644
--- a/twisted/names/dns.py
+++ b/twisted/names/dns.py
@@ -1570,11 +1570,12 @@ class Message:
             t = self.lookupRecordType(header.type)
             if not t:
                 continue
-            header.payload = t(ttl=header.ttl)
-            try:
-                header.payload.decode(strio, header.rdlength)
-            except EOFError:
-                return
+            if header.rdlength:
+                header.payload = t(ttl=header.ttl)
+                try:
+                    header.payload.decode(strio, header.rdlength)
+                except EOFError:
+                    return
             list.append(header)
 
 
diff --git a/twisted/names/test/test_dns.py b/twisted/names/test/test_dns.py
index e8a059f..6044c5d 100644
--- a/twisted/names/test/test_dns.py
+++ b/twisted/names/test/test_dns.py
@@ -217,6 +217,47 @@ class MessageTestCase(unittest.TestCase):
         # allocated value.
         self.assertIdentical(dns.Message().lookupRecordType(65280), None)
 
+    def test_rdlength0(self):
+        """
+        Test that names can handle RRHeaders with rdlength=0 as seen
+        in dynamic updates, amongst other places.
+        """
+
+        msg = dns.Message()
+        msg.fromStr(
+            '\x01\x00' # Message ID
+            '\x00' # answer bit, opCode nibble, auth bit, trunc bit, recursive bit
+            '\x00' # recursion bit, empty bit, empty bit, empty bit, response code nibble
+            '\x00\x00' # number of queries
+            '\x00\x02' # number of answers
+            '\x00\x00' # number of authorities
+            '\x00\x00' # number of additionals
+
+            # 1st answer
+            '\x03foo\x03bar\x00'    # foo.bar
+            '\x00\x1c'  # AAAA
+            '\x00\xff'  # ANY
+            '\x00\x00\x00\x00'  # ttl=0
+            '\x00\x00'
+            # 2nd answer
+            '\x03baz\x03ban\x00'    # foo.bar
+            '\x00\x1c'  # AAAA
+            '\x00\xff'  # ANY
+            '\x00\x00\x00\x00'  # ttl=0
+            '\x00\x00'
+
+            )
+        self.assertEquals(msg.id, 256)
+        self.assertEquals(msg.queries, [])
+
+        self.assertEquals(msg.answers, [
+            dns.RRHeader('foo.bar', ttl=0, type=dns.AAAA, cls=dns.ANY, payload=None),
+            dns.RRHeader('baz.ban', ttl=0, type=dns.AAAA, cls=dns.ANY, payload=None),
+            ])
+
+        self.assertEquals(msg.authority, [])
+        self.assertEquals(msg.additional, [])
+
 
 
 class TestController(object):
