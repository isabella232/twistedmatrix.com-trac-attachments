From c34c0a61f4fe7bdd11fcabe262ead01bc4a52f8f Mon Sep 17 00:00:00 2001
From: Vadim Markovtsev <v.markovtsev@samsung.com>
Date: Fri, 23 May 2014 09:48:11 +0400
Subject: [PATCH 1/5] Disable _SystemdParser on Python 3.x

twisted.python.systemd is not ported to Python 3.x, so importing
twisted.internet.endpoints is failed.
---
 twisted/internet/endpoints.py | 78 ++++++++++++++++++++++---------------------
 1 file changed, 40 insertions(+), 38 deletions(-)

diff --git a/twisted/internet/endpoints.py b/twisted/internet/endpoints.py
index 7ba25db..4314fff 100644
--- a/twisted/internet/endpoints.py
+++ b/twisted/internet/endpoints.py
@@ -31,7 +31,8 @@
     IStreamServerEndpointStringParser, IStreamClientEndpointStringParser,
     IStreamClientEndpointStringParserWithReactor)
 from twisted.python.filepath import FilePath
-from twisted.python.systemd import ListenFDs
+if not _PY3:
+    from twisted.python.systemd import ListenFDs
 from twisted.internet.abstract import isIPv6Address
 from twisted.python.failure import Failure
 from twisted.python import log
@@ -1174,53 +1175,54 @@ def parseStreamServer(self, reactor, *args, **kwargs):
 
 
 
-@implementer(IPlugin, IStreamServerEndpointStringParser)
-class _SystemdParser(object):
-    """
-    Stream server endpoint string parser for the I{systemd} endpoint type.
+if not _PY3:
+    @implementer(IPlugin, IStreamServerEndpointStringParser)
+    class _SystemdParser(object):
+        """
+        Stream server endpoint string parser for the I{systemd} endpoint type.
 
-    @ivar prefix: See L{IStreamClientEndpointStringParser.prefix}.
+        @ivar prefix: See L{IStreamClientEndpointStringParser.prefix}.
 
-    @ivar _sddaemon: A L{ListenFDs} instance used to translate an index into an
-        actual file descriptor.
-    """
-    _sddaemon = ListenFDs.fromEnvironment()
+        @ivar _sddaemon: A L{ListenFDs} instance used to translate an index into an
+            actual file descriptor.
+        """
+        _sddaemon = ListenFDs.fromEnvironment()
 
-    prefix = "systemd"
+        prefix = "systemd"
 
-    def _parseServer(self, reactor, domain, index):
-        """
-        Internal parser function for L{_parseServer} to convert the string
-        arguments for a systemd server endpoint into structured arguments for
-        L{AdoptedStreamServerEndpoint}.
+        def _parseServer(self, reactor, domain, index):
+            """
+            Internal parser function for L{_parseServer} to convert the string
+            arguments for a systemd server endpoint into structured arguments for
+            L{AdoptedStreamServerEndpoint}.
 
-        @param reactor: An L{IReactorSocket} provider.
+            @param reactor: An L{IReactorSocket} provider.
 
-        @param domain: The domain (or address family) of the socket inherited
-            from systemd.  This is a string like C{"INET"} or C{"UNIX"}, ie the
-            name of an address family from the L{socket} module, without the
-            C{"AF_"} prefix.
-        @type domain: C{str}
+            @param domain: The domain (or address family) of the socket inherited
+                from systemd.  This is a string like C{"INET"} or C{"UNIX"}, ie the
+                name of an address family from the L{socket} module, without the
+                C{"AF_"} prefix.
+            @type domain: C{str}
 
-        @param index: An offset into the list of file descriptors inherited from
-            systemd.
-        @type index: C{str}
+            @param index: An offset into the list of file descriptors inherited from
+                systemd.
+            @type index: C{str}
 
-        @return: A two-tuple of parsed positional arguments and parsed keyword
-            arguments (a tuple and a dictionary).  These can be used to
-            construct an L{AdoptedStreamServerEndpoint}.
-        """
-        index = int(index)
-        fileno = self._sddaemon.inheritedDescriptors()[index]
-        addressFamily = getattr(socket, 'AF_' + domain)
-        return AdoptedStreamServerEndpoint(reactor, fileno, addressFamily)
+            @return: A two-tuple of parsed positional arguments and parsed keyword
+                arguments (a tuple and a dictionary).  These can be used to
+                construct an L{AdoptedStreamServerEndpoint}.
+            """
+            index = int(index)
+            fileno = self._sddaemon.inheritedDescriptors()[index]
+            addressFamily = getattr(socket, 'AF_' + domain)
+            return AdoptedStreamServerEndpoint(reactor, fileno, addressFamily)
 
 
-    def parseStreamServer(self, reactor, *args, **kwargs):
-        # Delegate to another function with a sane signature.  This function has
-        # an insane signature to trick zope.interface into believing the
-        # interface is correctly implemented.
-        return self._parseServer(reactor, *args, **kwargs)
+        def parseStreamServer(self, reactor, *args, **kwargs):
+            # Delegate to another function with a sane signature.  This function has
+            # an insane signature to trick zope.interface into believing the
+            # interface is correctly implemented.
+            return self._parseServer(reactor, *args, **kwargs)
 
 
 
-- 
1.9.3
