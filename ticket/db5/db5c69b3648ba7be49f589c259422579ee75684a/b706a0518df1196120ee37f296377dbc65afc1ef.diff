diff --git twisted/conch/ssh/channel.py twisted/conch/ssh/channel.py
index f498aec..e31200e 100644
--- twisted/conch/ssh/channel.py
+++ twisted/conch/ssh/channel.py
@@ -254,19 +254,15 @@ class SSHChannel(log.Logger):
 
     def getPeer(self):
         """
-        Return a tuple describing the other side of the connection.
-
-        @rtype: C{tuple}
+        See: L{ITransport.getPeer}
         """
-        return('SSH', )+self.conn.transport.getPeer()
+        return self.conn.transport.getPeer().address
 
     def getHost(self):
         """
-        Return a tuple describing our side of the connection.
-
-        @rtype: C{tuple}
+        See: L{ITransport.getHost}
         """
-        return('SSH', )+self.conn.transport.getHost()
+        return self.conn.transport.getHost().address
 
     def stopWriting(self):
         """
diff --git twisted/conch/test/test_channel.py twisted/conch/test/test_channel.py
index a46596d..a1b930b 100644
--- twisted/conch/test/test_channel.py
+++ twisted/conch/test/test_channel.py
@@ -4,25 +4,16 @@
 """
 Test ssh/channel.py.
 """
+from zope.interface.verify import verifyObject
+
 from twisted.conch.ssh import channel
+from twisted.conch.ssh.transport import SSHServerTransport
+from twisted.internet.address import IPv4Address
+from twisted.internet.interfaces import ITransport
+from twisted.test.proto_helpers import StringTransport
 from twisted.trial import unittest
 
 
-class MockTransport(object):
-    """
-    A mock Transport.  All we use is the getPeer() and getHost() methods.
-    Channels implement the ITransport interface, and their getPeer() and
-    getHost() methods return ('SSH', <transport's getPeer/Host value>) so
-    we need to implement these methods so they have something to draw
-    from.
-    """
-    def getPeer(self):
-        return ('MockPeer',)
-
-    def getHost(self):
-        return ('MockHost',)
-
-
 class MockConnection(object):
     """
     A mock for twisted.conch.ssh.connection.SSHConnection.  Record the data
@@ -35,7 +26,6 @@ class MockConnection(object):
     @ivar closes: a C{dict} mapping channel id #s to True if that channel sent
         a close message.
     """
-    transport = MockTransport()
 
     def __init__(self):
         self.data = {}
@@ -100,6 +90,10 @@ class ChannelTestCase(unittest.TestCase):
         self.assertEqual(c.data, None)
         self.assertEqual(c.avatar, None)
 
+        # Check interface implementation.
+        self.assertTrue(ITransport.providedBy(c))
+        verifyObject(ITransport, c)
+
         c2 = channel.SSHChannel(1, 2, 3, 4, 5, 6, 7)
         self.assertEqual(c2.localWindowSize, 1)
         self.assertEqual(c2.localWindowLeft, 1)
@@ -266,14 +260,30 @@ class ChannelTestCase(unittest.TestCase):
         self.channel.addWindowBytes(8) # send extended data
         self.assertTrue(self.conn.closes.get(self.channel))
 
+    def connectTransport(self, hostAddress=None, peerAddress=None):
+        """
+        Connect a SSHTransport which is already connected to a remote peer to
+        the channel under test.
+        """
+        transport = SSHServerTransport()
+        transport.makeConnection(StringTransport(
+            hostAddress=hostAddress, peerAddress=peerAddress))
+        self.channel.conn.transport = transport
+
     def test_getPeer(self):
         """
-        Test that getPeer() returns ('SSH', <connection transport peer>).
+        Gets info from connected transport.
         """
-        self.assertEqual(self.channel.getPeer(), ('SSH', 'MockPeer'))
+        peer = IPv4Address('TCP', '192.168.0.1', 54321)
+        self.connectTransport(peerAddress=peer)
+
+        self.assertEqual(peer, self.channel.getPeer())
 
     def test_getHost(self):
         """
-        Test that getHost() returns ('SSH', <connection transport host>).
+        Gets info from connected transport.
         """
-        self.assertEqual(self.channel.getHost(), ('SSH', 'MockHost'))
+        peer = IPv4Address('TCP', '127.0.0.1', 12345)
+        self.connectTransport(hostAddress=peer)
+
+        self.assertEqual(peer, self.channel.getHost())
diff --git twisted/conch/topfiles/5999.bug twisted/conch/topfiles/5999.bug
new file mode 100644
index 0000000..b0daa8e
--- /dev/null
+++ twisted/conch/topfiles/5999.bug
@@ -0,0 +1 @@
+Fix getPeer and getHost in twisted.conch.ssh.channel.SSHChannel.
\ No newline at end of file
