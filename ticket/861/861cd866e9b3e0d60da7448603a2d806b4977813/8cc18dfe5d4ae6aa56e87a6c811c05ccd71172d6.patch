=== modified file 'twisted/web/_newclient.py'
--- twisted/web/_newclient.py	2011-04-03 00:43:34 +0000
+++ twisted/web/_newclient.py	2011-04-03 03:00:00 +0000
@@ -1420,6 +1420,13 @@
         self._currentRequest.stopWriting()
 
 
+    def _connectionLost_TRANSMITTING_AFTER_RECEIVING_RESPONSE(self, reason):
+        """
+        Move to the C{'CONNECTION_LOST'} state.
+        """
+        self._state = 'CONNECTION_LOST'
+
+
     def _connectionLost_WAITING(self, reason):
         """
         Disconnect the response parser so that it can propagate the event as

=== modified file 'twisted/web/test/test_newclient.py'
--- twisted/web/test/test_newclient.py	2011-02-14 04:45:15 +0000
+++ twisted/web/test/test_newclient.py	2011-04-03 02:59:01 +0000
@@ -1054,6 +1054,35 @@
         return d
 
 
+    def test_connectionLostAfterReceivingResponseBeforeRequestGenerationDone(self):
+        """
+        If response bytes are delivered to L{HTTP11ClientProtocol} before the
+        request completes, calling L{connectionLost} on the protocol will
+        result in protocol being moved to C{'CONNECTION_LOST'} state.
+        """
+        request = SlowRequest()
+        d = self.protocol.request(request)
+        self.protocol.dataReceived(
+            "HTTP/1.1 400 BAD REQUEST\r\n"
+            "Content-Length: 9\r\n"
+            "\r\n"
+            "tisk tisk")
+        def cbResponse(response):
+            p = AccumulatingProtocol()
+            whenFinished = p.closedDeferred = Deferred()
+            response.deliverBody(p)
+            return whenFinished.addCallback(
+                lambda ign: (response, p.data))
+        d.addCallback(cbResponse)
+        def cbAllResponse(ignore):
+            request.finished.callback(None)
+            # Nothing dire will happen when the connection is lost
+            self.protocol.connectionLost(Failure(ArbitraryException()))
+            self.assertEquals(self.protocol._state, 'CONNECTION_LOST')
+        d.addCallback(cbAllResponse)
+        return d
+
+
     def test_receiveResponseBody(self):
         """
         The C{deliverBody} method of the response object with which the

