commit ae58c85b35854c47c8902d957e263b2cbf183607
Author: Wolfgang Rohdewald <wolfgang@rohdewald.de>
Date:   Mon Sep 29 11:37:24 2014 +0200

    Ticket 7653. spread.jelly: deprecate unjellying instances

diff --git twisted/spread/jelly.py twisted/spread/jelly.py
index 4173d28..c26a095 100644
--- twisted/spread/jelly.py
+++ twisted/spread/jelly.py
@@ -869,6 +869,18 @@ class _Unjellier:
 
 
     def _unjelly_instance(self, rest):
+        """
+        (internal) Unjelly an instance.
+        I am unused.
+        I am never called directly, only by the unjellier.
+        But the jellier never jellies an instance, so the jellier
+        cannot call me.
+        When removing me, also remove instance_atom
+        """
+        warnings.warn("Unjellying an instance is deprecated since Twisted 14.1.0"
+            " and unsupported for Python 3",
+            DeprecationWarning, stacklevel=2)
+
         clz = self.unjelly(rest[0])
         if type(clz) is not types.ClassType:
             raise InsecureJelly("Instance found with non-class class.")
diff --git twisted/test/test_jelly.py twisted/test/test_jelly.py
index 184dc35..35ea5a7 100644
--- twisted/test/test_jelly.py
+++ twisted/test/test_jelly.py
@@ -620,6 +620,39 @@ class JellyTestCase(unittest.TestCase):
 
 
 
+class JellyDeprecationTests(unittest.TestCase):
+    """
+    Tests for deprecated Jelly things
+    """
+
+    def test_deprecatedInstanceAtom(self):
+        """
+        Unjellying the instance atom is deprecated with 14.1.0.
+        Twisted itself does not jelly them anymore since at
+        least 2003.
+        """
+        unjellier = jelly._Unjellier(None, None, None)
+        try:
+            unjellier._unjelly_instance(b'')
+        except:
+            # we only want to know if _unjelly_instance warns
+            pass
+        warnings = self.flushWarnings(
+            offendingFunctions=[self.test_deprecatedInstanceAtom])
+        self.assertEqual(len(warnings), 1)
+        self.assertEqual(
+            warnings[0]['message'],
+                'Unjellying an instance is deprecated since Twisted 14.1.0'
+                ' and unsupported for Python 3')
+        self.assertEqual(
+            warnings[0]['category'],
+            DeprecationWarning)
+
+    if _PY3:
+        # unjellying instance atoms is not supported for Python 3
+        test_deprecatedInstanceAtom.skip = "Not available in Python 3"
+
+
 class ClassA(pb.Copyable, pb.RemoteCopy):
     def __init__(self):
         self.ref = ClassB(self)
