=== modified file 'twisted/web/template.py'
--- twisted/web/template.py	2011-03-21 18:45:11 +0000
+++ twisted/web/template.py	2011-10-14 19:08:51 +0000
@@ -331,6 +331,23 @@
     return s.document
 
 
+class TagLoader(object):
+    """
+    An L{ITemplateLoader} that loads existing L{IRenderable} providers.
+
+    @type tag: An L{IRenderable} provider.
+    @param tag: The object which will be loaded.
+    """
+    implements(ITemplateLoader)
+
+    def __init__(self, tag):
+        self.tag = tag
+
+
+    def load(self):
+        return [self.tag]
+
+
 class XMLString(object):
     """
     An L{ITemplateLoader} that loads and parses XML from a string.
@@ -424,7 +441,7 @@
 from twisted.web._flatten import flatten, flattenString
 
 __all__ = [
-    'TEMPLATE_NAMESPACE', 'VALID_HTML_TAG_NAMES', 'Element', 'renderer',
+    'TEMPLATE_NAMESPACE', 'VALID_HTML_TAG_NAMES', 'Element', 'TagLoader', 'renderer',
     'flatten', 'flattenString', 'tags', 'Comment', 'CDATA', 'Tag', 'slot'
 ]
 

=== modified file 'twisted/web/test/test_template.py'
--- twisted/web/test/test_template.py	2011-03-21 13:17:42 +0000
+++ twisted/web/test/test_template.py	2011-10-14 18:58:35 +0000
@@ -9,10 +9,13 @@
 
 from cStringIO import StringIO
 
+from zope.interface.verify import verifyObject
+
 from twisted.internet.defer import succeed, gatherResults
 from twisted.trial.unittest import TestCase
 from twisted.web.template import (
-    Element, renderer, XMLFile, XMLString)
+    Element, TagLoader, tags, renderer, XMLFile, XMLString)
+from twisted.web.iweb import ITemplateLoader
 
 from twisted.web.error import MissingTemplateLoader, MissingRenderMethod
 
@@ -454,3 +457,26 @@
         self.assertFlattensImmediately(e2, "<p>3 1</p>")
 
 
+class TestTagLoader(FlattenTestCase):
+    """
+    Tests for L{TestTagLoader}
+    """
+    def setUp(self):
+        self.loader = TagLoader(tags.i('test'))
+
+    def test_loadsList(self):
+        """
+        load() returns a list, per L{ITemplateLoader}
+        """
+        self.assertIsInstance(self.loader.load(), list)
+
+    def test_flatten(self):
+        """
+        L{TagLoader} can be used in an L{Element}, and flattens properly.
+        """
+        e = Element(self.loader)
+
+        return self.assertFlattensTo(
+            e,
+            '<i>test</i>'
+        )

=== added file 'twisted/web/topfiles/5040.feature'
--- twisted/web/topfiles/5040.feature	1970-01-01 00:00:00 +0000
+++ twisted/web/topfiles/5040.feature	2011-10-14 19:04:56 +0000
@@ -0,0 +1,3 @@
+New class twisted.web.template.TagLoader provides an ITemplateLoader
+implementation which loads already-created twisted.web.iweb.IRenderable
+providers.

