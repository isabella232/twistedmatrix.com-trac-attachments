Index: twisted/test/test_ftp.py
===================================================================
--- twisted/test/test_ftp.py	(revision 24576)
+++ twisted/test/test_ftp.py	(working copy)
@@ -64,7 +64,7 @@
     """
     clientFactory = ftp.FTPClientBasic
 
-    def setUp(self):
+    def setUp(self, userAnonymous="anonymous"):
         # Create a directory
         self.directory = self.mktemp()
         os.mkdir(self.directory)
@@ -73,7 +73,7 @@
         p = portal.Portal(ftp.FTPRealm(self.directory))
         p.registerChecker(checkers.AllowAnonymousAccess(),
                           credentials.IAnonymous)
-        self.factory = ftp.FTPFactory(portal=p)
+        self.factory = ftp.FTPFactory(portal=p, userAnonymous=userAnonymous)
         port = reactor.listenTCP(0, self.factory, interface="127.0.0.1")
         self.addCleanup(port.stopListening)
 
@@ -140,7 +140,26 @@
             ['230 Anonymous login ok, access restrictions apply.'],
             chainDeferred=d)
 
+class FTPAnonymousTestCase(FTPServerTestCase):
+    """Simple tests for an FTP server with different anonymous username.
+    The new anonymous username used in this test case is "guest"
+    """
+    clientFactory = ftp.FTPClientBasic
 
+    def setUp(self):
+        # Running the FTPServerTestCase setUp, but asking him to use another
+        # anonymous username
+        return FTPServerTestCase.setUp(self, "guest")
+
+    def testAnonymousLogin(self):
+        d = self.assertCommandResponse(
+            'USER guest',
+            ['331 Guest login ok, type your email address as password.'])
+        return self.assertCommandResponse(
+            'PASS test@twistedmatrix.com',
+            ['230 Anonymous login ok, access restrictions apply.'],
+            chainDeferred=d)
+
 class BasicFTPServerTestCase(FTPServerTestCase):
     def testNotLoggedInReply(self):
         """When not logged in, all commands other than USER and PASS should
