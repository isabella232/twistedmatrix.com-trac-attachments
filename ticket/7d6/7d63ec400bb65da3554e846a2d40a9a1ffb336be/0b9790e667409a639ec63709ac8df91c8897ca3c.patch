Index: twisted/internet/test/test_tcp.py
===================================================================
--- twisted/internet/test/test_tcp.py	(revision 40183)
+++ twisted/internet/test/test_tcp.py	(working copy)
@@ -2262,9 +2262,6 @@
 
         # Make sure everything was shutdown correctly:
         self.assertEqual(reactor.removeAll(), [])
-        # The reactor always has a timeout added in runReactor():
-        delayedCalls = reactor.getDelayedCalls()
-        self.assertEqual(len(delayedCalls), 1, map(str, delayedCalls))
 
         if clientConnectionLostReason is not None:
             self.assertIsInstance(
Index: twisted/internet/test/reactormixins.py
===================================================================
--- twisted/internet/test/reactormixins.py	(revision 40183)
+++ twisted/internet/test/reactormixins.py	(working copy)
@@ -285,11 +285,13 @@
             timedOut.append(None)
             reactor.stop()
 
-        reactor.callLater(timeout, stop)
+        timedOutCall = reactor.callLater(timeout, stop)
         reactor.run()
         if timedOut:
             raise TestTimeoutError(
                 "reactor still running after %s seconds" % (timeout,))
+        if not timedOut:
+            timedOutCall.cancel()
 
 
     def makeTestCaseClasses(cls):
