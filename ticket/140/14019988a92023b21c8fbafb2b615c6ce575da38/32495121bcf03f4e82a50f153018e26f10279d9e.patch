diff --git twisted/internet/test/test_udp.py twisted/internet/test/test_udp.py
index 4452e2c..1392fe4 100644
--- twisted/internet/test/test_udp.py
+++ twisted/internet/test/test_udp.py
@@ -192,6 +192,17 @@ class UDPPortTestsMixin(object):
         self.assertIn(repr(port.getHost().port), str(port))
 
 
+    def test_allowBroadcast(self):
+        """
+        L{IListeningPort.setBroadcastAllowed} sets broadcast to be allowed
+        on the socket.
+        """
+        reactor = self.buildReactor()
+        port = self.getListeningPort(reactor, DatagramProtocol())
+        port.setBroadcastAllowed(True)
+        self.assertTrue(port.getBroadcastAllowed())
+
+
 
 class UDPServerTestsBuilder(ReactorBuilder,
                             UDPPortTestsMixin, DatagramTransportTestsMixin):
diff --git twisted/internet/udp.py twisted/internet/udp.py
index 9dc55df..b68f63d 100644
--- twisted/internet/udp.py
+++ twisted/internet/udp.py
@@ -354,6 +354,27 @@ class Port(base.BasePort):
         return address.IPv4Address('UDP', *self.socket.getsockname())
 
 
+    def setBroadcastAllowed(self, enabled):
+        """
+        Set whether this UDP socket may broadcast. This is disabled by default.
+
+        @param enabled: Whether the socket may broadcast.
+        @type enabled: C{bool}
+        """
+        if enabled == True: enabled_int = 1
+        else: enabled_int = 0
+        self.socket.setsockopt(
+            socket.SOL_SOCKET, socket.SO_BROADCAST, enabled_int)
+
+
+    def getBroadcastAllowed(self):
+        """
+        Return whether this UDP socket may broadcast.
+        """
+        return operator.truth(
+            self.socket.getsockopt(socket.SOL_SOCKET, socket.SO_BROADCAST))
+
+
 
 class MulticastMixin:
     """
