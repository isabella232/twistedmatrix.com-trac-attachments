Index: twisted/internet/_glibbase.py
===================================================================
--- twisted/internet/_glibbase.py	(revision 33585)
+++ twisted/internet/_glibbase.py	(working copy)
@@ -12,6 +12,7 @@
 """
 
 import signal
+from functools import partial
 
 from twisted.internet import base, posixbase, selectreactor
 from twisted.internet.interfaces import IReactorFDSet
@@ -314,7 +315,14 @@
         self._reschedule()
 
 
+    def registerGtkApplication(self, app):
+        """
+        Support arbitrary GtkApplication.run main loops, instead of the default one.
+        """
+        self._run = partial(app.run, None)
 
+
+
 class PortableGlibReactorBase(GlibSignalMixin, selectreactor.SelectReactor):
     """
     Base class for GObject event loop reactors that works on Windows.
@@ -366,3 +374,10 @@
         if timeout is None:
             timeout = 0.01
         self._simtag = self._timeout_add(int(timeout * 1000), self.simulate)
+
+
+    def registerGApplication(self, app):
+        """
+        Support arbitrary GApplication.run main loops, instead of the default one.
+        """
+        self._run = partial(app.run, None)
Index: doc/core/howto/choosing-reactor.xhtml
===================================================================
--- doc/core/howto/choosing-reactor.xhtml	(revision 33585)
+++ doc/core/howto/choosing-reactor.xhtml	(working copy)
@@ -40,6 +40,7 @@
 
     <ul>
       <li><a href="#gtk">GTK+ 2.0</a></li>
+	  <li><a href="#gtk3">GTK+ 3.0</a></li>
       <li><a href="#tkinter">Tkinter</a></li>
       <li><a href="#wxpython">wxPython</a></li>
       <li><a href="#win32_wfmo">Win32</a></li>
@@ -200,6 +201,24 @@
 from twisted.internet import reactor
 </pre>
 
+    <h3>GTK+ 3.0</h3><a name="gtk3" />
+
+	<p>Twisted integrates with <a href="http://gtk.org">GTK+ 3</a> through <a href="http://live.gnome.org/PyGObject">PyGObject's</a> introspection using the <code>gtk3reactor</code>. This reactor functions similarly to the gtk2reactor</p>
+
+	<p>GLib 3.0 introduces the concept of GApplication, a class that handles application uniqueness in a cross-platform way and provides its own main loop. Its counterpart GtkApplication also handles application lifetime with respect to open windows.</p>
+
+<pre class="python">
+from twisted.internet import gtk3reactor
+gtk3reactor.install
+
+from gi.repository import Gtk
+app = Gtk.Application(...)
+
+from twisted import reactor
+reactor.registerGtkApplication(app)
+reactor.run()
+</pre>
+
     <h3>wxPython</h3><a name="wxpython" />
 
     <p>Twisted currently supports two methods of integrating
