Index: interfaces.py
===================================================================
--- interfaces.py	(revision 22460)
+++ interfaces.py	(working copy)
@@ -369,7 +369,7 @@
         """
         Spawn a process, with a process protocol.
 
-        @param processProtocol: a L{twisted.internet.protocol.ProcessProtocol}
+        @param processProtocol: a L{twisted.internet.interfaces.IProcessProtocol}
             instance
 
         @param executable: the file name to spawn - the full path should be
@@ -409,7 +409,7 @@
                          attached to the child at that file descriptor: the
                          child will be able to write to that file descriptor
                          and the parent will receive read notification via the
-                         L{IProcessTransport.childDataReceived} callback.  This
+                         L{IProcessProtocol.childDataReceived} callback.  This
                          is useful for the child's stdout and stderr.
 
                          If it is the string 'w', similar setup to the previous
@@ -1005,6 +1005,46 @@
         """
 
 
+class IProcessProtocol(Interface):
+    """
+    Providers of this interface can respond to events from a protocol spawned
+    by Twisted.
+    """
+
+    def childDataReceived(childFD, data):
+        """
+        Called when data arrives from the child process.
+
+        @param childFD: file id one which the data was received from the child
+        process.
+
+        @param data: data read from the child's file descriptor.
+        """
+
+
+    def childConnectionLost( childFD):
+        """
+        Called when connection lost from child process.
+
+        @param childFD: file descriptor id that was lost
+        """
+
+
+    def makeConnection(processTransport):
+        """
+        Make a connection from this Process Protocol to a process Transport.
+
+        @param processTransport: IProcessTransprot
+        """
+
+
+    def processEnded( reason):
+        """
+        This will be called when the subprocess is finished.
+
+        @type reason: L{twisted.python.failure.Failure}
+        """
+        
 class IHalfCloseableProtocol(Interface):
     """Implemented to indicate they want notification of half-closes.
 
