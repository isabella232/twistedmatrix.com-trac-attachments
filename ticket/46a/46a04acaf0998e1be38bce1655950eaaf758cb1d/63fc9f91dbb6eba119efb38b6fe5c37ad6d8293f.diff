Index: docs/core/examples/ssl_clientauth_server_endpoints.py
===================================================================
--- docs/core/examples/ssl_clientauth_server_endpoints.py	(revision 46085)
+++ docs/core/examples/ssl_clientauth_server_endpoints.py	(working copy)
@@ -42,6 +42,7 @@
 
 from twisted.internet import defer, endpoints, protocol, task
 from twisted.python import log
+from twisted.python.filepath import FilePath
 
 
 class EchoProtocol(protocol.Protocol):
@@ -73,6 +74,11 @@
     # Set up a factory to create connection handlers for our server
     factory = protocol.Factory.forProtocol(EchoProtocol)
 
+    # Set up a FilePath for this directory so that this example can be run
+    # from wherever
+    thisDirectory = FilePath(__file__).parent()
+    # Set up a second one for just the cert/key file
+    keyFile = thisDirectory.child("server.pem")
     # Set the descriptor we'll pass to serverFromString.
     #   ssl: Use SSL for the socket (as opposed to TCP (unsecured) or another
     #     kind of connection
Index: docs/core/howto/endpoints.rst
===================================================================
--- docs/core/howto/endpoints.rst	(revision 46085)
+++ docs/core/howto/endpoints.rst	(working copy)
@@ -203,11 +203,11 @@
      Since this argument is required for the ``DHE``-family of ciphers that offer perfect forward secrecy (PFS), it is recommended to specify one.
      Such a file can be created using ``openssl dhparam -out dh_param_1024.pem -2 1024``.
      Please refer to `OpenSSL's documentation on dhparam <http://www.openssl.org/docs/apps/dhparam.html>`_ for further details.
-   - ``caCertsDir`` will verify client certificates using CA certificates in the provided directory if specified. Certificates that pass verification will be accessible from the connection's transport (:api:`twisted.internet.interfaces.ISSLTransport.getPeerCertificate <ISSLTransport.getPeerCertificate>`)
+   - ``clientCACertsPath`` will verify client certificates using CA certificates in the provided directory if specified. Certificates that pass verification will be accessible from the connection's transport (:api:`twisted.internet.interfaces.ISSLTransport.getPeerCertificate <ISSLTransport.getPeerCertificate>`)
    - ``requireCert`` will, if set to ``yes``, require clients to have valid certificates and disconnect clients that do not. Certificates must pass verification with a CA cert in ``caCertsDir``. This parameter does nothing when ``caCertsDir`` is not used.
 
    For example, ``ssl:port=443:privateKey=/etc/ssl/server.pem:extraCertChain=/etc/ssl/chain.pem:sslmethod=SSLv3_METHOD:``
-   ``dhParameters=dh_param_1024.pem:caCertsDir=/etc/ssl/certs:requireCert=yes``.
+   ``dhParameters=dh_param_1024.pem:clientCACertsPath=/etc/ssl/certs:requireCert=yes``.
 
 UNIX
    Supported arguments: ``address``, ``mode``, ``backlog``, ``lockfile``.
