Index: twisted/scripts/trial.py
===================================================================
--- twisted/scripts/trial.py	(revision 12697)
+++ twisted/scripts/trial.py	(working copy)
@@ -623,12 +623,19 @@
 
 def call_until_failure(f, *args, **kwargs):
     count = 1
-    print "Test Pass %d" % count
-    suite = f(*args, **kwargs)
+    def doPass():
+        print "Test Pass %d" % count
+        from twisted.trial import unittest
+        from twisted.internet import defer, reactor
+        d = defer.Deferred()
+        reactor.addSystemEventTrigger('after', 'shutdown', lambda: d.callback(None))
+        suite = f(*args, **kwargs)
+        unittest.wait(d)
+        return suite
+    suite = doPass()
     while itrial.ITestStats(suite).allPassed:
         count += 1
-        print "Test Pass %d" % count
-        suite = f(*args, **kwargs)
+        suite = doPass()
     return suite
 
 
Index: twisted/trial/test/test_trial.py
===================================================================
--- twisted/trial/test/test_trial.py	(revision 12697)
+++ twisted/trial/test/test_trial.py	(working copy)
@@ -233,3 +233,26 @@
 
         
 FunctionalTest.timeout = 30.0
+
+
+class ShutdownTestCase(unittest.TestCase):
+
+    def setUp(self):
+        self.trigger = reactor.addSystemEventTrigger('during', 'shutdown', self.onShutdown)
+        
+    def tearDown(self):
+        self.assertEquals(None, self.trigger)
+
+    def testShutdown(self):
+        try:
+            d = defer.Deferred()
+            reactor.callLater(0.5, d.callback, None)
+            unittest.wait(d)
+        finally:
+            reactor.removeSystemEventTrigger(self.trigger)
+            self.trigger = None
+
+    def onShutdown(self):
+        log.msg('shutdown event observed!')
+
+
