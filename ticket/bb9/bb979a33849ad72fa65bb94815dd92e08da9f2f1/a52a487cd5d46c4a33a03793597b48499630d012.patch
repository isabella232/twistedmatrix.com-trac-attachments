Index: twisted/protocols/amp.py
===================================================================
--- twisted/protocols/amp.py	(revision 21504)
+++ twisted/protocols/amp.py	(working copy)
@@ -1208,6 +1208,11 @@
 
         @return: An instance of this L{Command}'s C{commandType}.
         """
+        argnames = [_wireNameToPythonIdentifier(arg[0]) for arg in cls.arguments]
+        for intendedArg in objects:
+            if intendedArg not in cls.arguments and intendedArg not in argnames:
+                raise InvalidSignature(
+                    "%s is not a valid argument" % (intendedArg,))
         return _objectsToStrings(objects, cls.arguments, cls.commandType(),
                                  proto)
     makeArguments = classmethod(makeArguments)
Index: twisted/test/test_amp.py
===================================================================
--- twisted/test/test_amp.py	(revision 21504)
+++ twisted/test/test_amp.py	(working copy)
@@ -1578,3 +1578,15 @@
                              ({"weird": argument}, client))
         response.addCallback(gotResponse)
         return response
+
+    def test_wrongParameter(self):
+        """
+        Making a remote call with an argument which is not specified in a
+        L{amp.Command}'s arguments list should raise
+        L{amp.InvalidSignature}.
+        """
+        client = NoNetworkProtocol()
+        self.assertRaises(
+            amp.InvalidSignature,
+            client.callRemote, Hello, hello="hello", bogusArgument=object())
+
