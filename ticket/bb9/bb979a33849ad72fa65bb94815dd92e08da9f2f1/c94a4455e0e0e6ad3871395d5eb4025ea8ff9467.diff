Index: twisted/protocols/amp.py
===================================================================
--- twisted/protocols/amp.py	(revision 21188)
+++ twisted/protocols/amp.py	(working copy)
@@ -1208,6 +1208,10 @@
 
         @return: An instance of this L{Command}'s C{commandType}.
         """
+	argnames = [arg[0] for arg in cls.arguments]
+	for intendedArg in objects:
+	    if intendedArg not in argnames:
+		raise InvalidSignature
         return _objectsToStrings(objects, cls.arguments, cls.commandType(),
                                  proto)
     makeArguments = classmethod(makeArguments)
Index: twisted/test/test_amp.py
===================================================================
--- twisted/test/test_amp.py	(revision 21188)
+++ twisted/test/test_amp.py	(working copy)
@@ -5,6 +5,7 @@
 from twisted.python import filepath
 from twisted.protocols import amp
 from twisted.test import iosim
+from twisted.test.proto_helpers import StringTransport
 from twisted.trial import unittest
 from twisted.internet import protocol, defer, error
 
@@ -1578,3 +1579,15 @@
                              ({"weird": argument}, client))
         response.addCallback(gotResponse)
         return response
+
+
+    def test_wrongParameter(self):
+        """
+        Making a remote call with an argument which is not specified in a
+        L{amp.Command}'s arguments list should raise
+        L{amp.InvalidSignature}.
+        """
+        client = NoNetworkProtocol()
+        self.assertRaises(
+            amp.InvalidSignature,
+            client.callRemote, Hello, bogusArgument=object())
