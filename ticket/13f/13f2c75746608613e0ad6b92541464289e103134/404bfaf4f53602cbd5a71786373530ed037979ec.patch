Index: twisted/web/http.py
===================================================================
--- twisted/web/http.py	(revision 43486)
+++ twisted/web/http.py	(working copy)
@@ -1860,9 +1860,10 @@
     referrer = _escape(request.getHeader(b"referer") or b"-")
     agent = _escape(request.getHeader(b"user-agent") or b"-")
     line = (
-        u'"%(ip)s" - - %(timestamp)s "%(method)s %(uri)s %(protocol)s" '
+        u'"%(ip)s" - %(user)s %(timestamp)s "%(method)s %(uri)s %(protocol)s" '
         u'%(code)d %(length)s "%(referrer)s" "%(agent)s"' % dict(
             ip=_escape(request.getClientIP() or b"-"),
+            user=_escape(request.getUser() or b"-"),
             timestamp=timestamp,
             method=_escape(request.method),
             uri=_escape(request.uri),
Index: twisted/web/test/requesthelper.py
===================================================================
--- twisted/web/test/requesthelper.py	(revision 43486)
+++ twisted/web/test/requesthelper.py	(working copy)
@@ -96,6 +96,7 @@
     uri = b'http://dummy/'
     method = b'GET'
     client = None
+    user = b''
 
     def registerProducer(self, prod,s):
         self.go = 1
@@ -281,6 +282,17 @@
         """
         return self.getClientIP()
 
+    def getUser(self):
+        """
+        Return the HTTP user sent with this request, if any.
+
+        If no user was supplied, return the empty string.
+
+        @returns: the HTTP user, if any
+        @rtype: C{bytes}
+        """
+        return self.user
+
 DummyRequest.getClient = deprecated(
     Version("Twisted", 14, 1, 0),
     "Twisted Names to resolve hostnames")(DummyRequest.getClient)
Index: twisted/web/test/test_web.py
===================================================================
--- twisted/web/test/test_web.py	(revision 43486)
+++ twisted/web/test/test_web.py	(working copy)
@@ -979,7 +979,30 @@
             line)
 
 
+    def test_withUser(self):
+        """
+        If a user is available in the HTTP Authentication header, it's included
+        in the result.
+        """
+        reactor = Clock()
+        reactor.advance(1234567890)
 
+        timestamp = http.datetimeToLogString(reactor.seconds())
+        request = DummyRequestForLogTest(http.HTTPFactory())
+        request.client = IPv4Address("TCP", b"evil x-forwarded-for \x80", 12345)
+        request.method = b"POS\x81"
+        request.protocol = b"HTTP/1.\x82"
+        request.headers[b"referer"] = b"evil \x83"
+        request.headers[b"user-agent"] = b"evil \x84"
+
+        line = http.combinedLogFormatter(timestamp, request)
+        self.assertEqual(
+            u'"evil x-forwarded-for \\x80" - - [13/Feb/2009:23:31:30 +0000] '
+            u'"POS\\x81 /dummy HTTP/1.0" 123 - "evil \\x83" "evil \\x84"',
+            line)
+
+
+
 class ProxiedLogFormatterTests(unittest.TestCase):
     """
     Tests for L{twisted.web.http.proxiedLogFormatter}.
