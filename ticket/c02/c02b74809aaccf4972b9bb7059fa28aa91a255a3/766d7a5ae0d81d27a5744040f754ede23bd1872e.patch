Index: twisted/test/test_pbfailure.py
===================================================================
--- twisted/test/test_pbfailure.py	(revision 13121)
+++ twisted/test/test_pbfailure.py	(working copy)
@@ -106,9 +106,7 @@
         return 4200
 
     def failureNoSuch(self, fail):
-        # XXX maybe PB shouldn't send AttributeErrors? and make generic exception
-        # for no such method?
-        fail.trap(AttributeError)
+        fail.trap(pb.NoSuchMethod)
         self.compare(fail.traceback, "Traceback unavailable\n")
         return 42000
 
Index: twisted/spread/flavors.py
===================================================================
--- twisted/spread/flavors.py	(revision 13121)
+++ twisted/spread/flavors.py	(working copy)
@@ -50,6 +50,10 @@
 remote_atom = "remote"
 
 
+class NoSuchMethod(AttributeError):
+    """Raised if there is no such remote method"""
+
+
 class IPBRoot(components.Interface):
     """Factory for root Referenceable objects for PB servers."""
 
@@ -108,7 +112,9 @@
         """
         args = broker.unserialize(args)
         kw = broker.unserialize(kw)
-        method = getattr(self, "remote_%s" % message)
+        method = getattr(self, "remote_%s" % message, None)
+        if method is None:
+            raise NoSuchMethod("No such method: remote_%s" % message)
         try:
             state = method(*args, **kw)
         except TypeError:
Index: twisted/spread/pb.py
===================================================================
--- twisted/spread/pb.py	(revision 13121)
+++ twisted/spread/pb.py	(working copy)
@@ -86,7 +86,7 @@
 
 # Tightly coupled sibling import
 from flavors import Serializable
-from flavors import Referenceable
+from flavors import Referenceable, NoSuchMethod
 from flavors import Root, IPBRoot
 from flavors import ViewPoint
 from flavors import Viewable
