--- Python25/Lib/site-packages/twisted/internet/_dumbwin32proc.py.orig	2007-03-07 09:23:55.629910400 +0100
+++ Python25/Lib/site-packages/twisted/internet/_dumbwin32proc.py	2007-03-07 09:35:53.221756800 +0100
@@ -118,6 +118,7 @@
     implements(IProcessTransport, IConsumer, IProducer)
 
     buffer = ''
+    pid = None
 
     def __init__(self, reactor, protocol, command, args, environment, path):
         _pollingfile._PollingTimer.__init__(self, reactor)
@@ -172,7 +173,7 @@
         cmdline = quoteArguments(args)
         # TODO: error detection here.
         def doCreate():
-            self.hProcess, self.hThread, dwPid, dwTid = win32process.CreateProcess(
+            self.hProcess, self.hThread, self.pid, dwTid = win32process.CreateProcess(
                 command, cmdline, None, None, 1, 0, env, path, StartupInfo)
         try:
             doCreate()
@@ -242,7 +243,16 @@
         # self.reactor.addEvent(self.hProcess, self, 'inConnectionLost')
 
 
+    def __repr__(self):
+        return "<%s pid=%s>" % (self.__class__.__name__, self.pid)
+
+    def processEnded(self, status):
+        # this is called when the child terminates (SIGCHLD)
+        self.pid = None
+
     def signalProcess(self, signalID):
+        if self.pid is None:
+            raise ProcessExitedAlready
         if signalID in ("INT", "TERM", "KILL"):
             win32process.TerminateProcess(self.hProcess, 1)
 
