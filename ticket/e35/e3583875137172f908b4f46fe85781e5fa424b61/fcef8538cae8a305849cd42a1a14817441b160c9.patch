diff --git twisted/python/logfile.py twisted/python/logfile.py
index bd55e51..d8d8099 100644
--- twisted/python/logfile.py
+++ twisted/python/logfile.py
@@ -1,6 +1,6 @@
 # -*- test-case-name: twisted.test.test_logfile -*-
 
-# Copyright (c) 2001-2007 Twisted Matrix Laboratories.
+# Copyright (c) 2001-2011 Twisted Matrix Laboratories.
 # See LICENSE for details.
 
 """
@@ -31,7 +31,6 @@ class BaseLogFile:
         current permissions of the file if the file exists.
         """
         self.directory = directory
-        assert os.path.isdir(self.directory)
         self.name = name
         self.path = os.path.join(directory, name)
         if defaultMode is None and os.path.exists(self.path):
diff --git twisted/test/test_logfile.py twisted/test/test_logfile.py
index 2db6e76..2c38c70 100644
--- twisted/test/test_logfile.py
+++ twisted/test/test_logfile.py
@@ -1,4 +1,4 @@
-# Copyright (c) 2001-2007 Twisted Matrix Laboratories.
+# Copyright (c) 2001-2011 Twisted Matrix Laboratories.
 # See LICENSE for details.
 
 from twisted.trial import unittest
@@ -251,6 +251,14 @@ class LogFileTestCase(unittest.TestCase):
         test_reopen.skip = "Can't test reopen on Windows"
 
 
+    def test_nonExistentDir(self):
+        """
+        Specifying an invalid directory to L{LogFile} raises C{IOError}.
+        """
+        e = self.assertRaises(IOError, logfile.LogFile, self.name, 'this_dir_does_not_exist')
+        self.assertEquals(str(e), "[Errno 2] No such file or directory: 'this_dir_does_not_exist/test.log'")
+
+
 
 class RiggedDailyLogFile(logfile.DailyLogFile):
     _clock = 0.0
diff --git twisted/topfiles/4701.misc twisted/topfiles/4701.misc
new file mode 100644
index 0000000..9a9defc
--- /dev/null
+++ twisted/topfiles/4701.misc
@@ -0,0 +1 @@
+Improved the error message of twisted.python.logfile.LogFile when the directoy does not exist.
