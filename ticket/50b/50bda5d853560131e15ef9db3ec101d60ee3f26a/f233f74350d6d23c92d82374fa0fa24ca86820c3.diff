Index: twisted/test/test_amp.py
===================================================================
--- twisted/test/test_amp.py	(revision 28756)
+++ twisted/test/test_amp.py	(working copy)
@@ -17,10 +17,12 @@
 from twisted.test import iosim
 from twisted.test.proto_helpers import StringTransport
 
+ssl = None
 try:
     from twisted.internet import ssl
 except ImportError:
-    ssl = None
+    pass
+
 if ssl and not ssl.supported:
     ssl = None
 
@@ -2571,12 +2573,19 @@
     strings = {
         "empty": "",
         "single": "\x00\x0210",
-        "multiple": "\x00\x011\x00\x0220\x00\x03500"}
+        "multiple": "\x00\x011\x00\x0220\x00\x03500",
+        "huge": "\x00\x74%d" %
+            (9999999999999999999999999999999999999999999999999999999999 *
+             9999999999999999999999999999999999999999999999999999999999),
+        "negative": "\x00\x02-1" }
 
     objects = {
         "empty": [],
         "single": [10],
-        "multiple": [1, 20, 500]}
+        "multiple": [1, 20, 500],
+        "huge": [9999999999999999999999999999999999999999999999999999999999 *
+                 9999999999999999999999999999999999999999999999999999999999],
+        "negative": [-1,] }
 
 
 class ListOfUnicodeTests(unittest.TestCase, ListOfTestsMixin):
Index: twisted/protocols/amp.py
===================================================================
--- twisted/protocols/amp.py	(revision 28756)
+++ twisted/protocols/amp.py	(working copy)
@@ -1271,7 +1271,10 @@
 
 class Integer(Argument):
     """
-    Convert to and from 'int'.
+    Encode any integer values of any size on the wire as the string
+    representation.
+
+    Example: 123 becomes "123"
     """
     fromString = int
     def toString(self, inObject):
