Index: twisted/names/test/test_hosts.py
===================================================================
--- twisted/names/test/test_hosts.py	(revision 0)
+++ twisted/names/test/test_hosts.py	(revision 0)
@@ -0,0 +1,49 @@
+# Copyright (c) Twisted Matrix Laboratories.
+# See LICENSE for details.
+
+from twisted.trial.unittest import TestCase
+from twisted.python.filepath import FilePath
+
+from twisted.names.hosts import searchFileFor
+
+class SearchHostsFileTests(TestCase):
+    """
+    Tests for L{searchFileFor}, a helper which finds an address for a
+    particular hostname in a I{hosts(5)}-style file.
+    """
+    def test_findAddress(self):
+        """
+        If there is an IPv4 address for the hostname passed to
+        L{searchFileFor}, it is returned.
+        """
+        hosts = FilePath(self.mktemp())
+        hosts.setContent(
+            "10.2.3.4 foo.example.com\n")
+        self.assertEqual(
+            "10.2.3.4", searchFileFor(hosts.path, "foo.example.com"))
+
+
+    def test_notFoundAddress(self):
+        """
+        If there is no address information for the hostname passed to
+        L{searchFileFor}, C{None} is returned.
+        """
+        hosts = FilePath(self.mktemp())
+        hosts.setContent(
+            "10.2.3.4 foo.example.com\n")
+        self.assertIdentical(
+            None, searchFileFor(hosts.path, "bar.example.com"))
+
+
+    def test_ignoreIPv6Address(self):
+        """
+        If there are both IPv4 and IPv6 addresses associated with the hostname
+        passed to L{searchFileFor}, the IPv4 address is returned.
+        """
+        hosts = FilePath(self.mktemp())
+        hosts.setContent(
+            "::1 foo.example.com\n"
+            "10.1.2.3 foo.example.com\n"
+            "fe80::21b:fcff:feee:5a1d foo.example.com\n")
+        self.assertEqual(
+            "10.1.2.3", searchFileFor(hosts.path, "foo.example.com"))
Index: twisted/names/topfiles/5098.bugfix
===================================================================
--- twisted/names/topfiles/5098.bugfix	(revision 0)
+++ twisted/names/topfiles/5098.bugfix	(revision 0)
@@ -0,0 +1 @@
+twisted.names.hosts now works for hosts with IPv6 and IPv4 addresses by ignoring the IPv6 address.
Index: twisted/names/hosts.py
===================================================================
--- twisted/names/hosts.py	(revision 31785)
+++ twisted/names/hosts.py	(working copy)
@@ -9,6 +9,7 @@
 from twisted.persisted import styles
 from twisted.python import failure
 from twisted.internet import defer
+from twisted.internet.abstract import isIPAddress
 
 from twisted.names import common
 
@@ -41,8 +42,11 @@
         if not line:
             continue
         parts = line.split()
+
+        # Give back *IPv4* addresses for matching names
         if name.lower() in [s.lower() for s in parts[1:]]:
-            return parts[0]
+            if isIPAddress(parts[0]):
+                return parts[0]
     return None
 
 
