Index: doc/mail/tutorial/smtpclient/smtpclient.xhtml
===================================================================
--- doc/mail/tutorial/smtpclient/smtpclient.xhtml	(revision 27896)
+++ doc/mail/tutorial/smtpclient/smtpclient.xhtml	(working copy)
@@ -11,7 +11,7 @@
 
 <h1>Twisted Mail Tutorial: Building an SMTP Client from Scratch</h1>
 
-<h2>Stuff</h2>
+<h2>Introduction</h2>
 
 <p>This tutorial will walk you through the creation of an extremely
 simple SMTP client application.  By the time the tutorial is complete,
@@ -32,9 +32,9 @@
 minimal <code>.tac</code> file</a> possible for use by
 <code>twistd</code>.</p>
 
-<blockquote><code>
+<pre class="python">
 from twisted.application import service
-</code></blockquote>
+</pre>
 
 <p>The first line of the <code>.tac</code> file imports
 <code>twisted.application.service</code>, a module which contains many
@@ -45,9 +45,9 @@
 central object on which to store certain kinds of deployment
 configuration.</p>
 
-<blockquote><code>
+<pre class="python">
 application = service.Application("SMTP Client Tutorial")
-</code></blockquote>
+</pre>
 
 <p>The second line of the <code>.tac</code> file creates a new
 <em>application service</em> and binds it to the local name
@@ -63,30 +63,30 @@
 href="smtpclient-1.tac">smtpclient-1.tac</a> using the
 <code>twistd</code> command line:</p>
 
-<blockquote><code>
+<pre class="python">
 twistd -ny smtpclient-1.tac
-</code></blockquote>
+</pre>
 
 <p>we are rewarded with the following output:</p>
 
-<blockquote><pre class="shell">
+<pre class="shell">
 exarkun@boson:~/mail/tutorial/smtpclient$ twistd -ny smtpclient-1.tac
 18:31 EST [-] Log opened.
 18:31 EST [-] twistd 2.0.0 (/usr/bin/python2.4 2.4.1) starting up
 18:31 EST [-] reactor class: twisted.internet.selectreactor.SelectReactor
 18:31 EST [-] Loading smtpclient-1.tac...
 18:31 EST [-] Loaded.
-</pre></blockquote>
+</pre>
 
 <p>As we expected, not much is going on.  We can shutdown this server
-by issueing <code>^C</code>:</p>
+by issuing <code>^C</code>:</p>
 
-<blockquote><pre class="shell">
+<pre class="shell">
 18:34 EST [-] Received SIGINT, shutting down.
 18:34 EST [-] Main loop terminated.
 18:34 EST [-] Server Shut Down.
 exarkun@boson:~/mail/tutorial/smtpclient$
-</pre></blockquote>
+</pre>
 
 <h3>SMTP Client 2</h3>
 
@@ -96,10 +96,10 @@
 closer to that level of complexity.  First, we need to import a few
 more things:</p>
 
-<blockquote><code><pre class="python">
+<pre class="python">
 from twisted.application import internet
 from twisted.internet import protocol
-</pre></code></blockquote>
+</pre>
 
 <p><code>twisted.application.internet</code> is another
 <em>application service</em> module.  It provides services for
@@ -112,9 +112,9 @@
 <p>The next line of <a href="smtpclient-2.tac">smtpclient-2.tac</a>
 instantiates a new <em>client factory</em>.</p>
 
-<blockquote><code>
+<pre class="python">
 smtpClientFactory = protocol.ClientFactory()
-</code></blockquote>
+</pre>
 
 <p><em>Client factories</em> are responsible for constructing
 <em>protocol instances</em> whenever connections are established.
@@ -127,9 +127,9 @@
 network somehow.  The next line of <code>smtpclient-2.tac</code> does
 just that:</p>
 
-<blockquote><code>
+<pre class="python">
 smtpClientService = internet.TCPClient(None, None, smtpClientFactory)
-</code></blockquote>
+</pre>
 
 <p>We'll ignore the first two arguments to
 <code>internet.TCPClient</code> for the moment and instead focus on
@@ -143,7 +143,7 @@
 <code>smtpclient-1.tac</code>, but the results might be a little
 disappointing:</p>
 
-<blockquote><code><pre class="shell">
+<pre class="shell">
 exarkun@boson:~/mail/tutorial/smtpclient$ twistd -ny smtpclient-2.tac
 18:55 EST [-] Log opened.
 18:55 EST [-] twistd SVN-Trunk (/usr/bin/python2.4 2.4.1) starting up
@@ -176,7 +176,7 @@
 18:55 EST [-] Main loop terminated.
 18:55 EST [-] Server Shut Down.
 exarkun@boson:~/mail/tutorial/smtpclient$
-</pre></code></blockquote>
+</pre>
 
 <p>What happened?  Those first two arguments to <code>TCPClient</code>
 turned out to be important after all.  We'll get to them in the next
@@ -187,16 +187,16 @@
 <p>Version three of our SMTP client only changes one thing.  The line
 from version two:</p>
 
-<blockquote><code>
+<pre class="python">
 smtpClientService = internet.TCPClient(None, None, smtpClientFactory)
-</code></blockquote>
+</pre>
 
 <p>has its first two arguments changed from <code>None</code> to
 something with a bit more meaning:</p>
 
-<blockquote><code>
+<pre class="python">
 smtpClientService = internet.TCPClient('localhost', 25, smtpClientFactory)
-</code></blockquote>
+</pre>
 
 <p>This directs the client to connect to <em>localhost</em> on port
 <em>25</em>.  This isn't the address we want ultimately, but it's a
@@ -204,7 +204,7 @@
 href="smtpclient-3.tac">smtpclient-3.tac</a> and see what this change
 gets us:</p>
 
-<blockquote><code><pre class="shell">
+<pre class="shell">
 exarkun@boson:~/mail/tutorial/smtpclient$ twistd -ny smtpclient-3.tac
 19:10 EST [-] Log opened.
 19:10 EST [-] twistd SVN-Trunk (/usr/bin/python2.4 2.4.1) starting up
@@ -243,7 +243,7 @@
 19:10 EST [-] Main loop terminated.
 19:10 EST [-] Server Shut Down.
 exarkun@boson:~/mail/tutorial/smtpclient$
-</pre></code></blockquote>
+</pre>
 
 <p>A meagre amount of progress, but the service still raises an
 exception.  This time, it's because we haven't specified a
@@ -262,14 +262,14 @@
 href="smtpclient-4.tac">smtpclient-4.tac</a>, we'll correct the
 oversight that caused the traceback in smtpclient-3.tac:</p>
 
-<blockquote><code>
+<pre class="python">
 smtpClientFactory.protocol = protocol.Protocol
-</code></blockquote>
+</pre>
 
 <p>Running this version of the client, we can see the output is once
 again traceback free:</p>
 
-<blockquote><code><pre class="shell">
+<pre class="shell">
 exarkun@boson:~/doc/mail/tutorial/smtpclient$ twistd -ny smtpclient-4.tac
 19:29 EST [-] Log opened.
 19:29 EST [-] twistd SVN-Trunk (/usr/bin/python2.4 2.4.1) starting up
@@ -286,7 +286,7 @@
 19:29 EST [-] Main loop terminated.
 19:29 EST [-] Server Shut Down.
 exarkun@boson:~/doc/mail/tutorial/smtpclient$
-</pre></code></blockquote>
+</pre>
 
 <p>But what does this mean?
 <code>twisted.internet.protocol.Protocol</code> is the base
@@ -310,9 +310,9 @@
 
 <p>smtpclient-5.tac adds a new import:</p>
 
-<blockquote><code>
+<pre class="python">
 from twisted.mail import smtp
-</code></blockquote>
+</pre>
 
 <p>All of the mail related code in Twisted exists beneath the
 <code>twisted.mail</code> package.  More specifically, everything
@@ -321,21 +321,21 @@
 
 <p>Next we remove a line we added in smtpclient-4.tac:</p>
 
-<blockquote><code>
+<pre class="python">
 smtpClientFactory.protocol = protocol.Protocol
-</code></blockquote>
+</pre>
 
 <p>And add a similar one in its place:</p>
 
-<blockquote><code>
+<pre class="python">
 smtpClientFactory.protocol = smtp.ESMTPClient
-</code></blockquote>
+</pre>
 
 <p>Our client factory is now using a protocol implementation which
 behaves as an SMTP client.  What happens when we try to run this
 version?</p>
 
-<blockquote><code><pre class="shell">
+<pre class="shell">
 exarkun@boson:~/doc/mail/tutorial/smtpclient$ twistd -ny smtpclient-5.tac
 19:42 EST [-] Log opened.
 19:42 EST [-] twistd SVN-Trunk (/usr/bin/python2.4 2.4.1) starting up
@@ -374,11 +374,11 @@
 19:43 EST [-] Main loop terminated.
 19:43 EST [-] Server Shut Down.
 exarkun@boson:~/doc/mail/tutorial/smtpclient$
-</pre></code></blockquote>
+</pre>
 
 
 <p>Oops, back to getting a traceback.  This time, the default
-implementation of <code>buildProtocl</code> seems no longer to be
+implementation of <code>buildProtocol</code> seems no longer to be
 sufficient.  It instantiates the protocol with no arguments, but
 <code>ESMTPClient</code> wants at least one argument.  In the next
 version of the client, we'll override <code>buildProtocol</code> to
@@ -391,13 +391,13 @@
 overridden <code>buildProtocol</code> method to overcome the problem
 encountered in the previous example.</p>
 
-<blockquote><code><pre class="python">
+<pre class="python">
 class SMTPClientFactory(protocol.ClientFactory):
     protocol = smtp.ESMTPClient
 
     def buildProtocol(self, addr):
         return self.protocol(secret=None, identity='example.com')
-</pre></code></blockquote>
+</pre>
 
 <p>The overridden method does almost the same thing as the base
 implementation: the only change is that it passes values for two
@@ -413,14 +413,14 @@
 
 <p>One other change is required: instead of instantiating <code>twisted.internet.protocol.ClientFactory</code>, we will now instantiate <code>SMTPClientFactory</code>:</p>
 
-<blockquote><code>
+<pre class="python">
 smtpClientFactory = SMTPClientFactory()
-</code></blockquote>
+</pre>
 
 <p>Running this version of the code, we observe that the code
 <strong>still</strong> isn't quite traceback-free.</p>
 
-<blockquote><code><pre class="shell">
+<pre class="shell">
 exarkun@boson:~/doc/mail/tutorial/smtpclient$ twistd -ny smtpclient-6.tac
 21:17 EST [-] Log opened.
 21:17 EST [-] twistd SVN-Trunk (/usr/bin/python2.4 2.4.1) starting up
@@ -466,7 +466,7 @@
 21:17 EST [-] Main loop terminated.
 21:17 EST [-] Server Shut Down.
 exarkun@boson:~/doc/mail/tutorial/smtpclient$
-</pre></code></blockquote>
+</pre>
 
 <p>What we have accomplished with this iteration of the example is to
 navigate far enough into an SMTP transaction that Twisted is now
@@ -486,7 +486,7 @@
 (<code>mailFrom</code>, <code>mailTo</code>, and
 <code>mailData</code>):</p>
 
-<blockquote><code><pre class="python">
+<pre class="python">
 class SMTPTutorialClient(smtp.ESMTPClient):
     mailFrom = "tutorial_sender@example.com"
     mailTo = "tutorial_recipient@example.net"
@@ -498,7 +498,7 @@
 
 Hello, how are you, goodbye.
 '''
-</pre></code></blockquote>
+</pre>
 
 <p>This statically defined data is accessed later in the class
 definition by three of the methods which are part of the
@@ -506,12 +506,12 @@
 methods below to be defined and to return an object with a particular
 meaning.  First, <code>getMailFrom</code>:</p>
 
-<blockquote><code><pre class="python">
+<pre class="python">
     def getMailFrom(self):
         result = self.mailFrom
         self.mailFrom = None
         return result
-</pre></code></blockquote>
+</pre>
 
 <p>This method is called to determine the <em>reverse-path</em>,
 otherwise known as the <em>envelope from</em>, of the message.  This
@@ -527,10 +527,10 @@
 
 <p>The next method is <code>getMailTo</code>:</p>
 
-<blockquote><code><pre class="python">
+<pre class="python">
     def getMailTo(self):
         return [self.mailTo]
-</pre></code></blockquote>
+</pre>
 
 <p><code>getMailTo</code> is similar to <code>getMailFrom</code>.  It
 returns one or more RFC 2821 addresses (this time a
@@ -542,10 +542,10 @@
 <p>The final callback we will define to provide information to
 Twisted is <code>getMailData</code>:</p>
 
-<blockquote><code><pre class="python">
+<pre class="python">
     def getMailData(self):
         return StringIO.StringIO(self.mailData)
-</pre></code></blockquote>
+</pre>
 
 <p>This one is quite simple as well: it returns a file or a file-like
 object which contains the message contents.  In our case, we return a
@@ -562,10 +562,10 @@
 Twisted, but for Twisted to provide information about the success or
 failure of the message transmission to the application:</p>
 
-<blockquote><code><pre class="python">
+<pre class="python">
     def sentMail(self, code, resp, numOk, addresses, log):
         print 'Sent', numOk, 'messages'
-</pre></code></blockquote>
+</pre>
 
 <p>Each of the arguments to <code>sentMail</code> provides some
 information about the success or failure of the message transmission
@@ -586,17 +586,17 @@
 simple.  <a href="smtpclient-8.tac">smtpclient-8.tac</a> extends
 <code>sentMail</code> with these two lines:</p>
 
-<blockquote><code><pre class="python">
+<pre class="python">
         from twisted.internet import reactor
         reactor.stop()
-</pre></code></blockquote>
+</pre>
 
 <p>The <code>stop</code> method of the reactor causes the main event
 loop to exit, allowing a Twisted server to shut down.  With this
 version of the example, we see that the program actually terminates
 after sending the message, without user-intervention:</p>
 
-<blockquote><code><pre class="shell">
+<pre class="shell">
 exarkun@boson:~/doc/mail/tutorial/smtpclient$ twistd -ny smtpclient-8.tac
 19:52 EST [-] Log opened.
 19:52 EST [-] twistd SVN-Trunk (/usr/bin/python2.4 2.4.1) starting up
@@ -612,7 +612,7 @@
 19:52 EST [-] Main loop terminated.
 19:52 EST [-] Server Shut Down.
 exarkun@boson:~/doc/mail/tutorial/smtpclient$
-</pre></code></blockquote>
+</pre>
 
 <h3>SMTP Client 9</h3>
 
@@ -625,10 +625,10 @@
 first step towards this feature by defining a function which returns
 the mail exchange host for a particular domain:</p>
 
-<blockquote><code><pre class="python">
+<pre class="python">
 def getMailExchange(host):
     return 'localhost'
-</pre></code></blockquote>
+</pre>
 
 <p>Obviously this doesn't return the correct mail exchange host yet
 (in fact, it returns the exact same host we have been using all
@@ -637,10 +637,10 @@
 ultimate goal.  Now that we have <code>getMailExchange</code>, we'll
 call it when constructing our <code>TCPClient</code> service:</p>
 
-<blockquote><code><pre class="python">
+<pre class="python">
 smtpClientService = internet.TCPClient(
     getMailExchange('example.net'), 25, smtpClientFactory)
-</pre></code></blockquote>
+</pre>
 
 <p>We'll expand on the definition of <code>getMailExchange</code> in
 the next example.</p>
@@ -658,10 +658,10 @@
 href="smtpclient-10.tac">smtpclient-10.tac</a> redefines it
 thusly:</p>
 
-<blockquote><code><pre class="python">
+<pre class="python">
 def getMailExchange(host):
     return defer.succeed('localhost')
-</pre></code></blockquote>
+</pre>
 
 <p><code>defer.succeed</code> is a function which creates a new
 <code>Deferred</code> which already has a result, in this case
@@ -669,7 +669,7 @@
 <code>TCPClient</code>-constructing code to expect and properly handle
 this <code>Deferred</code>:</p>
 
-<blockquote><code><pre class="python">
+<pre class="python">
 def cbMailExchange(exchange):
     smtpClientFactory = SMTPClientFactory()
 
@@ -677,11 +677,11 @@
     smtpClientService.setServiceParent(application)
 
 getMailExchange('example.net').addCallback(cbMailExchange)
-</pre></code></blockquote>
+</pre>
 
 <p>An in-depth exploration of <code>Deferred</code>s is beyond the
-scope of this document.  For such a look, see the <a href="">Deferred
-Execution Howto</a>.  However, in brief, what this version of the code
+scope of this document.  For such a look, see the <a href="../../core/howto/defer.html">Deferred
+Reference</a>.  However, in brief, what this version of the code
 does is to delay the creation of the <code>TCPClient</code> until the
 <code>Deferred</code> returned by <code>getMailExchange</code> fires.
 Once it does, we proceed normally through the creation of our
@@ -695,12 +695,12 @@
 this by calling on an object provided specifically for this task,
 <code>twisted.mail.relaymanager.MXCalculator</code>:</p>
 
-<blockquote><code><pre class="python">
+<pre class="python">
 def getMailExchange(host):
     def cbMX(mxRecord):
         return str(mxRecord.exchange)
     return relaymanager.MXCalculator().getMX(host).addCallback(cbMX)
-</pre></code></blockquote>
+</pre>
 
 <p>Because <code>getMX</code> returns a <code>Record_MX</code> object
 rather than a string, we do a little bit of post-processing to get the
@@ -712,9 +712,12 @@
 domain, connect to it, complete an SMTP transaction, report its
 results, and finally shut down the reactor.</p>
 
+<!-- TODO: write a conclusion
+
 <h3>Conclusion</h3>
 
 <p>XXX wrap it up</p>
 
+-->
 </body>
 </html>
