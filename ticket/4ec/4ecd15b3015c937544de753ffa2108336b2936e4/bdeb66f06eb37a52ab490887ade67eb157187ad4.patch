commit b36bd01745f94458fe3335290e52cec7a7b4dd05
Author: Wolfgang Rohdewald <wolfgang@rohdewald.de>
Date:   Sat Oct 4 00:05:01 2014 +0200

    spread.banana now raises BananaError when receiving pb messages without pb being the selected dialect

diff --git twisted/spread/banana.py twisted/spread/banana.py
index 0b215eb..55fe4e5 100644
--- twisted/spread/banana.py
+++ twisted/spread/banana.py
@@ -210,7 +210,9 @@ class Banana(protocol.Protocol, styles.Ephemeral):
                 buffer = rest
                 num = -b1282int(num)
                 gotItem(num)
-            elif typebyte == VOCAB:
+            elif (typebyte == VOCAB and self.currentDialect == b"pb"
+                    and b1282int(num) in self.incomingVocabulary):
+                # the sender issues VOCAB only for dialect pb
                 buffer = rest
                 num = b1282int(num)
                 gotItem(self.incomingVocabulary[num])
diff --git twisted/spread/topfiles/7662.bugfix twisted/spread/topfiles/7662.bugfix
new file mode 100644
index 0000000..5b95047
--- /dev/null
+++ twisted/spread/topfiles/7662.bugfix
@@ -0,0 +1 @@
+spread.banana now raises BananaError when receiving pb messages without pb being the selected dialect
diff --git twisted/test/test_banana.py twisted/test/test_banana.py
index d914f47..534b400 100644
--- twisted/test/test_banana.py
+++ twisted/test/test_banana.py
@@ -270,6 +270,24 @@ class BananaTestCase(unittest.TestCase):
         self.assertEqual(encoded(baseNegIn - 3), '\x03' + baseLongNegOut)
 
 
+    def test_typeVOCAB(self):
+        """
+        the PB Vocabulary
+        """
+        self.assertRaises(NotImplementedError,
+            self.enc.dataReceived, b'\x10\x87') # dialect not set to pb
+        self.enc._selectDialect(b'pb')
+        self.io.seek(0)
+        self.io.truncate()
+        self.enc.dataReceived(b'\x10\x87')
+        self.assertEqual(self.result, b'remote')
+        self.io.seek(0)
+        self.io.truncate()
+        self.enc.sendEncoded(b'lcache')
+        self.enc.dataReceived(self.io.getvalue())
+        self.assertEqual(self.result, b'lcache')
+
+
 
 class GlobalCoderTests(unittest.TestCase):
     """
