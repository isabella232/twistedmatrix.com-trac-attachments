Index: twisted/conch/interfaces.py
===================================================================
--- twisted/conch/interfaces.py	(revision 15630)
+++ twisted/conch/interfaces.py	(working copy)
@@ -8,7 +8,7 @@
     @ivar conn: The SSHConnection object for this user.
     """
 
-    def lookupChannel(self, channelType, windowSize, maxPacket, data):
+    def lookupChannel(channelType, windowSize, maxPacket, data):
         """
         The other side requested a channel of some sort.
         channelType is the type of channel being requested,
@@ -28,7 +28,7 @@
         @rtype:             subclass of C{SSHChannel}/C{tuple}
         """
 
-    def lookupSubsystem(self, subsystem, data):
+    def lookupSubsystem(subsystem, data):
         """
         The other side requested a subsystem.
         subsystem is the name of the subsystem being requested.
@@ -37,7 +37,7 @@
         We return a Protocol.
         """
 
-    def gotGlobalRequest(self, requestType, data):
+    def gotGlobalRequest(requestType, data):
         """
         A global request was sent from the other side.
         
@@ -49,7 +49,7 @@
 
 class ISession(Interface):
 
-    def getPty(self, term, windowSize, modes):
+    def getPty(term, windowSize, modes):
         """
         Get a psuedo-terminal for use by a shell or command.
 
@@ -57,31 +57,31 @@
         fails, raise an exception.
         """
 
-    def openShell(self, proto):
+    def openShell(proto):
         """
         Open a shell and connect it to proto.
 
         proto should be a ProcessProtocol instance.
         """
 
-    def execCommand(self, proto, command):
+    def execCommand(proto, command):
         """
         Execute a command.
 
         proto should be a ProcessProtocol instance.
         """
 
-    def windowChanged(self, newWindowSize):
+    def windowChanged(newWindowSize):
         """
         Called when the size of the remote screen has changed.
         """
 
-    def eofReceived(self):
+    def eofReceived():
         """
         Called when the other side has indicated no more data will be sent.
         """
         
-    def closed(self):
+    def closed():
         """
         Called when the session is closed.
         """
@@ -95,7 +95,7 @@
     that the user has permission for their actions.
     """
 
-    def gotVersion(self, otherVersion, extData):
+    def gotVersion(otherVersion, extData):
         """
         Called when the client sends their version info.
 
@@ -110,7 +110,7 @@
         """
         return {}
 
-    def openFile(self, filename, flags, attrs):
+    def openFile(filename, flags, attrs):
         """
         Called when the clients asks to open a file.
 
@@ -139,7 +139,7 @@
         with the object.
         """
 
-    def removeFile(self, filename):
+    def removeFile(filename):
         """
         Remove the given file.
 
@@ -149,7 +149,7 @@
         called back when it succeeds.
         """
 
-    def renameFile(self, oldpath, newpath):
+    def renameFile(oldpath, newpath):
         """
         Rename the given file.
 
@@ -160,7 +160,7 @@
         called back when it succeeds.
         """
 
-    def makeDirectory(self, path, attrs):
+    def makeDirectory(path, attrs):
         """
         Make a directory.
 
@@ -172,7 +172,7 @@
         is called back when it is created.
         """
 
-    def removeDirectory(self, path):
+    def removeDirectory(path):
         """
         Remove a directory (non-recursively)
 
@@ -185,7 +185,7 @@
         is called back when it is removed.
         """
 
-    def openDirectory(self, path):
+    def openDirectory(path):
         """
         Open a directory for scanning.
 
@@ -216,7 +216,7 @@
         attrs is a dictionary in the format of the attrs argument to openFile.
         """
 
-    def getAttrs(self, path, followLinks):
+    def getAttrs(path, followLinks):
         """
         Return the attributes for the given path.
 
@@ -229,7 +229,7 @@
         argument to openFile or a Deferred that is called back with same.
         """
 
-    def setAttrs(self, path, attrs):
+    def setAttrs(path, attrs):
         """
         Set the attributes for the path.
 
@@ -241,7 +241,7 @@
         called back when they are.
         """
 
-    def readLink(self, path):
+    def readLink(path):
         """
         Find the root of a set of symbolic links.
 
@@ -251,7 +251,7 @@
         returns the same.
         """
 
-    def makeLink(self, linkPath, targetPath):
+    def makeLink(linkPath, targetPath):
         """
         Create a symbolic link.
 
@@ -262,7 +262,7 @@
         returns the same.
         """
 
-    def realPath(self, path):
+    def realPath(path):
         """
         Convert any path to an absolute path.
 
@@ -272,7 +272,7 @@
         that returns the same.
         """
 
-    def extendedRequest(self, extendedName, extendedData):
+    def extendedRequest(extendedName, extendedData):
         """
         This is the extension mechanism for SFTP.  The other side can send us
         arbitrary requests.
@@ -294,7 +294,7 @@
     interface should be returned from openFile().
     """
 
-    def close(self):
+    def close():
         """
         Close the file.
 
@@ -302,7 +302,7 @@
         Deferred that is called back when the close succeeds.
         """
 
-    def readChunk(self, offset, length):
+    def readChunk(offset, length):
         """
         Read from the file.
 
@@ -317,7 +317,7 @@
         called back with same.
         """
 
-    def writeChunk(self, offset, data):
+    def writeChunk(offset, data):
         """
         Write to the file.
 
@@ -328,7 +328,7 @@
         called when it completes.
         """
 
-    def getAttrs(self):
+    def getAttrs():
         """
         Return the attributes for the file.
 
@@ -336,7 +336,7 @@
         argument to openFile or a Deferred that is called back with same.
         """
 
-    def setAttrs(self, attrs):
+    def setAttrs(attrs):
         """
         Set the attributes for the file.
 
Index: twisted/vfs/ivfs.py
===================================================================
--- twisted/vfs/ivfs.py	(revision 15630)
+++ twisted/vfs/ivfs.py	(working copy)
@@ -15,7 +15,7 @@
         """parent node"""
     )
 
-    def getMetadata(self):
+    def getMetadata():
         """
         returns a map of arbitrary metadata. As an example, here's what
         SFTP expects (but doesn't require):
@@ -33,13 +33,13 @@
         particular value isn't available as gracefully as possible.
         """
 
-    def remove(self):
+    def remove():
         """
         Removes this node.
         An error is raised if the node is a directory and is not empty.
         """
 
-    def rename(self, newName):
+    def rename(newName):
         """
         Renames this node to newName.  newName can be in a different
         directory.  If the destination is an existing directory, an
@@ -48,23 +48,23 @@
 
 
 class IFileSystemLeaf(IFileSystemNode):
-    def open(self, flags):
+    def open(flags):
         """
         Opens the file with flags. Flags should be a bitmask based on
         the os.O_* flags.
         """
 
-    def close(self):
+    def close():
         """closes this node"""
 
-    def readChunk(self, offset, length):
+    def readChunk(offset, length):
         """
         Leaf should have been previously opened with suitable flags.
         Reads length bytes or until the end of file from this leaf from
         the given offset.
         """
 
-    def writeChunk(self, offset, data):
+    def writeChunk(offset, data):
         """
         Leaf should have been previously opened with suitable flags.
         Writes data to leaf from the given offset.
@@ -72,24 +72,24 @@
 
 class IFileSystemContainer(IFileSystemNode):
 
-    def children(self):
+    def children():
         """
         returns a list of 2 element tuples
         [ ( path, nodeObject ) ]
         """
 
-    def child(self, childName):
+    def child(childName):
         """
         returns a node object for child childName
         """
 
-    def createDirectory(self, childName):
+    def createDirectory(childName):
         """
         Creates a new folder named childName under this folder.
         An error is raised if the folder already exists.
         """
 
-    def createFile(self, childName, exclusive=True):
+    def createFile(childName, exclusive=True):
         """
         Creates a new file named childName under this folder.
 
@@ -97,7 +97,7 @@
         already exists.
         """
 
-    def exists(self, childName):
+    def exists(childName):
         """
         returns True if container has a child childName, False otherwise
         """
Index: twisted/web2/iweb.py
===================================================================
--- twisted/web2/iweb.py	(revision 15630)
+++ twisted/web2/iweb.py	(working copy)
@@ -18,7 +18,7 @@
     mechanism for mapping URLs to content.
     """
 
-    def locateChild(self, req, segments):
+    def locateChild(req, segments):
         """Locate another object which can be adapted to IResource.
 
         @return: A 2-tuple of (resource, remaining-path-segments),
@@ -35,7 +35,7 @@
                  handle.
         """
 
-    def renderHTTP(self, req):
+    def renderHTTP(req):
         """Return an IResponse or a deferred which will fire an
         IResponse. This response will be written to the web browser
         which initiated the request.
Index: twisted/pb/copyable.py
===================================================================
--- twisted/pb/copyable.py	(revision 15630)
+++ twisted/pb/copyable.py	(working copy)
@@ -15,10 +15,10 @@
     """I represent an object which is passed-by-value across PB connections.
     """
 
-    def getTypeToCopy(self):
+    def getTypeToCopy():
         """Return a string which names the class. This string must match
         the one that gets registered at the receiving end."""
-    def getStateToCopy(self):
+    def getStateToCopy():
         """Return a state dictionary (with plain-string keys) which will be
         serialized and sent to the remote end. This state object will be
         given to the receiving object's setCopyableState method."""
@@ -72,7 +72,7 @@
     any arguments.
     """
 
-    def setCopyableState(self, statedict):
+    def setCopyableState(statedict):
         """I accept an attribute dictionary name/value pairs and use it to
         set my internal state.
 
Index: twisted/pb/tokens.py
===================================================================
--- twisted/pb/tokens.py	(revision 15630)
+++ twisted/pb/tokens.py	(working copy)
@@ -293,7 +293,7 @@
         object you were just given. To absorb the error and keep going with
         your sequence, return None."""
 
-    def receiveClose(self):
+    def receiveClose():
         """Called when the Close token is received. Returns a tuple of
         (object/referenceable-deferred, complete-deferred), or an
         BananaFailure if something went wrong. There are four potential
@@ -334,7 +334,7 @@
         If necessary, unbanana.setObject should be called, then the Deferred
         created in start() should be fired with the new object."""
 
-    def finish(self):
+    def finish():
         """Called when the unslicer is popped off the stack. This is called
         even if the pop is because of an exception. The unslicer should
         perform cleanup, including firing the Deferred with an
@@ -344,12 +344,12 @@
         object be returned from finish() instead of receiveClose?
         """
 
-    def describe(self):
+    def describe():
         """Return a short string describing where in the object tree this
         unslicer is sitting, relative to its parent. These strings are
         obtained from every unslicer in the stack, and joined to describe
         where any problems occurred."""
 
-    def where(self):
+    def where():
         """This returns a string that describes the location of this
         unslicer, starting at the root of the object tree."""
