Index: twisted/internet/process.py
===================================================================
--- twisted/internet/process.py	(revision 22097)
+++ twisted/internet/process.py	(working copy)
@@ -39,10 +39,31 @@
     """
     Reap all registered processes.
     """
-    for process in reapProcessHandlers.values():
-        process.reapProcess()
+    try:
+        try:
+            while True:
+                pid, status = os.waitpid(-1, os.WNOHANG)
+                if not pid: break
+        except OSError, e:
+            #ECHILD is only raised if someone has set the signal handler for SIG_CHLD to SIG_IGN
+            if e.errno == errno.ECHILD:
+                # no child process
+                pid = None
+            else:
+                raise
+    except:
+        log.msg('Failed to reap child processes')
+        log.err()
+        pid = None
+    if pid:
+        if pid not in reapProcessHandlers:
+            log.msg('tried to reap unregistered process pid: %d' % pid)
+            log.err()
+        else:
+            process = reapProcessHandlers[pid]
+            process.processEnded(status)
+            unregisterReapProcessHandler(pid, process)
 
-
 def registerReapProcessHandler(pid, process):
     """
     Register a process handler for the given pid, in case L{reapAllProcesses}
