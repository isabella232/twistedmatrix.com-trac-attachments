Index: twisted/mail/topfiles/5685.doc
===================================================================
--- twisted/mail/topfiles/5685.doc	(revision 0)
+++ twisted/mail/topfiles/5685.doc	(revision 0)
@@ -0,0 +1 @@
+The SMTP Client Tutorial is revised and is now self-contained.
Index: doc/mail/tutorial/smtpclient/hosts
===================================================================
--- doc/mail/tutorial/smtpclient/hosts	(revision 0)
+++ doc/mail/tutorial/smtpclient/hosts	(revision 0)
@@ -0,0 +1 @@
+127.0.0.1 example.net
Index: doc/mail/tutorial/smtpclient/smtpclient-10.tac
===================================================================
--- doc/mail/tutorial/smtpclient/smtpclient-10.tac	(revision 38902)
+++ doc/mail/tutorial/smtpclient/smtpclient-10.tac	(working copy)
@@ -50,7 +50,7 @@
 def cbMailExchange(exchange):
     smtpClientFactory = SMTPClientFactory()
 
-    smtpClientService = internet.TCPClient(exchange, 25, smtpClientFactory)
+    smtpClientService = internet.TCPClient(exchange, 8025, smtpClientFactory)
     smtpClientService.setServiceParent(application)
 
 getMailExchange('example.net').addCallback(cbMailExchange)
Index: doc/mail/tutorial/smtpclient/smtpclient-11.tac
===================================================================
--- doc/mail/tutorial/smtpclient/smtpclient-11.tac	(revision 38902)
+++ doc/mail/tutorial/smtpclient/smtpclient-11.tac	(working copy)
@@ -8,6 +8,7 @@
 from twisted.internet import protocol
 from twisted.internet import defer
 from twisted.mail import smtp, relaymanager
+from twisted.names.client import createResolver
 
 class SMTPTutorialClient(smtp.ESMTPClient):
     mailFrom = "tutorial_sender@example.com"
@@ -47,12 +48,13 @@
 def getMailExchange(host):
     def cbMX(mxRecord):
         return str(mxRecord.name)
-    return relaymanager.MXCalculator().getMX(host).addCallback(cbMX)
+    return (relaymanager.MXCalculator(createResolver(None, None, b"hosts"))
+            .getMX(host).addCallback(cbMX))
 
 def cbMailExchange(exchange):
     smtpClientFactory = SMTPClientFactory()
 
-    smtpClientService = internet.TCPClient(exchange, 25, smtpClientFactory)
+    smtpClientService = internet.TCPClient(exchange, 8025, smtpClientFactory)
     smtpClientService.setServiceParent(application)
 
 getMailExchange('example.net').addCallback(cbMailExchange)
Index: doc/mail/tutorial/smtpclient/smtpclient-3.tac
===================================================================
--- doc/mail/tutorial/smtpclient/smtpclient-3.tac	(revision 38902)
+++ doc/mail/tutorial/smtpclient/smtpclient-3.tac	(working copy)
@@ -6,5 +6,5 @@
 from twisted.internet import protocol
 
 smtpClientFactory = protocol.ClientFactory()
-smtpClientService = internet.TCPClient('localhost', 25, smtpClientFactory)
+smtpClientService = internet.TCPClient('localhost', 8025, smtpClientFactory)
 smtpClientService.setServiceParent(application)
Index: doc/mail/tutorial/smtpclient/smtpclient-11a.tac
===================================================================
--- doc/mail/tutorial/smtpclient/smtpclient-11a.tac	(revision 0)
+++ doc/mail/tutorial/smtpclient/smtpclient-11a.tac	(revision 0)
@@ -0,0 +1,59 @@
+import StringIO
+
+from twisted.application import service
+
+application = service.Application("SMTP Client Tutorial")
+
+from twisted.application import internet
+from twisted.internet import protocol
+from twisted.internet import defer
+from twisted.mail import smtp, relaymanager
+from twisted.names.client import createResolver
+
+class SMTPTutorialClient(smtp.ESMTPClient):
+    mailFrom = "tutorial_sender@example.com"
+    mailTo = "tutorial_recipient@example.net"
+    mailData = '''\
+Date: Fri, 6 Feb 2004 10:14:39 -0800
+From: Tutorial Guy <tutorial_sender@example.com>
+To: Tutorial Gal <tutorial_recipient@example.net>
+Subject: Tutorate!
+
+Hello, how are you, goodbye.
+'''
+
+    def getMailFrom(self):
+        result = self.mailFrom
+        self.mailFrom = None
+        return result
+
+    def getMailTo(self):
+        return [self.mailTo]
+
+    def getMailData(self):
+        return StringIO.StringIO(self.mailData)
+
+    def sentMail(self, code, resp, numOk, addresses, log):
+        print 'Sent', numOk, 'messages'
+
+        from twisted.internet import reactor
+        reactor.stop()
+
+class SMTPClientFactory(protocol.ClientFactory):
+    protocol = SMTPTutorialClient
+
+    def buildProtocol(self, addr):
+        return self.protocol(secret=None, identity='example.com')
+
+def getMailExchange(host):
+    def cbMX(mxRecord):
+        return str(mxRecord.name)
+    return relaymanager.MXCalculator().getMX(host).addCallback(cbMX)
+
+def cbMailExchange(exchange):
+    smtpClientFactory = SMTPClientFactory()
+
+    smtpClientService = internet.TCPClient(exchange, 25, smtpClientFactory)
+    smtpClientService.setServiceParent(application)
+
+getMailExchange('example.net').addCallback(cbMailExchange)
Index: doc/mail/tutorial/smtpclient/smtpclient-4.tac
===================================================================
--- doc/mail/tutorial/smtpclient/smtpclient-4.tac	(revision 38902)
+++ doc/mail/tutorial/smtpclient/smtpclient-4.tac	(working copy)
@@ -8,5 +8,5 @@
 smtpClientFactory = protocol.ClientFactory()
 smtpClientFactory.protocol = protocol.Protocol
 
-smtpClientService = internet.TCPClient('localhost', 25, smtpClientFactory)
+smtpClientService = internet.TCPClient('localhost', 8025, smtpClientFactory)
 smtpClientService.setServiceParent(application)
Index: doc/mail/tutorial/smtpclient/smtpclient-5.tac
===================================================================
--- doc/mail/tutorial/smtpclient/smtpclient-5.tac	(revision 38902)
+++ doc/mail/tutorial/smtpclient/smtpclient-5.tac	(working copy)
@@ -10,5 +10,5 @@
 from twisted.mail import smtp
 smtpClientFactory.protocol = smtp.ESMTPClient
 
-smtpClientService = internet.TCPClient('localhost', 25, smtpClientFactory)
+smtpClientService = internet.TCPClient('localhost', 8025, smtpClientFactory)
 smtpClientService.setServiceParent(application)
Index: doc/mail/tutorial/smtpclient/smtpclient-6.tac
===================================================================
--- doc/mail/tutorial/smtpclient/smtpclient-6.tac	(revision 38902)
+++ doc/mail/tutorial/smtpclient/smtpclient-6.tac	(working copy)
@@ -14,5 +14,5 @@
 
 smtpClientFactory = SMTPClientFactory()
 
-smtpClientService = internet.TCPClient('localhost', 25, smtpClientFactory)
+smtpClientService = internet.TCPClient('localhost', 8025, smtpClientFactory)
 smtpClientService.setServiceParent(application)
Index: doc/mail/tutorial/smtpclient/smtpclient-7.tac
===================================================================
--- doc/mail/tutorial/smtpclient/smtpclient-7.tac	(revision 38902)
+++ doc/mail/tutorial/smtpclient/smtpclient-7.tac	(working copy)
@@ -10,11 +10,11 @@
 
 class SMTPTutorialClient(smtp.ESMTPClient):
     mailFrom = "tutorial_sender@example.com"
-    mailTo = "tutorial_recipient@example.net"
+    mailTo = "tutorial_recipient@localhost"
     mailData = '''\
 Date: Fri, 6 Feb 2004 10:14:39 -0800
 From: Tutorial Guy <tutorial_sender@example.com>
-To: Tutorial Gal <tutorial_recipient@example.net>
+To: Tutorial Gal <tutorial_recipient@localhost>
 Subject: Tutorate!
 
 Hello, how are you, goodbye.
@@ -42,5 +42,5 @@
 
 smtpClientFactory = SMTPClientFactory()
 
-smtpClientService = internet.TCPClient('localhost', 25, smtpClientFactory)
+smtpClientService = internet.TCPClient('localhost', 8025, smtpClientFactory)
 smtpClientService.setServiceParent(application)
Index: doc/mail/tutorial/smtpclient/smtpclient-8.tac
===================================================================
--- doc/mail/tutorial/smtpclient/smtpclient-8.tac	(revision 38902)
+++ doc/mail/tutorial/smtpclient/smtpclient-8.tac	(working copy)
@@ -10,11 +10,11 @@
 
 class SMTPTutorialClient(smtp.ESMTPClient):
     mailFrom = "tutorial_sender@example.com"
-    mailTo = "tutorial_recipient@example.net"
+    mailTo = "tutorial_recipient@localhost"
     mailData = '''\
 Date: Fri, 6 Feb 2004 10:14:39 -0800
 From: Tutorial Guy <tutorial_sender@example.com>
-To: Tutorial Gal <tutorial_recipient@example.net>
+To: Tutorial Gal <tutorial_recipient@localhost>
 Subject: Tutorate!
 
 Hello, how are you, goodbye.
@@ -45,5 +45,5 @@
 
 smtpClientFactory = SMTPClientFactory()
 
-smtpClientService = internet.TCPClient('localhost', 25, smtpClientFactory)
+smtpClientService = internet.TCPClient('localhost', 8025, smtpClientFactory)
 smtpClientService.setServiceParent(application)
Index: doc/mail/tutorial/smtpclient/smtpclient.xhtml
===================================================================
--- doc/mail/tutorial/smtpclient/smtpclient.xhtml	(revision 38902)
+++ doc/mail/tutorial/smtpclient/smtpclient.xhtml	(working copy)
@@ -19,24 +19,23 @@
 SMTP protocol, have it connect to an appropriate mail exchange server,
 and transmit a message for delivery.</p>
 
-<p>For the majority of this tutorial, <code>twistd</code> will be used
-to launch the application.  Near the end we will explore other
-possibilities for starting a Twisted application.  Until then, make
+<p>This tutorial uses <code>twistd</code> 
+to launch the client and server applications.  Make
 sure that you have <code>twistd</code> installed and conveniently
 accessible for use in running each of the example <code>.tac</code>
 files.</p>
 
-<h3>SMTP Client 1</h3>
+<h2>SMTP Client 1</h2>
 
 <p>The first step is to create <a href="smtpclient-1.tac">the most
-minimal <code>.tac</code> file</a> possible for use by <code>twistd</code> .</p>
+minimal <code>.tac</code> file</a> possible for use by <code>twistd</code>.</p>
 
 <pre class="python">
 from twisted.application import service
 </pre>
 
 <p>The first line of the <code>.tac</code> file
-imports <code>twisted.application.service</code>, a module which
+imports <code class="API">twisted.application.service</code>, a module which
 contains many of the basic <em>service</em> classes and helper
 functions available in Twisted.  In particular, we will be using
 the <code>Application</code> function to create a new <em>application
@@ -62,11 +61,12 @@
 run <a href="smtpclient-1.tac">smtpclient-1.tac</a> using
 the <code>twistd</code> command line:</p>
 
-<pre class="python">
+<pre class="shell">
 twistd -ny smtpclient-1.tac
 </pre>
 
-<p>we are rewarded with the following output:</p>
+<p>we are rewarded with output similar to the following (exact output varies by
+release and platform):</p>
 
 <pre class="shell">
 exarkun@boson:~/mail/tutorial/smtpclient$ twistd -ny smtpclient-1.tac
@@ -78,7 +78,7 @@
 </pre>
 
 <p>As we expected, not much is going on.  We can shutdown this server
-by issuing <code>^C</code>:</p>
+by issuing Control-C (<code>^C</code>):</p>
 
 <pre class="shell">
 18:34 EST [-] Received SIGINT, shutting down.
@@ -87,7 +87,7 @@
 exarkun@boson:~/mail/tutorial/smtpclient$
 </pre>
 
-<h3>SMTP Client 2</h3>
+<h2>SMTP Client 2</h2>
 
 <p>The first version of our SMTP client wasn't very interesting.  It
 didn't even establish any TCP connections!  The <a
@@ -100,11 +100,11 @@
 from twisted.internet import protocol
 </pre>
 
-<p><code>twisted.application.internet</code> is
+<p><code class="API">twisted.application.internet</code> is
 another <em>application service</em> module.  It provides services for
 establishing outgoing connections (as well as creating network
 servers, though we are not interested in those parts for the
-moment). <code>twisted.internet.protocol</code> provides base
+moment). <code class="API">twisted.internet.protocol</code> provides base
 implementations of many of the core Twisted concepts, such
 as <em>factories</em> and <em>protocols</em>.</p>
 
@@ -181,7 +181,7 @@
 turned out to be important after all.  We'll get to them in the next
 example.</p>
 
-<h3>SMTP Client 3</h3>
+<h2>SMTP Client 3</h2>
 
 <p>Version three of our SMTP client only changes one thing.  The line
 from version two:</p>
@@ -194,12 +194,24 @@
 something with a bit more meaning:</p>
 
 <pre class="python">
-smtpClientService = internet.TCPClient('localhost', 25, smtpClientFactory)
+smtpClientService = internet.TCPClient('localhost', 8025, smtpClientFactory)
 </pre>
 
-<p>This directs the client to connect to <em>localhost</em> on
-port <em>25</em>.  This isn't the address we want ultimately, but it's
-a good place-holder for the time being.  We can
+<p>This directs the client to connect to an SMTP server running on port 8025 
+of localhost.  This isn't the address we want ultimately, but it's
+a good placeholder for the time being.  </p>
+<p>
+Before we run this change, we should start an SMTP server for the client to 
+contact.  The following command line starts a server on port 8025 of 
+localhost which accepts mail addressed to 
+<code>tutorial_recipient@localhost</code>, stores the 
+email in <code>/tmp/emails</code>, and stores the process id in the 
+<code>server.pid</code> file:
+<pre class="shell">
+twistd --pidfile=server.pid mail -H localhost -s 8025 \
+       -d localhost=/tmp/emails -u tutorial_recipient=pwd
+</pre>
+Now, we can
 run <a href="smtpclient-3.tac">smtpclient-3.tac</a> and see what this
 change gets us:</p>
 
@@ -249,7 +261,7 @@
 a <em>protocol class</em> for the factory to use.  We'll do that in
 the next example.</p>
 
-<h3>SMTP Client 4</h3>
+<h2>SMTP Client 4</h2>
 
 <p>In the previous example, we ran into a problem because we hadn't
 set up our <em>client factory's</em> <em>protocol</em> attribute
@@ -266,7 +278,7 @@
 </pre>
 
 <p>Running this version of the client, we can see the output is once
-again traceback free:</p>
+again traceback-free:</p>
 
 <pre class="shell">
 exarkun@boson:~/doc/mail/tutorial/smtpclient$ twistd -ny smtpclient-4.tac
@@ -288,7 +300,7 @@
 </pre>
 
 <p>But what does this
-mean? <code>twisted.internet.protocol.Protocol</code> is the
+mean? <code class="API">twisted.internet.protocol.Protocol</code> is the
 base <em>protocol</em> implementation.  For those familiar with the
 classic UNIX network services, it is equivalent to
 the <em>discard</em> service.  It never produces any output and it
@@ -296,13 +308,13 @@
 like an SMTP client.  Let's see how we can improve this in the next
 example.</p>
 
-<h3>SMTP Client 5</h3>
+<h2>SMTP Client 5</h2>
 
-<p>In <a href="smtpclient-5.tac">smtpclient-5.tac</a>, we will begin
-to use Twisted's SMTP protocol implementation for the first time.
+<p>In <a href="smtpclient-5.tac">smtpclient-5.tac</a>, we will 
+use Twisted's SMTP protocol implementation for the first time.
 We'll make the obvious change, simply swapping
 out <code>twisted.internet.protocol.Protocol</code> in favor
-of <code>twisted.mail.smtp.ESMTPClient</code>.  Don't worry about
+of <code class="API">twisted.mail.smtp.ESMTPClient</code>.  Don't worry about
 the <em>E</em> in <em>ESMTP</em>.  It indicates we're actually using a
 newer version of the SMTP protocol.  There is
 an <code>SMTPClient</code> in Twisted, but there's essentially no
@@ -314,10 +326,10 @@
 from twisted.mail import smtp
 </pre>
 
-<p>All of the mail related code in Twisted exists beneath
-the <code>twisted.mail</code> package.  More specifically, everything
+<p>All of the mail related code in Twisted exists beneath the
+<code class="API">twisted.mail</code> package.  More specifically, everything
 having to do with the SMTP protocol implementation is defined in
-the <code>twisted.mail.smtp</code> module.</p>
+the <code class="API">twisted.mail.smtp</code> module.</p>
 
 <p>Next we remove a line we added in smtpclient-4.tac:</p>
 
@@ -384,10 +396,10 @@
 version of the client, we'll override <code>buildProtocol</code> to
 fix this problem.</p>
 
-<h3>SMTP Client 6</h3>
+<h2>SMTP Client 6</h2>
 
 <p><a href="smtpclient-6.tac">smtpclient-6.tac</a> introduces
-a <code>twisted.internet.protocol.ClientFactory</code> subclass with
+a <code class="API">twisted.internet.protocol.ClientFactory</code> subclass with
 an overridden <code>buildProtocol</code> method to overcome the
 problem encountered in the previous example.</p>
 
@@ -404,7 +416,7 @@
 arguments to <code>twisted.mail.smtp.ESMTPClient</code>'s initializer.
 The <code>secret</code> argument is used for SMTP authentication
 (which we will not attempt yet).  The <code>identity</code> argument
-is used as a to identify ourselves Another minor change to note is
+is used to identify ourselves. Another minor change to note is
 that the <code>protocol</code> attribute is now defined in the class
 definition, rather than tacked onto an instance after one is created.
 This means it is a class attribute, rather than an instance attribute,
@@ -413,7 +425,7 @@
 you understand the implications of each approach when creating your
 own factories.</p>
 
-<p>One other change is required: instead of
+<p>One other change is required.  Instead of
 instantiating <code>twisted.internet.protocol.ClientFactory</code>, we
 will now instantiate <code>SMTPClientFactory</code>:</p>
 
@@ -478,7 +490,7 @@
 its next step should be.  In the next example, we'll see how to
 provide that information to it.</p>
 
-<h3>SMTP Client 7</h3>
+<h2>SMTP Client 7</h2>
 
 <p>SMTP Client 7 is the first version of our SMTP client which
 actually includes message data to transmit.  For simplicity's sake,
@@ -493,11 +505,11 @@
 <pre class="python">
 class SMTPTutorialClient(smtp.ESMTPClient):
     mailFrom = "tutorial_sender@example.com"
-    mailTo = "tutorial_recipient@example.net"
+    mailTo = "tutorial_recipient@localhost"
     mailData = '''\
 Date: Fri, 6 Feb 2004 10:14:39 -0800
 From: Tutorial Guy &lt;tutorial_sender@example.com&gt;
-To: Tutorial Gal &lt;tutorial_recipient@example.net&gt;
+To: Tutorial Gal &lt;tutorial_recipient@localhost&gt;
 Subject: Tutorate!
 
 Hello, how are you, goodbye.
@@ -557,8 +569,8 @@
 message.  If the contents of the file returned
 by <code>getMailData</code> span multiple lines (as email messages
 often do), the lines should be <code>\n</code> delimited (as they
-would be when opening a text file in the <code>"rt"</code> mode):
-necessary newline translation will be performed
+would be when opening a text file in the <code>"rt"</code> mode).
+Necessary newline translation will be performed
 by <code>SMTPClient</code> automatically.</p>
 
 <p>There is one more new callback method defined in smtpclient-7.tac.
@@ -579,13 +591,19 @@
 499, inclusive.  For permanent failures (this which will never work,
 no matter how many times you retry them), it will be between 500 and
 599.</p>
+<p>
+When this version of the code is run, the message is successfully delivered 
+to the server and can be found in the
+<code>/tmp/emails/tutorial_recipient/new</code> directory. 
+</p>
 
-<h3>SMTP Client 8</h3>
+<h2>SMTP Client 8</h2>
 
 <p>Thus far we have succeeded in creating a Twisted client application
 which starts up, connects to a (possibly) remote host, transmits some
 data, and disconnects.  Notably missing, however, is application
-shutdown.  Hitting ^C is fine during development, but it's not exactly
+shutdown.  Hitting <code>^C</code> is fine during development, 
+but it's not exactly
 a long-term solution.  Fortunately, programmatic shutdown is extremely
 simple.  <a href="smtpclient-8.tac">smtpclient-8.tac</a>
 extends <code>sentMail</code> with these two lines:</p>
@@ -618,13 +636,30 @@
 exarkun@boson:~/doc/mail/tutorial/smtpclient$
 </pre>
 
-<h3>SMTP Client 9</h3>
+<h2>SMTP Client 9</h2>
 
 <p>One task remains to be completed in this tutorial SMTP client:
 instead of always sending mail through a well-known host, we will look
 up the mail exchange server for the recipient address and try to
 deliver the message to that host.</p>
 
+<p>To illustrate this, we'll change the 
+domain to which the mail is addressed from <code>localhost</code> 
+to <code>example.net</code>:</p>
+
+<pre class="python">
+    mailTo = "tutorial_recipient@example.net"
+</pre>
+
+<p>We'll also have to stop the server that is accepting mail for 
+<code>tutorial_recipient@localhost</code> and start a server to accept mail 
+for <code>tutorial_recipient@example.net</code>
+by running the following from the command prompt:</p>
+<pre class="shell">
+kill `cat server.pid`
+twistd --pidfile=server.pid mail -H example.net -s 8025 \
+       -d example.net=/tmp/emails -u tutorial_recipient=pwd
+</pre>
 <p>In <a href="smtpclient-9.tac">smtpclient-9.tac</a>, we'll take the
 first step towards this feature by defining a function which returns
 the mail exchange host for a particular domain:</p>
@@ -643,13 +678,13 @@
 
 <pre class="python">
 smtpClientService = internet.TCPClient(
-    getMailExchange('example.net'), 25, smtpClientFactory)
+    getMailExchange('example.net'), 8025, smtpClientFactory)
 </pre>
 
 <p>We'll expand on the definition of <code>getMailExchange</code> in
 the next example.</p>
 
-<h3>SMTP Client 10</h3>
+<h2>SMTP Client 10</h2>
 
 <p>In the previous example we defined <code>getMailExchange</code> to
 return a string representing the mail exchange host for a particular
@@ -677,7 +712,7 @@
 def cbMailExchange(exchange):
     smtpClientFactory = SMTPClientFactory()
 
-    smtpClientService = internet.TCPClient(exchange, 25, smtpClientFactory)
+    smtpClientService = internet.TCPClient(exchange, 8025, smtpClientFactory)
     smtpClientService.setServiceParent(application)
 
 getMailExchange('example.net').addCallback(cbMailExchange)
@@ -694,17 +729,32 @@
 as set the <code>TCPClient</code>'s service parent, just as we did in
 the previous examples.</p>
 
-<h3>SMTP Client 11</h3>
+<h2>SMTP Client 11</h2>
 
 <p>At last we're ready to perform the mail exchange lookup.  We do
 this by calling on an object provided specifically for this
-task, <code>twisted.mail.relaymanager.MXCalculator</code>:</p>
+task, <code class="API">twisted.mail.relaymanager.MXCalculator</code>.</p>
+<p>
+Ideally, we would lookup the actual address of <code>example.net</code> and 
+then contact it on port 25 which is the well-known port designated for SMTP.
+However, many ISPs block outgoing connections on port 25 because of spam.
+So, for the purposes of the tutorial, we'll configure <code>MXCalculator</code>
+to consult a file which specifies the mapping of domains to addresses 
+instead of contacting a DNS server.
+The <a href="hosts"><code>hosts</code></a> file maps <code>example.net</code>
+to address <code>127.0.0.1</code> which is the same as <code>localhost</code>.
+</p>
 
+<p>
+The following modification in <a href="smtpclient-11.tac">smtpclient-11.tac</a>
+creates such an <code>MXCalculator</code>:
+</p>
 <pre class="python">
 def getMailExchange(host):
     def cbMX(mxRecord):
         return str(mxRecord.name)
-    return relaymanager.MXCalculator().getMX(host).addCallback(cbMX)
+    return (relaymanager.MXCalculator(createResolver(None, None, b"hosts"))
+            .getMX(host).addCallback(cbMX))
 </pre>
 
 <p>Because <code>getMX</code> returns a <code>Record_MX</code> object
@@ -712,12 +762,25 @@
 results we want.  We have already converted the rest of the tutorial
 application to expect a <code>Deferred</code>
 from <code>getMailExchange</code>, so no further changes are
-required.  <a href="smtpclient-11.tac">smtpclient-11.tac</a> completes
-this tutorial by being able to both look up the mail exchange host for
-the recipient domain, connect to it, complete an SMTP transaction,
-report its results, and finally shut down the reactor.</p>
+required.  </p>
 
-<!-- TODO: write a conclusion to wrap it up -->
+<p>
+In case your ISP does not block port 25 and you'd like to try sending mail 
+to port 25 on <code>example.net</code>, try running 
+<a href="smtpclient-11a.tac">smtpclient-11a.tac</a>.  It configures the
+<code>MXCalculator</code> to contact a DNS server to get the address of 
+<code>example.net</code> and sends the message to its port 25.
+</p>
 
+
+<h2>Summary</h2>
+<p>
+This tutorial has worked its way from the skeleton of a Twisted application, 
+through an SMTP client which sends a message to a recipient on an SMTP server
+at a fixed address and must be manually terminated, and finally onto an SMTP 
+client which looks up the mail exchange host for the recipient domain, 
+connects to it, delivers a message, reports its results, and 
+terminates the program.
+</p>
 </body>
 </html>
Index: doc/mail/tutorial/smtpclient/smtpclient-9.tac
===================================================================
--- doc/mail/tutorial/smtpclient/smtpclient-9.tac	(revision 38902)
+++ doc/mail/tutorial/smtpclient/smtpclient-9.tac	(working copy)
@@ -49,5 +49,5 @@
 smtpClientFactory = SMTPClientFactory()
 
 smtpClientService = internet.TCPClient(
-    getMailExchange('example.net'), 25, smtpClientFactory)
+    getMailExchange('example.net'), 8025, smtpClientFactory)
 smtpClientService.setServiceParent(application)
