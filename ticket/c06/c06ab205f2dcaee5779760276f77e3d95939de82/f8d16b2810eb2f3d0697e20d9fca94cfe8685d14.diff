--- test_wsgi.py	2007-04-30 15:35:17.000000000 +0200
+++ test_wsgi_new.py	2007-04-30 15:51:36.000000000 +0200
@@ -3,7 +3,7 @@
 import time
 from twisted.web2.test.test_server import BaseCase
 from twisted.web2 import resource
-from twisted.internet import reactor, interfaces
+from twisted.internet import reactor, interfaces, defer
 from twisted.python import log
 
 if interfaces.IReactorThreads(reactor, None) is not None:
@@ -253,26 +253,30 @@
         keys = env.keys()
         keys.sort()
         envstring = ''.join(['%s=%r;' % (k, v) for k, v in env.items()])
-        self.assertResponse(
+        return self.assertResponse(
             (WSGI(self.envApp(*keys)), uri, None, None, version),
             (200, {}, envstring))
 
     def test_wsgi_url_scheme(self):
         """wsgi.url_scheme"""
-        self.assertEnv('https://host/', {'wsgi.url_scheme': 'https'})
-        self.assertEnv('http://host/', {'wsgi.url_scheme': 'http'})
+        return defer.DeferredList([
+            self.assertEnv('https://host/', {'wsgi.url_scheme': 'https'}),
+            self.assertEnv('http://host/', {'wsgi.url_scheme': 'http'}),
+        ], fireOnOneErrback=True)
 
     def test_SERVER_PROTOCOL(self):
         """SERVER_PROTOCOL"""
-        self.assertEnv('http://host/', {'SERVER_PROTOCOL': 'HTTP/1.1'})
+        return self.assertEnv('http://host/', {'SERVER_PROTOCOL': 'HTTP/1.1'})
 
     def test_SERVER_PORT(self):
         """SERVER_PORT"""
-        self.assertEnv('http://host/', {'SERVER_PORT': '80'})
-        self.assertEnv('http://host:523/', {'SERVER_PORT': '523'})
-        self.assertEnv('https://host/', {'SERVER_PORT': '443'})
-        self.assertEnv('https://host:523/', {'SERVER_PORT': '523'})
-        self.assertEnv('/foo', {'SERVER_PORT': '80'}, version=(1,0))
+        return defer.DeferredList([
+            self.assertEnv('http://host/', {'SERVER_PORT': '80'}),
+            self.assertEnv('http://host:523/', {'SERVER_PORT': '523'}),
+            self.assertEnv('https://host/', {'SERVER_PORT': '443'}),
+            self.assertEnv('https://host:523/', {'SERVER_PORT': '523'}),
+            self.assertEnv('/foo', {'SERVER_PORT': '80'}, version=(1,0)),
+        ], fireOnOneErrback=True)
 
 if WSGI is None:
     for cls in (TestContainer, TestWSGIEnvironment):
