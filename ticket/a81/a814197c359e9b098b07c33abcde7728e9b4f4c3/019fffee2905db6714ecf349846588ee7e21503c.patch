commit 66b268e99061fa7bea43c99af81f75d58f8c898f
Author: Dustin J. Mitchell <dustin@zmanda.com>
Date:   Sat Jun 25 21:18:48 2011 -0500

    proposed patch

diff --git a/twisted/internet/defer.py b/twisted/internet/defer.py
index 5231673..cd713ec 100644
--- a/twisted/internet/defer.py
+++ b/twisted/internet/defer.py
@@ -805,16 +805,20 @@ def _parseDListResult(l, fireOnOneErrback=False):
 
 
 
-def gatherResults(deferredList):
+def gatherResults(deferredList, consumeErrors=False):
     """
     Returns list with result of given L{Deferred}s.
 
-    This builds on L{DeferredList} but is useful since you don't
-    need to parse the result for success/failure.
+    This builds on L{DeferredList} but is useful since you don't need to parse
+    the result for success/failure.  If the L{Deferreds} in C{deferredList} are
+    not further protected from failure, then pass C{consumeErrors=True} and
+    handle the failures in the L{Deferred} returned from L{gatherResults}.
 
     @type deferredList:  C{list} of L{Deferred}s
+    @param consumeErrors: passed to L{DeferredList.__init__}
     """
-    d = DeferredList(deferredList, fireOnOneErrback=True)
+    d = DeferredList(deferredList, fireOnOneErrback=True,
+                                   consumeErrors=consumeErrors)
     d.addCallback(_parseDListResult)
     return d
 
diff --git a/twisted/test/test_defer.py b/twisted/test/test_defer.py
index 2404c31..bbffed6 100644
--- a/twisted/test/test_defer.py
+++ b/twisted/test/test_defer.py
@@ -320,6 +320,13 @@ class DeferredTestCase(unittest.TestCase):
         dl[1].addErrback(lambda e: 1)
 
 
+    def testGatherResultsWithConsumeErrors(self):
+        # test successful list of deferreds
+        d = defer.gatherResults([defer.succeed(1)], consumeErrors=True)
+        self.assertEqual(d.consumeErrors, True)
+        return d
+
+
     def test_maybeDeferredSync(self):
         """
         L{defer.maybeDeferred} should retrieve the result of a synchronous
