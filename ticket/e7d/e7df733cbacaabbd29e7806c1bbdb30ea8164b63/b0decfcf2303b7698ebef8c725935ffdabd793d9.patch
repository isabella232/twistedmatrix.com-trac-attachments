# Bazaar merge directive format 2 (Bazaar 0.90)
# revision_id: esteve@fluidinfo.com-20090827160102-bjc0vdguiw0uddms
# target_branch: file:///home/esteve/bzr-projects/twisted/trunk/
# testament_sha1: 73eecdcfb955d6b16c7bc5ad0bca872b483d4010
# timestamp: 2009-08-27 18:05:36 +0200
# base_revision_id: svn-v4:bbbe8e31-12d6-0310-92fd-\
#   ac37d47ddeeb:trunk:27242
# 
# Begin patch
=== modified file 'twisted/conch/checkers.py'
--- twisted/conch/checkers.py	2009-03-28 15:13:23 +0000
+++ twisted/conch/checkers.py	2009-08-27 16:01:02 +0000
@@ -132,8 +132,9 @@
         Retrieve the keys of the user specified by the credentials, and check
         if one matches the blob in the credentials.
         """
-        sshDir = os.path.expanduser(
-            os.path.join("~", credentials.username, ".ssh"))
+        sshDir = os.path.join(
+            os.path.expanduser("~" + credentials.username), ".ssh")
+
         if sshDir.startswith('~'): # didn't expand
             return False
         uid, gid = os.geteuid(), os.getegid()

=== modified file 'twisted/conch/test/test_checkers.py'
--- twisted/conch/test/test_checkers.py	2009-07-02 11:42:42 +0000
+++ twisted/conch/test/test_checkers.py	2009-08-27 16:01:02 +0000
@@ -44,7 +44,7 @@
 
     def setUp(self):
         self.checker = SSHPublicKeyDatabase()
-        self.sshDir = FilePath(self.mktemp())
+        self.sshDir = FilePath(os.path.join(self.mktemp(), ".ssh"))
         self.sshDir.makedirs()
 
         self.key1 = base64.encodestring("foobar")
@@ -52,7 +52,7 @@
         self.content = "t1 %s foo\nt2 %s egg\n" % (self.key1, self.key2)
 
         self.mockos = MockOS()
-        self.mockos.path = self.sshDir.path
+        self.mockos.path = self.sshDir.parent().path
         self.patch(os.path, "expanduser", self.mockos.expanduser)
         self.patch(pwd, "getpwnam", self.mockos.getpwnam)
         self.patch(os, "seteuid", self.mockos.seteuid)

# Begin bundle
IyBCYXphYXIgcmV2aXNpb24gYnVuZGxlIHY0CiMKQlpoOTFBWSZTWa3nOXQAAmZfgARQU+///1dI
SgC//9/xUATst4oh1gAq7OkJSTIT9SJg00Zqj9QEGgYgaaMI2gklAwTRlGqeamkfqhoHqNAGTQAA
lAkSNPUzTUeptTTJ6h6gaBoGhpkAcwCaYBMhgACYJgAAAkiEEyaYJqegqeNGFTxT1P1T1AbQRtI0
FwT4oWI9jT7/zeQqJp5UajEmZUWYNcgko2CsdC7JFIJILD9orDV6eRSKqqoPpQ2RPSxRgmch2smV
oVjYcPt1rdRzOajFmPet5EMRtX3OO1g4JXnCatieK/GhnnitguCSqY3ZorEhkLqCOfhagdshhEYn
URnFaHt+sLnX8fPtZ0THXjtEjvJEwKpFEjUCjvNjmi102O9BFbymyQi49SRCQxcqt2kgdUPM19kg
WqCQ8EG86awJATjfqkczWcill3gVgRU7kiBeMVHefAGgDUBRIFSyQ4GW2TxuJriLWRjViqRIv+MV
liQVy3CIWOqejTIZ6cMc5FdN4D9dl4D6S7HEmW2Gqk9jgAyuHWkkig6pLWQQoFpBInLrIqiwoZId
IcL9MCBmkN6xnKbJIwPqMnUgpMTTTYTkDakRKT4RariBYSuNb6SqRbI/gdNC2pEITLyccc0h4Ezi
433nfwmrJvcSMHBGNR5fHGBwJXHRG0BmW8eWyrMLySRMxSLWLx7AZ0KNKVkZPVUhxMYavDEBpV1O
SRAzoZSNTEsH+lGeSeiu8MAuuTkXvDRIgHM10GdUTKpvJVjkpOUtDC2qXEI2PiS7neGJnZ6jFlOV
wijMwzN3R5q2MANwyX46ofa280RcUTIakriti9bhoinNpvPA7T+KTxSN9GB2D6jcj18jANEXp4sg
tJ174eTSPqy/PxMjI4GJgkRLD5nmhgtSKRkjsA+Dw8QNB8AcSpIwNvoU7Eofb7sxXRGoTfz6oOlA
mkTMLNItvOKRmhWBEGrSjQN03wIJFwHUxSNMqe4ChaEHhOBhNN1/Y5c28ukIjlJjkeZ+SRyeMDYk
cjztbQvguQVdjXNqUkVEbpkiA4peEha+WCQ5iEXUK04oohZKC78hbA2F5MJvl7HEGIpFaDi6Kfu1
lPbliG0P3NY5tOB2oTpzBf2czoVeiDgIgH6c0v+wAyOHcMh3dnTJ2E80BPuI1ihubJ639EvJBIqW
IcGIFptN6K50EffKMNSD2Jm580HyFwxuAoMPMDiXZnYkbnFa2qGxwiGyWuwYkcpe+3aj0EkHduWF
oy25ZFNMGpP3LaBOTMZocCq5M4p5IYdxF16Q+hJmEypsyDKEfgROKDpGggYXXwHojJDLrsXj/c+q
ed5jq6Yh73g5CuVFC3MqqMoUSgqWkaMEiQxxU5ap0FXGBWyhPNZoUDKMQgBFiKQ6tPxBwsiGwW2J
PMM3gajP8GrIWbTJOrU9iBykNBkilu6CS6cTW6BtoKqaFMFlCXvOqRCQZgcdRmRLcOdC/jIQwU0C
cz0ZkFMiAWJDuRYLohoInvu6dQNKC8DlOkX6bKO9Z7GRbWBmIvTIKURAyEcTCUM7g7Oym/JGr/xd
yRThQkK3nOXQ
