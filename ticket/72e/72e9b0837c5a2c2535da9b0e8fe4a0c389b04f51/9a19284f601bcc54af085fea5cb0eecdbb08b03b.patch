Index: twisted/internet/base.py
===================================================================
--- twisted/internet/base.py	(revision 26780)
+++ twisted/internet/base.py	(working copy)
@@ -903,7 +903,7 @@
             """
             from twisted.python import threadpool
             self.threadpool = threadpool.ThreadPool(0, 10, 'twisted.internet.reactor')
-            self.callWhenRunning(self.threadpool.start)
+            self._threadpoolStartupID = self.callWhenRunning(self.threadpool.start)
             self.threadpoolShutdownID = self.addSystemEventTrigger(
                 'during', 'shutdown', self._stopThreadPool)
 
Index: twisted/trial/util.py
===================================================================
--- twisted/trial/util.py	(revision 26780)
+++ twisted/trial/util.py	(working copy)
@@ -190,11 +190,12 @@
         if interfaces.IReactorThreads.providedBy(reactor):
             reactor.suggestThreadPoolSize(0)
             if getattr(reactor, 'threadpool', None) is not None:
-                try:
-                    reactor.removeSystemEventTrigger(
-                        reactor.threadpoolShutdownID)
-                except KeyError:
-                    pass
+                triggers = [reactor._threadpoolStartupID, reactor.threadpoolShutdownID]
+                for trigger in triggers:
+                    try:
+                        reactor.removeSystemEventTrigger(trigger)
+                    except KeyError:
+                        pass
                 # Remove the threadpool, and let the reactor put it back again
                 # later like a good boy
                 reactor._stopThreadPool()
