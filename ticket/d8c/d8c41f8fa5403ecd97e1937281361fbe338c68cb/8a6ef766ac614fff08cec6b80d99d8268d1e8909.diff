diff --git a/twisted/web/_flatten.py b/twisted/web/_flatten.py
index bfdc776..35195f4 100644
--- a/twisted/web/_flatten.py
+++ b/twisted/web/_flatten.py
@@ -18,6 +18,7 @@ from twisted.web.error import UnfilledSlot, UnsupportedType, FlattenerError
 from twisted.web.iweb import IRenderable
 from twisted.web._stan import (
     Tag, slot, voidElements, Comment, CDATA, CharRef)
+from twisted.python import urlpath
 
 
 
@@ -96,7 +97,7 @@ def _getSlotValue(name, slotData, default=None):
 
 def _flattenElement(request, root, slotData, renderFactory, inAttribute):
     """
-    Make C{root} slightly more flat by yielding all its immediate contents 
+    Make C{root} slightly more flat by yielding all its immediate contents
     as strings, deferreds or generators that are recursive calls to itself.
 
     @param request: A request object which will be passed to
@@ -179,6 +180,8 @@ def _flattenElement(request, root, slotData, renderFactory, inAttribute):
         yield root.addCallback(
             lambda result: (result, _flattenElement(request, result, slotData,
                                              renderFactory, inAttribute)))
+    elif isinstance(root, urlpath.URLPath):
+        yield str(root)
     elif IRenderable.providedBy(root):
         result = root.render(request)
         yield _flattenElement(request, result, slotData, root, inAttribute)
diff --git a/twisted/web/test/test_flatten.py b/twisted/web/test/test_flatten.py
index c843a61..42777b6 100644
--- a/twisted/web/test/test_flatten.py
+++ b/twisted/web/test/test_flatten.py
@@ -15,7 +15,7 @@ from twisted.web.error import UnfilledSlot, UnsupportedType, FlattenerError
 from twisted.web.template import tags, Comment, CDATA, CharRef, slot
 from twisted.web.iweb import IRenderable
 from twisted.web.test._util import FlattenTestCase
-
+from twisted.python import urlpath
 
 class TestSerialization(FlattenTestCase):
     """
@@ -202,6 +202,22 @@ class TestSerialization(FlattenTestCase):
         return self.assertFlattensTo(t, '<p><em>four&gt;</em></p>')
 
 
+    def test_serializeURLPath(self):
+        """
+        Test that url path is properly serialized
+        """
+        t = urlpath.URLPath.fromString("http://example.com/")
+        return self.assertFlattensTo(t, "http://example.com/" )
+
+
+    def test_serializeURLPath2(self):
+        """
+        Test that url path is properly serialized
+        """
+        t = urlpath.URLPath.fromString("http://example.com/foo/bar?yes=no&no=yes#footer")
+        return self.assertFlattensTo(t,"http://example.com/foo/bar?yes=no&no=yes#footer" )
+
+
     def test_unknownTypeRaises(self):
         """
         Test that flattening an unknown type of thing raises an exception.
