--- imap4.py	Thu Oct 28 14:46:19 2004
+++ imap4.new	Thu Oct 28 14:45:14 2004
@@ -1934,7 +1934,7 @@
 class IllegalServerResponse(IMAP4Exception): pass
 
 
-class IMAP4Client(basic.LineReceiver):
+class IMAP4Client(basic.LineReceiver, policies.TimeoutMixin):
     """IMAP4 client protocol implementation
 
     @ivar state: A string representing the state the connection is currently
@@ -1950,6 +1950,10 @@
 
     startedTLS = False
 
+    #Number of seconds to wait before timing out a connection.
+    #If the number is <= 0 no timeout checking will be performed.
+    timeout = 0
+
     # Capabilities are not allowed to change during the session
     # So cache the first response and use that for all later
     # lookups
@@ -2017,8 +2021,20 @@
         self._parts = [rest, '\r\n']
         self.setRawMode()
 
+    def connectionMade(self):
+        if self.timeout > 0:
+            self.setTimeout(self.timeout)
+
+    def connectionLost(self, reason):
+        """We are no longer connected"""
+        if self.timeout > 0:
+            self.setTimeout(None)
+
     def lineReceived(self, line):
 #        print 'C: ' + repr(line)
+        if self.timeout > 0:
+            self.resetTimeout()
+
         if self._parts is None:
             lastPart = line.rfind(' ')
             if lastPart != -1:
