Index: twisted/internet/epollreactor.py
===================================================================
--- twisted/internet/epollreactor.py	(revision 17793)
+++ twisted/internet/epollreactor.py	(working copy)
@@ -50,7 +50,10 @@
                 cmd = _epoll.CTL_MOD
             primary[fd] = 1
             selectables[fd] = xer
-            poller._control(cmd, fd, flags)
+            try:
+                poller._control(cmd, fd, flags)
+            except IOError:
+                pass
 
     def addReader(self, reader, reads=reads, writes=writes, selectables=selectables):
         """
@@ -89,7 +92,7 @@
             del primary[fd]
             try:
                 poller._control(cmd, fd, flags)
-            except:
+            except IOError:
                 pass
 
     def removeReader(self, reader, reads=reads, writes=writes, selectables=selectables):
@@ -109,27 +112,26 @@
         Remove all selectables, and return a list of them.
         """
         if self.waker is not None:
-            self.removeReader(self.waker)
+            fd = self.waker.fileno()
+            if fd in reads:
+                del reads[fd]
+                del selectables[fd]
         result = selectables.values()
         fds = selectables.keys()
         reads.clear()
         writes.clear()
         selectables.clear()
         for fd in fds:
-            poller._control(_epoll.CTL_DEL, fd, 0)
+            try:
+                poller._control(_epoll.CTL_DEL, fd, 0)
+            except IOError:
+                pass
         if self.waker is not None:
-            self.addReader(self.waker)
+            fd = self.waker.fileno()
+            reads[fd] = 1
+            selectables[fd] = self.waker
         return result
 
-    def disconnectAll(self):
-        """
-        Remove all readers and writers, and then close the epoll fd.
-        """
-        try:
-            return posixbase.PosixReactorBase.disconnectAll(self)
-        finally:
-            poller.close()
-
     def doPoll(self, timeout,
                reads=reads,
                writes=writes,
@@ -145,7 +147,7 @@
 
         try:
             l = poller.wait(len(selectables), timeout)
-        except:
+        except IOError:
             return
         _drdw = self._doReadOrWrite
         for fd, event in l:
