diff --git twisted/python/logfile.py twisted/python/logfile.py
index e35811d..0cfdae3 100644
--- twisted/python/logfile.py
+++ twisted/python/logfile.py
@@ -60,6 +60,17 @@ class BaseLogFile:
     def _openFile(self):
         """
         Open the log file.
+
+        We don't open files in binary mode since:
+        * an encoding would have to be chosen and that would have to be
+          configurable
+        * Twisted doesn't actually support logging non-ASCII messages
+          (see #989)
+        * logging plain ASCII messages is fine with any non-binary mode.
+
+        See
+        https://twistedmatrix.com/pipermail/twisted-python/2013-October/027651.html
+        for more information.
         """
         self.closed = False
         if os.path.exists(self.path):
@@ -306,6 +317,12 @@ class LogReader:
     """Read from a log file."""
 
     def __init__(self, name):
+        """
+        Open the log file for reading.
+
+        The comments about binary-mode for L{BaseLogFile._openFile} also apply
+        here.
+        """
         self._file = open(name, "r")
 
     def readLines(self, lines=10):
diff --git twisted/test/test_logfile.py twisted/test/test_logfile.py
index f782b6b..f21ad68 100644
--- twisted/test/test_logfile.py
+++ twisted/test/test_logfile.py
@@ -1,6 +1,8 @@
 # Copyright (c) Twisted Matrix Laboratories.
 # See LICENSE for details.
 
+from __future__ import division, absolute_import
+
 import datetime
 import errno
 import os
@@ -161,6 +163,19 @@ class LogFileTestCase(unittest.TestCase):
         log.close()
 
 
+    def test_LogReaderReadsZeroLine(self):
+        """
+        L{LogReader.readLines} supports reading no line.
+        """
+        # We don't need any content, just a file path that can be opened.
+        with open(self.path, "w"):
+            pass
+
+        reader = logfile.LogReader(self.path)
+        self.assertEqual([], reader.readLines(0))
+        reader.close()
+
+
     def test_modePreservation(self):
         """
         Check rotated files have same permissions as original.
@@ -372,6 +387,20 @@ class LogFileTestCase(unittest.TestCase):
         log.close()
 
 
+    def test_listLogsIgnoresZeroSuffixedFiles(self):
+        """
+        L{LogFile.listLogs} ignores log files which rotated suffix is 0.
+        """
+
+        log = logfile.LogFile(self.name, self.dir)
+
+        for i in range(0, 3):
+            with open("{0}.{1}".format(log.path, i), "w") as fp:
+                fp.write("123")
+
+        self.assertEqual([1, 2], log.listLogs())
+        log.close()
+
 
 class RiggedDailyLogFile(logfile.DailyLogFile):
     _clock = 0.0
@@ -451,6 +480,7 @@ class DailyLogFileTestCase(unittest.TestCase):
         log = RiggedDailyLogFile(self.name, self.dir)
         for d in data:
             log.write(d)
+        log.flush()
 
         # This returns the current log file.
         r = log.getLog(0.0)
@@ -460,8 +490,8 @@ class DailyLogFileTestCase(unittest.TestCase):
         self.assertRaises(ValueError, log.getLog, 86400)
 
         log._clock = 86401 # New day
-        log.rotate()
         r.close()
+        log.rotate()
         r = log.getLog(0) # We get the previous log
         self.assertEqual(data, r.readLines())
         log.close()
diff --git twisted/topfiles/6749.misc twisted/topfiles/6749.misc
new file mode 100644
index 0000000..e69de29
