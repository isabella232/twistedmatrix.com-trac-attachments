Index: twisted/internet/process.py
===================================================================
--- twisted/internet/process.py	(revision 14184)
+++ twisted/internet/process.py	(working copy)
@@ -854,3 +854,10 @@
             if io.args[0] == errno.EAGAIN:
                 return 0
             return CONNECTION_LOST
+        except OSError, ose:
+            if ose.errno == errno.EPIPE:
+                return CONNECTION_LOST
+            if ose.errno == errno.EAGAIN: # MacOS-X does this
+                return 0
+            #raise
+            return CONNECTION_LOST
Index: twisted/test/test_process.py
===================================================================
--- twisted/test/test_process.py	(revision 14184)
+++ twisted/test/test_process.py	(working copy)
@@ -483,6 +483,20 @@
         self.assertEquals(p.reason.value.exitCode, 1)
         self.assertEquals(p.reason.value.signal, None)
 
+    def testHangup(self):
+        scriptPath = util.sibpath(__file__, "process_sleep.py")
+        cmd = [sys.executable, "-u", scriptPath]
+        p = TrivialProcessProtocol()
+        p1 = reactor.spawnProcess(p, cmd[0], cmd, env=None,
+                                  usePTY=self.usePTY)
+        def kill():
+            p1.signalProcess("KILL")
+            p1.loseConnection()
+        reactor.callLater(1, kill)
+        
+        spinUntil(lambda :p.finished)
+        p.reason.trap(error.ProcessTerminated)
+
     def testSignal(self):
         exe = sys.executable
         scriptPath = util.sibpath(__file__, "process_signal.py")
--- /dev/null	2005-07-11 12:43:55.760865168 -0700
+++ twisted/test/process_sleep.py	2005-07-19 14:06:35.000000000 -0700
@@ -0,0 +1,6 @@
+import time, sys
+
+print "starting to sleep"
+time.sleep(5)
+print "woke up"
+sys.exit(0)
