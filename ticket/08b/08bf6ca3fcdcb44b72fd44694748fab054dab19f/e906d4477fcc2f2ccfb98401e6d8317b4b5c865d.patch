=== modified file 'doc/names/examples/gethostbyname.py'
--- doc/names/examples/gethostbyname.py	2012-04-02 15:26:04 +0000
+++ doc/names/examples/gethostbyname.py	2012-09-15 16:49:59 +0000
@@ -4,25 +4,57 @@
 # See LICENSE for details.
 
 """
-Returns the IP address for a given hostname.
-To run this script:
-$ python gethostbyname.py <hostname>
-e.g.:
-$ python gethostbyname.py www.google.com
+USAGE: python gethostbyname.py HOSTNAME
+
+Return the IP address for a given hostname. eg
+
+ python gethostbyname.py www.google.com
+
+This script does a host lookup using the default Twisted Names
+resolver, a chained resolver, which attempts to lookup a name from:
+ * local hosts file
+ * memory cache of previous lookup results
+ * system recursive DNS servers
 """
 import sys
-from twisted.names import client
-from twisted.internet import reactor
-
-def gotResult(result):
-    print result
-    reactor.stop()
-
-def gotFailure(failure):
-    failure.printTraceback()
-    reactor.stop()
-
-d = client.getHostByName(sys.argv[1])
-d.addCallbacks(gotResult, gotFailure)
-
-reactor.run()
+from twisted.names import client, error
+from twisted.internet.task import react
+
+
+def _gotResult(address, hostname):
+    """
+    Print the IP address or an error message if an IP address was not
+    found.
+    """
+    if address:
+        sys.stdout.write(address + '\n')
+    else:
+        sys.stderr.write(
+            'ERROR: No IP adresses found for name %r\n' % (hostname,))
+
+
+def _gotFailure(failure, hostname):
+    """
+    Print a friendly error message if the hostname could not be
+    resolved.
+    """
+    failure.trap(error.DNSNameError)
+    sys.stderr.write('ERROR: hostname not found %r\n' % (hostname,))
+
+
+def main(reactor, *argv):
+    try:
+        hostname = argv[0]
+    except IndexError:
+        sys.stderr.write(
+            __doc__.lstrip() + '\n'
+            'ERROR: missing HOSTNAME argument\n')
+        raise SystemExit(1)
+
+    d = client.getHostByName(hostname)
+    d.addCallback(_gotResult, hostname)
+    d.addErrback(_gotFailure, hostname)
+    return d
+
+if __name__ == '__main__':
+    react(main, sys.argv[1:])

=== added file 'twisted/names/topfiles/5596.misc'
