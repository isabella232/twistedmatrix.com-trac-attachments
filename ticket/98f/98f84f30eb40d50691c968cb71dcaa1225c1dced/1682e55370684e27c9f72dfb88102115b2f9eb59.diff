Index: twisted/scripts/trial.py
===================================================================
--- twisted/scripts/trial.py	(revision 21389)
+++ twisted/scripts/trial.py	(working copy)
@@ -330,9 +330,12 @@
                               workingDirectory=config['temp-directory'])
 
 
+config = None
+
 def run():
     if len(sys.argv) == 1:
         sys.argv.append("--help")
+    global config
     config = Options()
     try:
         config.parseOptions()
Index: twisted/application/app.py
===================================================================
--- twisted/application/app.py	(revision 21389)
+++ twisted/application/app.py	(working copy)
@@ -317,6 +317,7 @@
                    "%s.\nSee the list of available reactors with "
                    "--help-reactors" % (e,))
             raise usage.UsageError(msg)
+        self['reactor'] = shortName
     opt_r = opt_reactor
 
 
Index: twisted/test/test_stdio.py
===================================================================
--- twisted/test/test_stdio.py	(revision 21389)
+++ twisted/test/test_stdio.py	(working copy)
@@ -6,6 +6,7 @@
 from twisted.trial import unittest
 from twisted.python import filepath
 from twisted.internet import error, defer, protocol, reactor
+from twisted.application import reactors
 
 
 class StandardIOTestProcessProtocol(protocol.ProcessProtocol):
@@ -80,9 +81,17 @@
                     os.path.dirname(os.path.dirname(twisted.__file__))),
              subenv.get('PYTHONPATH', '')
              ])
+        from twisted.scripts import trial
+        if 'reactor' in trial.config:
+           for r in reactors.getReactorTypes():
+                if r.shortName == trial.config['reactor']:
+                    r = r.moduleName
+                    break
+        else:
+            r = reactor.__class__.__module__
         args = [sys.executable,
              filepath.FilePath(__file__).sibling(sibling).path,
-             reactor.__class__.__module__] + list(args)
+             r] + list(args)
         return reactor.spawnProcess(
             proto,
             sys.executable,
