Index: twisted/internet/defer.py
===================================================================
--- twisted/internet/defer.py	(revision 41091)
+++ twisted/internet/defer.py	(working copy)
@@ -1475,7 +1475,11 @@
         @raise QueueOverflow: Too many objects are in this queue.
         """
         if self.waiting:
-            self.waiting.pop(0).callback(obj)
+            d = self.waiting.pop(0)
+            if isinstance(obj, Deferred):
+                obj.addCallbacks(d.callback, d.errback)
+            else:
+                d.callback(obj)
         elif self.size is None or len(self.pending) < self.size:
             self.pending.append(obj)
         else:
@@ -1493,7 +1497,8 @@
         L{Deferred}s are already waiting for an object from this queue.
         """
         if self.pending:
-            return succeed(self.pending.pop(0))
+            obj = self.pending.pop(0)
+            return obj if isinstance(obj, Deferred) else succeed(obj)
         elif self.backlog is None or len(self.waiting) < self.backlog:
             d = Deferred(canceller=self._cancelGet)
             self.waiting.append(d)
