diff -ruN twisted-2.5.0.p4.clean/src/TwistedCore-2.5.0/twisted/application/internet.py twisted-2.5.0.p4/src/TwistedCore-2.5.0/twisted/application/internet.py
--- twisted-2.5.0.p4.clean/src/TwistedCore-2.5.0/twisted/application/internet.py	2007-06-14 22:09:20.000000000 -0700
+++ twisted-2.5.0.p4/src/TwistedCore-2.5.0/twisted/application/internet.py	2007-06-14 21:56:42.000000000 -0700
@@ -131,7 +131,7 @@
 }
 
 import new
-for tran in 'Generic TCP UNIX SSL UDP UNIXDatagram Multicast'.split():
+for tran in 'Generic TCP UNIX TLS SSL UDP UNIXDatagram Multicast'.split():
     for side in 'Server Client'.split():
         if tran == "Multicast" and side == "Client":
             continue
@@ -205,5 +205,5 @@
 
 __all__ = (['TimerService', 'CooperatorService'] +
            [tran+side
-         for tran in 'Generic TCP UNIX SSL UDP UNIXDatagram Multicast'.split()
+         for tran in 'Generic TCP UNIX SSL TLS UDP UNIXDatagram Multicast'.split()
          for side in 'Server Client'.split()])
diff -ruN twisted-2.5.0.p4.clean/src/TwistedCore-2.5.0/twisted/application/strports.py twisted-2.5.0.p4/src/TwistedCore-2.5.0/twisted/application/strports.py
--- twisted-2.5.0.p4.clean/src/TwistedCore-2.5.0/twisted/application/strports.py	2007-06-14 22:09:20.000000000 -0700
+++ twisted-2.5.0.p4/src/TwistedCore-2.5.0/twisted/application/strports.py	2007-06-14 22:16:20.000000000 -0700
@@ -55,9 +55,25 @@
     return ((int(port), factory, cf),
             {'interface': interface, 'backlog': int(backlog)})
 
+def _parseTLS(factory, port, privateKey='server.pem', certKey=None,
+              sslmethod=None, interface='', backlog=50):
+    from gnutls.interfaces.twisted import X509Credentials
+    from gnutls.crypto import X509Certificate, X509PrivateKey
+    
+    if certKey is None:
+        certKey = privateKey
+    
+    cert = X509Certificate(open(certKey).read())
+    key = X509PrivateKey(open(privateKey).read())
+    cf = X509Credentials(cert, key)
+    
+    return ((int(port), factory, cf),
+            {'interface': interface, 'backlog': int(backlog)})
+            
 _funcs = {"tcp": _parseTCP,
           "unix": _parseUNIX,
-          "ssl": _parseSSL}
+          "ssl": _parseSSL,
+          "tls": _parseTLS}
 
 _OP, _STRING = range(2)
 def _tokenize(description):
