Index: twisted/python/log.py
===================================================================
RCS file: /cvs/Twisted/twisted/python/log.py,v
retrieving revision 1.51
diff -u -u -r1.51 log.py
--- twisted/python/log.py	5 Aug 2003 00:30:21 -0000	1.51
+++ twisted/python/log.py	6 Aug 2003 17:02:41 -0000
@@ -235,7 +235,7 @@
         self.write = f.write
         self.flush = f.flush
 
-    def _emit(self, eventDict):
+    def emit(self, eventDict):
         edm = eventDict['message']
         if not edm:
             if eventDict['isError'] and eventDict.has_key('failure'):
@@ -255,11 +255,11 @@
 
     def start(self):
         """Start observing log events."""
-        addObserver(self._emit)
+        addObserver(self.emit)
 
     def stop(self):
         """Stop observing log events."""
-        removeObserver(self._emit)
+        removeObserver(self.emit)
 
 
 class StdioOnnaStick:
@@ -309,8 +309,14 @@
     _oldshowwarning = None
 
 
-def startLogging(file, setStdout=1):
-    """Initialize logging to a specified file. If setStdout is true 
+def startLogging(file, *a, **kw):
+    """Initialize logging to a specified file.
+    """
+    flo = FileLogObserver(file)
+    startLoggingWithObserver(flo.emit, *a, **kw)
+
+def startLoggingWithObserver(observer, setStdout=1):
+    """Initialize logging to a specified observer. If setStdout is true 
        (defaults to yes), also redirect sys.stdout and sys.stderr 
        to the specified file.
     """
@@ -321,8 +327,7 @@
     if defaultObserver:
         defaultObserver.stop()
         defaultObserver = None
-    flo = FileLogObserver(file)
-    flo.start()
+    addObserver(observer)
     msg("Log opened.")
     if setStdout:
         sys.stdout = logfile
Index: twisted/python/syslog.py
===================================================================
RCS file: /cvs/Twisted/twisted/python/syslog.py,v
retrieving revision 1.1
diff -u -u -r1.1 syslog.py
--- twisted/python/syslog.py	23 Nov 2002 19:54:22 -0000	1.1
+++ twisted/python/syslog.py	6 Aug 2003 17:02:41 -0000
@@ -18,33 +18,36 @@
 import sys
 import log
 
-class SyslogLogger:
-
+class SyslogObserver:
     def __init__(self, prefix):
-        self.prefix = prefix
+        syslog.openlog(prefix)
 
-    def write(self, data):
-        if not data or data=='\n':
-            return
-        logger = log.logOwner.owner()
-        if logger:
-            data = logger.log(data)
-        data = data.split('\n')
-        if not data[-1]:
-            data.pop()
-        for line in data:
-            syslog.syslog("[%s] %s" % (self.prefix, line))
+    def emit(self, eventDict):
+        edm = eventDict['message']
+        if not edm:
+            if eventDict['isError'] and eventDict.has_key('failure'):
+                text = eventDict['failure'].getTraceback()
+            elif eventDict.has_key('format'):
+                text = eventDict['format'] % eventDict
+            else:
+                # we don't know how to log this
+                return
+        else:
+            text = ' '.join(map(str, edm))
+
+        lines = text.split('\n')
+        print repr(lines[-1:])
+        while lines[-1:] == ['']:
+            lines.pop()
 
-    def writelines(self, lines):
+        firstLine = 1
         for line in lines:
-            self.write(line)
-
-    def close(self):
-        pass
-
-    def flush(self):
-        pass
-
-
-def startLogging(prefix='Twisted'):
-    sys.stdout = sys.stderr = log.logfile = SyslogLogger(prefix)
+            if firstLine:
+                firstLine=0
+            else:
+                line = '\t%s' % line
+            syslog.syslog('[%s] %s' % (eventDict['system'], line))
+
+def startLogging(prefix='Twisted', setStdout=1):
+    obs = SyslogObserver(prefix)
+    log.startLoggingWithObserver(obs.emit, setStdout=setStdout)
Index: twisted/scripts/twistd.py
===================================================================
RCS file: /cvs/Twisted/twisted/scripts/twistd.py,v
retrieving revision 1.53
diff -u -u -r1.53 twistd.py
--- twisted/scripts/twistd.py	19 Jul 2003 21:36:49 -0000	1.53
+++ twisted/scripts/twistd.py	6 Aug 2003 17:02:41 -0000
@@ -282,11 +282,11 @@
             print 'daemons cannot log to stdout'
             os._exit(1)
         logFile = sys.stdout
-    elif config['nodaemon'] and not config['logfile']:
-        logFile = sys.stdout
     elif config['syslog']:
         from twisted.python import syslog
         syslog.startLogging(config['prefix'])
+    elif config['nodaemon'] and not config['logfile']:
+        logFile = sys.stdout
     else:
         logPath = os.path.abspath(config['logfile'] or 'twistd.log')
         logFile = logfile.LogFile(os.path.basename(logPath), os.path.dirname(logPath))
