Index: python/filepath.py
===================================================================
--- python/filepath.py	(revision 22975)
+++ python/filepath.py	(working copy)
@@ -113,7 +113,10 @@
 
 class _PathHelper:
     """
-    Abstract helper class also used by ZipPath; implements certain utility methods.
+    Abstract helper class also used by ZipPath; implements certain utility 
+    methods.
+
+    Subclasses should implement islink(), else walk will fail.
     """
 
     def getContent(self):
@@ -184,7 +187,7 @@
         @return: a generator yielding FilePath-like objects.
         """
         yield self
-        if self.isdir():
+        if self.isdir() and not self.islink():
             for c in self.children():
                 for subc in c.walk():
                     yield subc
Index: test/test_paths.py
===================================================================
--- test/test_paths.py	(revision 22975)
+++ test/test_paths.py	(working copy)
@@ -257,6 +257,18 @@
 
 class FilePathTestCase(AbstractFilePathTestCase):
 
+    def test_walk(self):
+        """Verify that walking the path gives the same result as the known file
+        hierarchy.
+        """
+        if hasattr(os, "symlink"):
+            os.symlink(self.path.child("sub1").path,
+                       self._mkpath("sub1", "sub1.loopylink"))
+            self.all.sort()
+        x = [foo.path for foo in self.path.walk()]
+        x.sort()
+        self.assertEquals(x, self.all)
+
     def test_getAndSet(self):
         content = 'newcontent'
         self.path.child('new').setContent(content)
