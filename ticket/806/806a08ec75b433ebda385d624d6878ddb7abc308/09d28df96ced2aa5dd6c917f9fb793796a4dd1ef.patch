diff --git a/twisted/conch/ssh/connection.py b/twisted/conch/ssh/connection.py
index 4cd6a9d..50790a4 100644
--- a/twisted/conch/ssh/connection.py
+++ b/twisted/conch/ssh/connection.py
@@ -46,15 +46,17 @@ class SSHConnection(service.SSHService):
         self.channels = {} # local channel ID -> subclass of SSHChannel
         self.channelsToRemoteChannel = {} # subclass of SSHChannel -> 
                                           # remote channel ID
-        self.deferreds = {"global":[]} # local channel -> list of deferreds 
+        self.deferreds = {"global": []} # local channel -> list of deferreds 
                             # for pending requests or 'global' -> list of 
                             # deferreds for global requests
         self.transport = None # gets set later
 
+
     def serviceStarted(self):
         if hasattr(self.transport, 'avatar'):
             self.transport.avatar.conn = self
 
+
     def serviceStopped(self):
         """
         Called when the connection is stopped.
@@ -62,6 +64,7 @@ class SSHConnection(service.SSHService):
         map(self.channelClosed, self.channels.values())
         self._cleanupGlobalDeferreds()
 
+
     def _cleanupGlobalDeferreds(self):
         """
         All pending requests that have returned a deferred must be errbacked
@@ -72,6 +75,7 @@ class SSHConnection(service.SSHService):
             d.errback(error.ConchError("Connection stopped."))
         del self.deferreds["global"][:]
 
+
     # packet methods
     def ssh_GLOBAL_REQUEST(self, packet):
         """
diff --git a/twisted/conch/test/test_connection.py b/twisted/conch/test/test_connection.py
index b40f026..8c929c6 100644
--- a/twisted/conch/test/test_connection.py
+++ b/twisted/conch/test/test_connection.py
@@ -175,7 +175,7 @@ class TestConnection(connection.SSHConnection):
 class ConnectionTestCase(unittest.TestCase):
 
     if test_userauth.transport is None:
-        skip = "Cannot run without PyCrypto"
+        skip = "Cannot run without both PyCrypto and pyasn1"
 
     def setUp(self):
         self.transport = test_userauth.FakeTransport(None)
@@ -628,6 +628,8 @@ class ConnectionTestCase(unittest.TestCase):
 
     def test_channelClosedCausesLeftoverChannelDeferredsToErrback(self):
         """
+        Whenever an SSH channel gets closed any deferred that was returned 
+        by a sendRequest() on its parent connection must be errbacked.
         """
 
         channel = TestChannel()
@@ -635,16 +637,18 @@ class ConnectionTestCase(unittest.TestCase):
 
         d = self.conn.sendRequest(channel, "dummyrequest", "dummydata",
                 wantReply=1)
-        d.addCallbacks(lambda result: self.fail("Should have errbacked"),
-                lambda failure: failure.trap(error.ConchError))
+        d = self.failUnlessFailure(d, error.ConchError)
 
         self.conn.channelClosed(channel)
 
         return d
 
 class TestCleanConnectionShutdown(unittest.TestCase):
+    """
+    Check whether correct cleanup is performed on connection shutdown.
+    """
     if test_userauth.transport is None:
-        skip = "Cannot run without PyCrypto nor pyasn1"
+        skip = "Cannot run without both PyCrypto and pyasn1"
 
     def setUp(self):
         self.transport = test_userauth.FakeTransport(None)
@@ -654,16 +658,15 @@ class TestCleanConnectionShutdown(unittest.TestCase):
 
     def test_serviceStoppedCausesLeftoverGlobalDeferredsToErrback(self):
         """
-        Tests that once the service is stopped any leftover deferred in any
-        channel actually gets errbacked.
+        Once the service is stopped any leftover global deferred returned by
+        a sendGlobalRequest() call must be errbacked.
         """
         self.conn.serviceStarted()
 
         d = self.conn.sendGlobalRequest("dummyrequest", "dummydata",
                 wantReply=1)
-        d.addCallbacks(lambda result: self.fail("Should have errbacked"),
-                lambda failure: failure.trap(error.ConchError))
-
+        d = self.failUnlessFailure(d, error.ConchError)
+        
         self.conn.serviceStopped()
         return d
 
diff --git a/twisted/conch/test/test_ssh.py b/twisted/conch/test/test_ssh.py
index 6b39389..aa27293 100644
--- a/twisted/conch/test/test_ssh.py
+++ b/twisted/conch/test/test_ssh.py
@@ -457,7 +457,7 @@ if Crypto is not None and pyasn1 is not None:
             log.msg('opened false')
 
         def _cbRequestWorked(self, ignored):
-            unittest.fail('False channel should never callback.')
+            log.err('False channel should never callback.')
 
         def _ebRequestFailed(self, reason):
             pass
