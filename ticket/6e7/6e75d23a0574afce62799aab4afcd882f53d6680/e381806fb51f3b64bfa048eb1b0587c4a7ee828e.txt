Index: base.py
===================================================================
RCS file: /cvs/Twisted/twisted/internet/base.py,v
retrieving revision 1.70
diff -u -b -r1.70 base.py
--- base.py	1 Dec 2003 18:07:41 -0000	1.70
+++ base.py	17 Jan 2004 19:57:48 -0000
@@ -148,6 +148,36 @@
             reflect.safe_repr(self.args))
 
 
+class IPv4Address(object):
+    """
+    Object representing an IPv4 socket endpoint.
+
+    @ivar type: A string describing the type of transport.
+    @ivar host: A string containing the IP address.
+    @ivar port: An integer representing the port number.
+    """
+
+    def __init__(self, type, host, port, _bwHack = None):
+        self.type = type
+        self.host = host
+        self.port = port
+        self._bwHack = _bwHack
+
+    def __getitem__(self, index):
+        return (self._bwHack or self.type, self.host, self.port)[index]
+
+    def __eq__(self, other):
+        if isinstance(other, tuple):
+            return (self._bwHack or self.type, self.host, self.port) == other
+        elif isinstance(other, IPv4Address):
+            a = (self.type, self.host, self.port)
+            b = (other.type, other.host, other.port)
+            return a == b
+        return False
+
+    def __str__(self):
+        return 'IPv4Address(%s, %r, %d)' % (self.type, self.host, self.port)
+
 class ReactorBase:
     """Default base class for Reactors.
     """
Index: tcp.py
===================================================================
RCS file: /cvs/Twisted/twisted/internet/tcp.py,v
retrieving revision 1.143
diff -u -b -r1.143 tcp.py
--- tcp.py	9 Nov 2003 02:22:16 -0000	1.143
+++ tcp.py	17 Jan 2004 19:57:48 -0000
@@ -469,18 +469,18 @@
         self._finishInit(whenDone, skt, err, reactor)
 
     def getHost(self):
-        """Returns a tuple of ('INET', hostname, port).
+        """Returns an IPv4Address.
 
         This indicates the address from which I am connecting.
         """
-        return ('INET',)+self.socket.getsockname()
+        return base.IPv4Address('TCP', *(self.socket.getsockname() + ('INET',)))
 
     def getPeer(self):
-        """Returns a tuple of ('INET', hostname, port).
+        """Returns an IPv4Address.
 
         This indicates the address that I am connected to.
         """
-        return ('INET',)+self.addr
+        return base.IPv4Address('TCP', *(self.addr + ('INET',)))
 
     def __repr__(self):
         s = '<%s to %s at %x>' % (self.__class__, self.addr, id(self))
@@ -525,19 +525,18 @@
         return holder
 
     def getHost(self):
-        """Returns a tuple of ('INET', hostname, port).
+        """Returns an IPv4Address.
 
-        This indicates the servers address.
+        This indicates the server's address.
         """
-        return ('INET',)+self.socket.getsockname()
+        return base.IPv4Address('TCP', *(self.socket.getsockname() + ('INET',)))
 
     def getPeer(self):
-        """
-        Returns a tuple of ('INET', hostname, port), indicating the connected
-        client's address.
-        """
-        return ('INET',)+self.client
+        """Returns an IPv4Address.
 
+        This indicates the client's address.
+        """
+        return base.IPv4Address('TCP', *(self.client + ('INET',)))
 
 class Port(base.BasePort):
     """I am a TCP server port, listening for connections.
@@ -684,11 +683,11 @@
         return reflect.qual(self.factory.__class__)
 
     def getHost(self):
-        """Returns a tuple of ('INET', hostname, port).
+        """Returns an IPv4Address.
 
         This indicates the server's address.
         """
-        return ('INET',)+self.socket.getsockname()
+        return base.IPv4Address('TCP', *(self.socket.getsockname() + ('INET',)))
 
 
 class Connector(base.BaseConnector):
Index: udp.py
===================================================================
RCS file: /cvs/Twisted/twisted/internet/udp.py,v
retrieving revision 1.49
diff -u -b -r1.49 udp.py
--- udp.py	28 Dec 2003 23:40:38 -0000	1.49
+++ udp.py	17 Jan 2004 19:57:48 -0000
@@ -183,10 +183,11 @@
 
     def getHost(self):
         """
-        Returns a tuple of ('INET_UDP', hostname, port), indicating
-        the servers address
+        Returns an IPv4Address.
+
+        This indicates the address from which I am connecting.
         """
-        return ('INET_UDP',)+self.socket.getsockname()
+        return base.IPv4Address('UDP', *(self.socket.getsockname() + ('INET_UDP',)))
 
 
 class ConnectedPort(Port):
@@ -258,7 +259,7 @@
         Returns a tuple of ('INET_UDP', hostname, port), indicating
         the remote address.
         """
-        return ('INET_UDP', self.remotehost, self.remoteport)
+        return base.IPv4Address('UDP', self.remotehost, self.remoteport, 'INET_UDP')
 
 
 class MulticastMixin:
