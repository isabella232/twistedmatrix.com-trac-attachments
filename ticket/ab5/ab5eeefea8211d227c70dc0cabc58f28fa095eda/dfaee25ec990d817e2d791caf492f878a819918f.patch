Index: twisted/internet/endpoints.py
===================================================================
--- twisted/internet/endpoints.py	(revision 34216)
+++ twisted/internet/endpoints.py	(working copy)
@@ -107,8 +107,11 @@
         """
         self._wrappedProtocol.writeConnectionLost()
 
+    def __repr__(self):
+        return '%s(%s,%s)'%(self.__class__.__name__,self._connectedDeferred,self._wrappedProtocol)
 
 
+
 class _WrappingFactory(ClientFactory):
     """
     Wrap a factory in order to wrap the protocols it builds.
@@ -204,6 +207,8 @@
         if not self._onConnection.called:
             self._onConnection.errback(reason)
 
+    def __repr__(self):
+        return '%s(%s)'%(self.__class__.__name__,self._wrappedFactory)
 
 
 class TCP4ServerEndpoint(object):
@@ -246,9 +251,12 @@
                              protocolFactory,
                              backlog=self._backlog,
                              interface=self._interface)
+    def __repr__(self):
+        return '%s(%s,%d,backlog=%d,interface=%s)'%(self.__class__.__name__,self._reactor,self._port,self._backlog,self._interface)
 
 
 
+
 class TCP4ClientEndpoint(object):
     """
     TCP client endpoint with an IPv4 configuration.
@@ -301,8 +309,12 @@
         except:
             return defer.fail()
 
+    def __repr__(self):
+        return '%s(%s,%s,%d,timeout=%d,bindAddress=%s)'%(self.__class__.__name__,self._reactor,self._host,self._port,self._timeout,self._bindAddress)
 
 
+
+
 class SSL4ServerEndpoint(object):
     """
     SSL secured TCP server endpoint with an IPv4 configuration.
@@ -357,6 +369,8 @@
                              backlog=self._backlog,
                              interface=self._interface)
 
+    def __repr__(self):
+        return '%s(%s,%d,%s,backlog=%d,interface=%s)'%(self.__class__.__name__,self._reactor,self._port,self._sslContextFactory,self._backlog,self._interface)
 
 
 class SSL4ClientEndpoint(object):
@@ -419,9 +433,10 @@
             return wf._onConnection
         except:
             return defer.fail()
+    def __repr__(self):
+        return '%s(%s,%s,%d,%s,timeout=%d,bindAddress=%s)'%(self.__class__.__name__,self._reactor,self._host,self._port,self._sslContextFactory,self._timeout,self._bindAddress)
 
 
-
 class UNIXServerEndpoint(object):
     """
     UnixSocket server endpoint.
@@ -465,6 +480,8 @@
                              backlog=self._backlog,
                              mode=self._mode,
                              wantPID=self._wantPID)
+    def __repr__(self):
+        return '%s(%s,%s,backlog=%d,mode=%d,wantPID=%d)'%(self.__class__.__name__,self._reactor,self._address,self._backlog,self._mode,self._wantPID)
 
 
 
@@ -517,8 +534,9 @@
         except:
             return defer.fail()
 
+    def __repr__(self):
+        return '%s(%s,%s,timeout=%d,checkPID=%s)'%(self.__class__.__name__,self._reactor,self._path,self._timeout,self._checkPID)
 
-
 class AdoptedStreamServerEndpoint(object):
     """
     An endpoint for listening on a file descriptor initialized outside of
@@ -564,8 +582,9 @@
             return defer.fail()
         return defer.succeed(port)
 
+    def __repr__(self):
+        return '%s(%s,%d,%s)'%(self.__class__.__name__,self.reactor,self.fileno,self.addressFamily)
 
-
 def _parseTCP(factory, port, interface="", backlog=50):
     """
     Internal parser function for L{_parseServer} to convert the string
Index: twisted/internet/test/test_endpoints2.py
===================================================================
--- twisted/internet/test/test_endpoints2.py	(revision 0)
+++ twisted/internet/test/test_endpoints2.py	(revision 0)
@@ -0,0 +1,74 @@
+import unittest
+from twisted.internet.endpoints import _WrappingProtocol
+from twisted.internet.endpoints import _WrappingFactory
+from twisted.internet.endpoints import TCP4ServerEndpoint
+from twisted.internet.endpoints import TCP4ClientEndpoint
+from twisted.internet.endpoints import SSL4ServerEndpoint
+from twisted.internet.endpoints import SSL4ClientEndpoint
+from twisted.internet.endpoints import UNIXServerEndpoint
+from twisted.internet.endpoints import AdoptedStreamServerEndpoint
+
+
+
+
+class _WrappingProtocolTestCase(unittest.TestCase):
+    def test_WrappingProtocolTestCase(self):
+        expected=_WrappingProtocol("test1","test2")
+        actual=("_WrappingProtocol(test1,test2)")
+        self.assertEqual(expected.__repr__(),actual)
+
+
+
+class _WrappingFactoryTestCase(unittest.TestCase):
+    def test_WrappingFactory(self):
+        expected=_WrappingFactory('testString')
+        actual=("_WrappingFactory(testString)")
+        self.assertEqual(expected.__repr__(),actual)
+
+
+
+class TCP4ServerEndpointTestCase(unittest.TestCase):
+    def testTCP4ServerEndpoint(self):
+        expected=TCP4ServerEndpoint(None,1234,56,'testString')
+        actual=("TCP4ServerEndpoint(None,1234,backlog=56,interface=testString)")
+        self.assertEqual(expected.__repr__(),actual)
+
+
+
+class TCP4ClientEndpointTestCase(unittest.TestCase):
+    def testTCP4ClientEndpoint(self):
+        expected=TCP4ClientEndpoint(None,'test!',12345,676,(1,2,3))
+        actual=("TCP4ClientEndpoint(None,test!,12345,timeout=676,bindAddress=(1, 2, 3))")
+        print actual,expected
+        self.assertEqual(expected.__repr__(),actual)
+
+
+
+class SSL4ServerEndpointTestCase(unittest.TestCase):
+    def testSSL4ServerEndpoint(self):
+        expected=SSL4ServerEndpoint(None,12345,'test1',123,'test2')
+        actual=("SSL4ServerEndpoint(None,12345,test1,backlog=123,interface=test2)")
+        self.assertEqual(expected.__repr__(),actual)
+
+
+
+class SSL4ClientEndpointTestCase(unittest.TestCase):
+    def testSSL4ClientEndpoint(self):
+        expected=SSL4ClientEndpoint(None,'host',1235,'test1',56,(1,'add'))
+        actual=("SSL4ClientEndpoint(None,host,1235,test1,timeout=56,bindAddress=(1, 'add'))")
+        self.assertEqual(expected.__repr__(),actual)
+
+
+
+class UNIXServerEndpointTestCase(unittest.TestCase):
+    def testUNIXServerEndpoint(self):
+        expected=UNIXServerEndpoint(None,'add',456,0777,1)
+        actual=("UNIXServerEndpoint(None,add,backlog=456,mode=511,wantPID=1)")
+
+        self.assertEqual(expected.__repr__(),actual)
+
+class AdoptedStreamServerEndpointTestCase(unittest.TestCase):
+    def test_AdoptedStreamServerEndpoint(self):
+        expected=AdoptedStreamServerEndpoint(None,1234,'address')
+        actual=("AdoptedStreamServerEndpoint(None,1234,address)")
+        self.assertEqual(expected.__repr__(),actual)
Index: twisted/internet/topfiles/5633.bugfix
===================================================================
--- twisted/internet/topfiles/5633.bugfix	(revision 0)
+++ twisted/internet/topfiles/5633.bugfix	(revision 0)
@@ -0,0 +1,8 @@
+twisted.internet.endpoints._WrappingProtocol now outputs attributes by __repr__  unlike before giving memory address
+twisted.internet.endpoints._WrappingFactory now outputs attributes by __repr__  unlike before giving memory address
+twisted.internet.endpoints.TCP4ServerEndpoint now outputs attributes by __repr__  unlike before giving memory address
+twisted.internet.endpoints.TCP4ClientEndpoint now outputs attributes by __repr__  unlike before giving memory address
+twisted.internet.endpoints.SSL4ServerEndpoint now outputs attributes by __repr__  unlike before giving memory address
+twisted.internet.endpoints.SSL4ClientEndpoint now outputs attributes by __repr__  unlike before giving memory address
+twisted.internet.endpoints.UNIXServerEndpoint now outputs attributes by __repr__  unlike before giving memory address
+twisted.internet.endpoints.AdoptedStreamServerEndpoint now outputs attributes by __repr__  unlike before giving memory address
