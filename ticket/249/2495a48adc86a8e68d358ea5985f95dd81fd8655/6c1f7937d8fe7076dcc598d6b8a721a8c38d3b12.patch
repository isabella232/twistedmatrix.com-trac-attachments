diff --git twisted/trial/reporter.py twisted/trial/reporter.py
index 477d22a..dabe746 100644
--- twisted/trial/reporter.py
+++ twisted/trial/reporter.py
@@ -23,7 +23,7 @@ try:
     from subunit import TestProtocolClient
 except ImportError:
     TestProtocolClient = None
-from zope.interface import implementer
+from zope.interface import implements
 
 pyunit = __import__('unittest')
 
@@ -50,7 +50,6 @@ class SafeStream(object):
         return untilConcludes(self.original.write, *a, **kw)
 
 
-@implementer(itrial.IReporter)
 class TestResult(pyunit.TestResult, object):
     """
     Accumulates the results of several L{twisted.trial.unittest.TestCase}s.
@@ -58,6 +57,7 @@ class TestResult(pyunit.TestResult, object):
     @ivar successes: count the number of successes achieved by the test run.
     @type successes: C{int}
     """
+    implements(itrial.IReporter)
 
     def __init__(self):
         super(TestResult, self).__init__()
@@ -193,7 +193,6 @@ class TestResult(pyunit.TestResult, object):
 
 
 
-@implementer(itrial.IReporter)
 class TestResultDecorator(proxyForInterface(itrial.IReporter,
                                             "_originalReporter")):
     """
@@ -203,14 +202,16 @@ class TestResultDecorator(proxyForInterface(itrial.IReporter,
     @type _originalReporter: A provider of L{itrial.IReporter}
     """
 
+    implements(itrial.IReporter)
+
 
 
-@implementer(itrial.IReporter)
 class UncleanWarningsReporterWrapper(TestResultDecorator):
     """
     A wrapper for a reporter that converts L{util.DirtyReactorAggregateError}s
     to warnings.
     """
+    implements(itrial.IReporter)
 
     def addError(self, test, error):
         """
@@ -298,7 +299,6 @@ class _AdaptedReporter(TestResultDecorator):
 
 
 
-@implementer(itrial.IReporter)
 class Reporter(TestResult):
     """
     A basic L{TestResult} with support for writing to a stream.
@@ -318,6 +318,8 @@ class Reporter(TestResult):
     @type _publisher: L{LogPublisher} (or another type sufficiently similar)
     """
 
+    implements(itrial.IReporter)
+
     _separator = '-' * 79
     _doubleSeparator = '=' * 79
 
@@ -917,7 +919,6 @@ class _NullColorizer(object):
 
 
 
-@implementer(itrial.IReporter)
 class SubunitReporter(object):
     """
     Reports test output via Subunit.
@@ -929,6 +930,7 @@ class SubunitReporter(object):
 
     @since: 10.0
     """
+    implements(itrial.IReporter)
 
 
     def __init__(self, stream=sys.stdout, tbformat='default',
diff --git twisted/trial/runner.py twisted/trial/runner.py
index 17c42cd..68663b5 100644
--- twisted/trial/runner.py
+++ twisted/trial/runner.py
@@ -34,7 +34,7 @@ from twisted.trial.reporter import UncleanWarningsReporterWrapper
 # These are imported so that they remain in the public API for t.trial.runner
 from twisted.trial.unittest import suiteVisit, TestSuite
 
-from zope.interface import implementer
+from zope.interface import implements
 
 pyunit = __import__('unittest')
 
@@ -301,13 +301,14 @@ def isTestCase(obj):
 
 
 
-@implementer(ITestCase)
 class TestHolder(object):
     """
     Placeholder for a L{TestCase} inside a reporter. As far as a L{TestResult}
     is concerned, this looks exactly like a unit test.
     """
 
+    implements(ITestCase)
+
     failureException = None
 
     def __init__(self, description):
diff --git twisted/trial/test/test_pyunitcompat.py twisted/trial/test/test_pyunitcompat.py
index 407620d..7b85154 100644
--- twisted/trial/test/test_pyunitcompat.py
+++ twisted/trial/test/test_pyunitcompat.py
@@ -7,7 +7,7 @@ from __future__ import division
 import sys
 import traceback
 
-from zope.interface import implementer
+from zope.interface import implements
 
 from twisted.python import reflect
 from twisted.python.failure import Failure
@@ -66,7 +66,6 @@ class TestPyUnitResult(TestCase):
         The L{PyUnitResultAdapter} is only used when the result passed to
         C{run} does *not* provide L{IReporter}.
         """
-        @implementer(IReporter)
         class StubReporter(object):
             """
             A reporter which records data about calls made to it.
@@ -75,6 +74,8 @@ class TestPyUnitResult(TestCase):
             @ivar failures: Failures passed to L{addFailure}.
             """
 
+            implements(IReporter)
+
             def __init__(self):
                 self.errors = []
                 self.failures = []
diff --git twisted/trial/test/test_runner.py twisted/trial/test/test_runner.py
index d28ccb8..12fcc86 100644
--- twisted/trial/test/test_runner.py
+++ twisted/trial/test/test_runner.py
@@ -6,7 +6,7 @@
 
 
 import StringIO, os, sys
-from zope.interface import implementer
+from zope.interface import implements
 from zope.interface.verify import verifyObject
 
 from twisted.trial.itrial import IReporter, ITestCase
@@ -33,12 +33,13 @@ class CapturingDebugger(object):
 
 
 
-@implementer(IReporter)
 class CapturingReporter(object):
     """
     Reporter that keeps a log of all actions performed on it.
     """
 
+    implements(IReporter)
+
     stream = None
     tbformat = None
     args = None
diff --git twisted/trial/test/test_util.py twisted/trial/test/test_util.py
index d66a21d..1c8611a 100644
--- twisted/trial/test/test_util.py
+++ twisted/trial/test/test_util.py
@@ -8,7 +8,7 @@ Tests for L{twisted.trial.util}
 
 import os
 
-from zope.interface import implementer
+from zope.interface import implements
 
 from twisted.internet.interfaces import IProcessTransport
 from twisted.internet import defer
@@ -436,12 +436,12 @@ class JanitorTests(TestCase):
         """
         The Janitor will kill processes during reactor cleanup.
         """
-        @implementer(IProcessTransport)
         class StubProcessTransport(object):
             """
             A stub L{IProcessTransport} provider which records signals.
             @ivar signals: The signals passed to L{signalProcess}.
             """
+            implements(IProcessTransport)
 
             def __init__(self):
                 self.signals = []
diff --git twisted/trial/unittest.py twisted/trial/unittest.py
index 1d34083..ba63d61 100644
--- twisted/trial/unittest.py
+++ twisted/trial/unittest.py
@@ -22,7 +22,7 @@ from twisted.trial import itrial, reporter, util
 
 pyunit = __import__('unittest')
 
-from zope.interface import implementer
+from zope.interface import implements
 
 
 
@@ -606,7 +606,6 @@ _logObserver = _LogObserver()
 
 _wait_is_running = []
 
-@implementer(itrial.ITestCase)
 class TestCase(_Assertions):
     """
     A unit test. The atom of the unit testing universe.
@@ -651,6 +650,8 @@ class TestCase(_Assertions):
     classes, and C{reason} is a string. See L{Todo} or L{makeTodo} for more
     information.
     """
+
+    implements(itrial.ITestCase)
     failureException = FailTest
 
     def __init__(self, methodName='runTest'):
@@ -1408,7 +1409,6 @@ class TestSuite(pyunit.TestSuite):
 
 
 
-@implementer(itrial.ITestCase)
 class TestDecorator(components.proxyForInterface(itrial.ITestCase,
                                                  "_originalTest")):
     """
@@ -1418,6 +1418,8 @@ class TestDecorator(components.proxyForInterface(itrial.ITestCase,
     @type _originalTest: A provider of L{itrial.ITestCase}
     """
 
+    implements(itrial.ITestCase)
+
 
     def __call__(self, result):
         """
