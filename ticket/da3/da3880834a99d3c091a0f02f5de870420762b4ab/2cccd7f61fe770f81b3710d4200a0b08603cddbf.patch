Index: twisted/python/text.py
===================================================================
--- twisted/python/text.py	(revision 38001)
+++ twisted/python/text.py	(working copy)
@@ -206,3 +206,15 @@
         if buf.find(p) != -1:
             return True
 
+def itemizedList(things, finalDelimiter, delimiter=', '):
+    """
+    Produce a string containing each thing in C{things},
+    separated by a C{delimiter}, with the last couple being separated
+    by C{finalDelimiter}
+    
+    @rtype: C{str}
+    """
+    if len(things) == 1:
+        return str(things[0])
+    else:
+        return "%s %s %s" % (delimiter.join(things[:-1]), finalDelimiter, things[-1])
Index: twisted/test/test_text.py
===================================================================
--- twisted/test/test_text.py	(revision 38001)
+++ twisted/test/test_text.py	(working copy)
@@ -240,3 +240,34 @@
     def test_insensitive(self):
         self.assertEqual(True, text.strFile("ThIs is A test STRING", self.io, False))
 
+class ItemizedListTest(unittest.TestCase):
+    """Input is transformed into a string representation of the list,
+    with each item separated by delimiter (defaulting to a comma) and the final
+    two being separated by a final delimiter """
+    def test_oneWord(self):
+        """With a single item, the item is returned"""
+        sample = ['One']
+        expected = 'One'
+        result = text.itemizedList(sample, 'and')
+        self.assertEqual(expected, result)
+
+    def test_twoWords(self):
+        """Two words are separated by the final delimiter"""
+        sample = ['One', 'Two']
+        expected = 'One and Two'
+        result = text.itemizedList(sample, 'and')
+        self.assertEqual(expected, result)
+
+    def test_threeWords(self):
+        """With more than two words, the first two are separated by the delimiter"""
+        sample = ['One', 'Two', 'Three']
+        expected = 'One, Two and Three'
+        result = text.itemizedList(sample, 'and')
+        self.assertEqual(expected, result)
+
+    def test_fourWords(self):
+        """If a delimiter is specified, it is used instead of the default comma"""
+        sample = ['One', 'Two', 'Three', 'Four']
+        expected = 'One; Two; Three or Four'
+        result = text.itemizedList(sample, 'or', delimiter='; ')
+        self.assertEqual(expected, result)
\ No newline at end of file
Index: twisted/topfiles/6393.feature
===================================================================
--- twisted/topfiles/6393.feature	(revision 0)
+++ twisted/topfiles/6393.feature	(working copy)
@@ -0,0 +1 @@
+Added an itemizedList method to twisted.python.text
