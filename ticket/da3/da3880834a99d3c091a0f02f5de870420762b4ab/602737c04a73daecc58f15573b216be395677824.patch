Index: listToPhrase-6393/twisted/trial/test/test_util.py
===================================================================
--- listToPhrase-6393/twisted/trial/test/test_util.py	(revision 39129)
+++ listToPhrase-6393/twisted/trial/test/test_util.py	(working copy)
@@ -757,7 +757,7 @@
         """
         sample = "One, two, three"
         error = self.assertRaises(TypeError, util._listToPhrase, sample, 'and')
-        self.assertEqual(error.message, "Things must be a list or a tuple")
+        self.assertEqual(error.args, ("Things must be a list or a tuple",))
 
 
     def test_iteratorTypeError(self):
@@ -766,7 +766,7 @@
         """
         sample = iter([1, 2, 3])
         error = self.assertRaises(TypeError, util._listToPhrase, sample, 'and')
-        self.assertEqual(error.message, "Things must be a list or a tuple")
+        self.assertEqual(error.args, ("Things must be a list or a tuple",))
 
 
     def test_generatorTypeError(self):
@@ -777,4 +777,4 @@
             for i in range(2):
                 yield i
         error = self.assertRaises(TypeError, util._listToPhrase, sample, 'and')
-        self.assertEqual(error.message, "Things must be a list or a tuple")
+        self.assertEqual(error.args, ("Things must be a list or a tuple",))
Index: listToPhrase-6393/twisted/trial/util.py
===================================================================
--- listToPhrase-6393/twisted/trial/util.py	(revision 39129)
+++ listToPhrase-6393/twisted/trial/util.py	(working copy)
@@ -439,4 +439,5 @@
         strThings = []
         for thing in things:
             strThings.append(str(thing))
-        return "%s%s%s %s" % (delimiter.join(strThings[:-1]), delimiter, finalDelimiter, strThings[-1])
+        return "%s%s%s %s" % (delimiter.join(strThings[:-1]), 
+            delimiter, finalDelimiter, strThings[-1])
