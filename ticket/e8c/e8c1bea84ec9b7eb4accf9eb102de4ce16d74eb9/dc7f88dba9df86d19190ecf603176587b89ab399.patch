Index: doc/core/howto/deferredindepth.xhtml
===================================================================
--- doc/core/howto/deferredindepth.xhtml	(revision 27019)
+++ doc/core/howto/deferredindepth.xhtml	(working copy)
@@ -264,7 +264,7 @@
 
 <h3>The deferred callback chain is stateful</h3>
 
-<p>A deferred that has been called back will call it's addCallback and
+<p>A deferred that has been called back will call its addCallback and
 addErrback methods as appropriate in the order they are added, when they are
 added. So we see in the following example, deferredExample1 and
 deferredExample2 are equivalent. The first sets up the processing chain
Index: doc/core/howto/application.xhtml
===================================================================
--- doc/core/howto/application.xhtml	(revision 27019)
+++ doc/core/howto/application.xhtml	(working copy)
@@ -56,7 +56,7 @@
 <p>By <q>Service</q>, we mean anything in your application that can be started
 and stopped.  Typical services include web servers, FTP servers and SSH
 clients.  Your Application object can contain many services, and can even
-contain structured heirarchies of Services using <code class="API"
+contain structured hierarchies of Services using <code class="API"
 base="twisted.application.service">IServiceCollection</code>s.</p>
 
 <p>Here's a simple example of constructing an Application object which
@@ -79,12 +79,12 @@
 <p>See <a href="servers.xhtml">Writing Servers</a> for an explanation of
 EchoFactory.</p>
 
-<p>This example creates a simple heirarchy:
+<p>This example creates a simple hierarchy:
 <pre>
    application
    |
    `- echoService
-</pre> More complicated heirarchies of services can be created using
+</pre> More complicated hierarchies of services can be created using
 IServiceCollection.  You will most likely want to do this to manage Services
 which are dependent on other Services.  For example, a proxying Twisted
 application might want its server Service to only start up after the associated
Index: doc/core/howto/choosing-reactor.xhtml
===================================================================
--- doc/core/howto/choosing-reactor.xhtml	(revision 27019)
+++ doc/core/howto/choosing-reactor.xhtml	(working copy)
@@ -163,7 +163,7 @@
 
     <p>The EPollReactor will work on any platform that provides
     <code class="python">epoll</code>, today only Linux 2.6 and over. The
-    implementation of the epoll reactor currently use the Level Triggered
+    implementation of the epoll reactor currently uses the Level Triggered
     interface, which is basically like poll() but scales much better.</p>
 
 <pre class="python">
