Index: twisted/protocols/sip.py
===================================================================
--- twisted/protocols/sip.py	(revision 32769)
+++ twisted/protocols/sip.py	(working copy)
@@ -1648,7 +1648,7 @@
 
         if via.host != addr[0]:
             via.received = addr[0]
-        if via.rport is True:
+        if via.rportValue is True:
             via.rport = addr[1]
         msg.headers['via'][0] = via.toString()
 
@@ -1665,7 +1665,7 @@
         def addNewServerTransaction(st):
             if st:
                 if msg.method == 'INVITE':
-                    st.messageReceivedFromTU(Response.fromRequest(100, msg))
+                    st.messageReceivedFromTU(Response.fromRequest(TRYING, msg))
                 self._newServerTransaction(st, msg, via)
 
         if st:
@@ -1744,7 +1744,8 @@
     """
 
     def start(transport):
-        """Connects the transport to the TU.
+        """
+		Connects the transport to the TU.
 
         @param transport: a L{SIPTransport} instance.
         """
@@ -1839,13 +1840,13 @@
         """
         if self._mode == 'trying':
             self._respond(msg)
-            if 100 <= msg.code < 200:
+            if TRYING <= msg.code < OK:
                 self._mode = 'proceeding'
             else:
                 self._complete()
         elif self._mode == 'proceeding':
             self._respond(msg)
-            if msg.code >= 200:
+            if msg.code >= OK:
                 self._complete()
         elif self._mode == 'terminated':
             raise RuntimeError('No further responses can be sent in this '
@@ -2016,8 +2017,7 @@
             self.branch = None
         else:
             self.branch = request.computeBranch()
-            self.request.headers['via'].insert(0, Via(None, branch=self.branch
-                                                      ).toString())
+            self.request.headers['via'].insert(0, Via(None, branch=self.branch).toString())
 
     def send(self):
         """
