Index: test_adbapi.py
===================================================================
--- test_adbapi.py	(revision 5083)
+++ test_adbapi.py	(working copy)
@@ -685,10 +685,11 @@
     """
     threadpool = NonThreadPool()
 
-    def __init__(self):
+    def __init__(self, reconnect=False):
         """
         Don't forward init call.
         """
+        self.reconnect = reconnect
 
 
 
@@ -723,7 +724,35 @@
         d.addCallback(cbFailed)
         return d
 
+    def test_runWithConnectionRaiseConnectionLostError(self):               
+        """                                                              
+        If rollback failed with ConnectionLost exception and reconnect flag is set,
+        raise the ConnectionLost Exception and not the original.
+        """
+        class ConnectionRollbackRaise(object):
+            def __init__(self, pool):
+                pass
 
+            def cursor(self):
+                pass
+
+            def rollback(self):
+                raise ConnectionLost()
+
+        def raisingFunction(conn):
+            raise ValueError('Blah!')
+
+        pool = DummyConnectionPool(True)
+        pool.connectionFactory = ConnectionRollbackRaise
+        d = pool.runWithConnection(raisingFunction)
+        d = self.assertFailure(d, ConnectionLost)
+        def cb(ignored):
+             errors = self.flushLoggedErrors(ConnectionLost)
+             self.assertEquals(len(errors), 1)
+        d.addCallback(cb)
+        return d
+
+
     def test_closeLogError(self):
         """
         L{ConnectionPool._close} logs exceptions.
@@ -772,3 +801,31 @@
         d.addCallback(cbFailed)
         return d
 
+    def test_runInteractionRaiseConnectionLostError(self):               
+        """                                                              
+        If rollback failed with ConnectionLost exception and reconnect flag is set,
+        raise the ConnectionLost Exception and not the original.
+        """
+        class ConnectionRollbackRaise(object):
+            def __init__(self, pool):
+                pass
+
+            def cursor(self):
+                pass
+
+            def rollback(self):
+                raise ConnectionLost()
+
+        def raisingFunction(txn):
+            raise ValueError('Blah!')
+
+        pool = DummyConnectionPool(True)
+        pool.connectionFactory = ConnectionRollbackRaise
+        d = pool.runInteraction(raisingFunction)
+        d = self.assertFailure(d, ConnectionLost)
+        def cb(ignored):
+             errors = self.flushLoggedErrors(ConnectionLost)
+             self.assertEquals(len(errors), 1)
+        d.addCallback(cb)
+        return d
+
