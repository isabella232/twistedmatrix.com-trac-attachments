--- domish.py.orig	2008-07-09 11:41:41.000000000 +0200
+++ domish.py	2008-07-09 18:18:28.000000000 +0200
@@ -14,6 +14,7 @@
 import types
 
 from zope.interface import implements, Interface, Attribute
+from twisted.python import util as tputil
 
 def _splitPrefix(name):
     """ Internal method for splitting a prefixed Element name into its
@@ -286,7 +287,7 @@
         @type node: L{unicode} or object implementing L{IElement}
         """
 
-class Element(object):
+class Element(tputil.FancyEqMixin, object):
     """ Represents an XML element node.
 
     An Element contains a series of attributes (name/value pairs), content
@@ -387,6 +388,8 @@
 
     implements(IElement)
 
+    compareAttributes = ("localPrefixes", "uri", "name", "defaultUri", "attributes", "children")
+
     _idCounter = 0
 
     def __init__(self, qname, defaultUri=None, attribs=None,
@@ -434,8 +437,7 @@
         self.attributes[self._dqa(key)] = value
 
     def __str__(self):
-        """ Retrieve the first CData (content) node
-        """
+        """ Retrieve the first CData (content) node """
         for n in self.children:
             if isinstance(n, types.StringTypes): return n
         return ""
