Index: test_jelly.py
===================================================================
--- test_jelly.py	(revision 13531)
+++ test_jelly.py	(working copy)
@@ -10,6 +10,22 @@
 
 from twisted.test import test_newjelly
 
+class TestNode(object, jelly.Jellyable):
+    """
+    An object to test jellyfying of
+    new style class isntances.
+    """
+    classAttr = 4
+    def __init__(self, parent=None):
+        if parent:
+            self.id = parent.id + 1
+            parent.children.append(self)
+        else:
+            self.id = 1
+        self.parent = parent
+        self.children = []
+
+
 class JellyTestCase(test_newjelly.JellyTestCase):
     jc = jelly
     if test_newjelly.haveDatetime:
@@ -44,6 +60,29 @@
         self.failUnless(perst[0], "persistentStore was not called.")
         self.assertIdentical(x.b, a.b, "Persistent storage identity failure.")
 
+    def testNewStyleClasses(self):
+        n = TestNode()
+        n1 = TestNode(n)
+        n11 = TestNode(n1)
+        n2 = TestNode(n)
+        # Jelly it
+        jel = self.jc.jelly(n)
+        m = self.jc.unjelly(jel)
+        # Check that it has been restored ok
+        def check(a,b):
+            assert a.id == b.id
+            assert a.classAttr == 4
+            assert b.classAttr == 4
+            assert len(a.children) == len(b.children)
+            for x,y in zip(a.children, b.children):
+                check(x,y)
+        TestNode.classAttr == 5 # Shouldn't override jellied values
+        check(n,m)
+
+
+
+
+
 class CircularReferenceTestCase(test_newjelly.CircularReferenceTestCase):
     jc = jelly
 
