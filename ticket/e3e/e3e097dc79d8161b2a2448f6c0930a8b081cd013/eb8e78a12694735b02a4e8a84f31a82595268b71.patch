Index: xmlrpc.py
===================================================================
RCS file: /cvs/Twisted/twisted/web/xmlrpc.py,v
retrieving revision 1.31
diff -u -r1.31 xmlrpc.py
--- xmlrpc.py	23 Dec 2003 05:19:13 -0000	1.31
+++ xmlrpc.py	7 Jan 2004 21:04:20 -0000
@@ -105,9 +105,10 @@
     isLeaf = 1
     separator = '.'
 
-    def __init__(self):
+    def __init__(self, allowNone=0):
         resource.Resource.__init__(self)
         self.subHandlers = {}
+        self.allowNone = allowNone
 
     def putSubHandler(self, prefix, handler):
         self.subHandlers[prefix] = handler
@@ -143,10 +144,18 @@
         if not isinstance(result, Fault):
             result = (result,)
         try:
-            s = xmlrpclib.dumps(result, methodresponse=1)
+            if map(int,xmlrpclib.__version__.split('.')) >= [1, 0, 1]:
+                s = xmlrpclib.dumps(result, methodresponse=1, allow_none=self.allowNone)
+            else:
+                # xmlrpclib prior 1.0.1 does not support the allow_none argument
+                s = xmlrpclib.dumps(result, methodresponse=1)
         except:
             f = Fault(self.FAILURE, "can't serialize output")
-            s = xmlrpclib.dumps(f, methodresponse=1)
+            if map(int,xmlrpclib.__version__.split('.')) >= [1, 0, 1]:
+                s = xmlrpclib.dumps(f, methodresponse=1, allow_none=self.allowNone)
+            else:
+                # xmlrpclib prior 1.0.1 does not support the allow_none argument
+                s = xmlrpclib.dumps(f, methodresponse=1)
         request.setHeader("content-length", str(len(s)))
         request.write(s)
         request.finish()
@@ -285,9 +294,14 @@
     deferred = None
     protocol = QueryProtocol
 
-    def __init__(self, url, host, method, *args):
+    def __init__(self, url, host, method, allowNone=0, *args):
         self.url, self.host = url, host
-        self.payload = payloadTemplate % (method, xmlrpclib.dumps(args))
+        self.allowNone = allowNone
+        if map(int,xmlrpclib.__version__.split('.')) >= [1, 0, 1]:
+            self.payload = payloadTemplate % (method, xmlrpclib.dumps(args, allow_none=self.allowNone))
+        else:
+            # xmlrpclib prior 1.0.1 does not support the allow_none argument
+            self.payload = payloadTemplate % (method, xmlrpclib.dumps(args))
         self.deferred = defer.Deferred()
 
     def parseResponse(self, contents):
