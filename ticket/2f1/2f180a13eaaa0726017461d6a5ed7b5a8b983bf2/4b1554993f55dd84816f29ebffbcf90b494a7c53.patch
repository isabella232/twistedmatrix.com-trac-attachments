Index: twisted/test/test_jelly.py
===================================================================
--- twisted/test/test_jelly.py	(revision 91)
+++ twisted/test/test_jelly.py	(working copy)
@@ -72,6 +72,10 @@
         return self.__dict__ == other.__dict__
 
 
+class OldStyle:
+    pass
+
+
 class NewStyle(object):
     pass
 
@@ -184,6 +188,12 @@
         self.assertRaises(jelly.InsecureJelly, jelly.unjelly, dct, taster)
 
 
+    def testTypes(self):
+        t = [ str, NewStyle, OldStyle ]
+        r = jelly.unjelly(jelly.jelly(t))
+        self.assertEqual(t, r)
+
+
     def testNewStyleClasses(self):
         j = jelly.jelly(D)
         uj = jelly.unjelly(D)
Index: twisted/spread/jelly.py
===================================================================
--- twisted/spread/jelly.py	(revision 91)
+++ twisted/spread/jelly.py	(working copy)
@@ -687,10 +687,9 @@
         if not self.taster.isModuleAllowed(modName):
             raise InsecureJelly("module %s not allowed" % modName)
         klaus = namedObject(rest[0])
-        if type(klaus) is not types.ClassType:
+        objType = type(klaus)
+        if objType is not types.ClassType and not issubclass(objType, type):
             raise InsecureJelly("class %s unjellied to something that isn't a class: %s" % (repr(rest[0]), repr(klaus)))
-        if not self.taster.isClassAllowed(klaus):
-            raise InsecureJelly("class not allowed: %s" % qual(klaus))
         return klaus
 
     def _unjelly_function(self, rest):
