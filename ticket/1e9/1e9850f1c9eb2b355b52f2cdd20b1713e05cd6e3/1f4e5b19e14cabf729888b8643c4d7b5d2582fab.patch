Index: twisted/web/test/test_xmlrpc.py
===================================================================
--- twisted/web/test/test_xmlrpc.py	(revision 30631)
+++ twisted/web/test/test_xmlrpc.py	(working copy)
@@ -1,5 +1,5 @@
 # -*- test-case-name: twisted.web.test.test_xmlrpc -*-
-# Copyright (c) 2001-2010 Twisted Matrix Laboratories.
+# Copyright (c) 2001-2011 Twisted Matrix Laboratories.
 # See LICENSE for details.
 
 """
@@ -16,7 +16,7 @@
     XMLRPC, payloadTemplate, addIntrospection, _QueryFactory, Proxy, withRequest)
 from twisted.web import server, static, client, error, http
 from twisted.internet import reactor, defer
-from twisted.internet.error import ConnectionDone
+from twisted.internet.error import ConnectionDone, TimeoutError
 from twisted.python import failure
 from twisted.web.test.test_web import DummyRequest
 
@@ -375,7 +375,17 @@
         return d.addCallback(responseDone)
 
 
+    def test_timeOut(self):
+        """
+        L{xmlrpc.Proxy.callRemote} passes the original
+        timeout argument to the underlying connectTCP or connectSSL
+        """
+        #Assumes nothing is running on port 69.
+        proxy = xmlrpc.Proxy("http://127.0.0.1:69/", timeout=0.00001)
+        return self.assertFailure(proxy.callRemote("someMethod"), 
+                                    TimeoutError)
 
+
 class XMLRPCTestCase2(XMLRPCTestCase):
     """
     Test with proxy that doesn't add a slash.
Index: twisted/web/xmlrpc.py
===================================================================
--- twisted/web/xmlrpc.py	(revision 30631)
+++ twisted/web/xmlrpc.py	(working copy)
@@ -480,13 +480,17 @@
         False.  Requires Python >= 2.5.
     @type useDateTime: C{bool}
 
+    @ivar timeout: Number of seconds to wait before assuming the connection 
+                has failed.
+    @type timeout: C{float}
+
     @ivar queryFactory: object returning a factory for XML-RPC protocol. Mainly
         useful for tests.
     """
     queryFactory = _QueryFactory
 
     def __init__(self, url, user=None, password=None, allowNone=False,
-                 useDateTime=False):
+                 useDateTime=False, timeout=30.0):
         """
         @param url: The URL to which to post method calls.  Calls will be made
             over SSL if the scheme is HTTPS.  If netloc contains username or
@@ -522,6 +526,7 @@
             self.password = password
         self.allowNone = allowNone
         self.useDateTime = useDateTime
+        self.timeout = timeout
 
 
     def __setattr__(self, name, value):
@@ -552,9 +557,11 @@
         if self.secure:
             from twisted.internet import ssl
             connector = reactor.connectSSL(self.host, self.port or 443,
-                                           factory, ssl.ClientContextFactory())
+                                           factory, ssl.ClientContextFactory(),
+                                           timeout=self.timeout)
         else:
-            connector = reactor.connectTCP(self.host, self.port or 80, factory)
+            connector = reactor.connectTCP(self.host, self.port or 80, factory,
+                                            timeout=self.timeout)
         return factory.deferred
 
 
