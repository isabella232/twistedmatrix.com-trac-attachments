Index: twisted/internet/tcp.py
===================================================================
--- twisted/internet/tcp.py	(revision 12999)
+++ twisted/internet/tcp.py	(working copy)
@@ -458,10 +458,11 @@
         self.failIfNotConnected(error.UserError())
 
     def failIfNotConnected(self, err):
-        if (self.connected or
-            self.disconnected or
-            not (hasattr(self, "connector"))):
+        if (self.connected or self.disconnected or 
+            not hasattr(self, "connector")):
             return
+        
+        del self.socket, self.fileno
         self.connector.connectionFailed(failure.Failure(err))
         if hasattr(self, "reactor"):
             # this doesn't happen if we failed in __init__
Index: twisted/internet/base.py
===================================================================
--- twisted/internet/base.py	(revision 12999)
+++ twisted/internet/base.py	(working copy)
@@ -39,6 +39,7 @@
     # enable .debug to record creator call stack, and it will be logged if
     # an exception occurs while the function is being run
     debug = False
+    _str = None
 
     def __init__(self, time, func, args, kw, cancel, reset):
         self.time, self.func, self.args, self.kw = time, func, args, kw
@@ -73,6 +74,9 @@
         else:
             self.canceller(self)
             self.cancelled = 1
+            if self.debug:
+                self._str = str(self)
+            del self.func, self.args, self.kw
 
     def reset(self, secondsFromNow):
         """Reschedule this call for a different time
@@ -134,6 +138,8 @@
         return self.time <= other.time
 
     def __str__(self):
+        if self._str is not None:
+            return self._str
         if hasattr(self.func, 'func_name'):
             func = self.func.func_name
             if hasattr(self.func, 'im_class'):
@@ -571,7 +577,7 @@
         del self.transport
 
     def cancelTimeout(self):
-        if self.timeoutID:
+        if self.timeoutID is not None:
             try:
                 self.timeoutID.cancel()
             except ValueError:
@@ -585,6 +591,7 @@
 
     def connectionFailed(self, reason):
         self.cancelTimeout()
+        self.transport = None
         self.state = "disconnected"
         self.factory.clientConnectionFailed(self, reason)
         if self.state == "disconnected":
