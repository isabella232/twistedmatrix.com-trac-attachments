Index: twisted/trial/test/test_asyncassertions.py
===================================================================
--- twisted/trial/test/test_asyncassertions.py	(revision 38159)
+++ twisted/trial/test/test_asyncassertions.py	(working copy)
@@ -17,14 +17,22 @@
 class TestAsynchronousAssertions(unittest.TestCase):
     """
     Tests for L{TestCase}'s asynchronous extensions to L{SynchronousTestCase}.
-    That is, assertFailure.
+    That is, L{TestCase.assertFailure}.
     """
     def test_assertFailure(self):
+        """
+        C{assertFailure} returns the passed L{Deferred} with callbacks added
+        if the L{Deferred} fails with expected exception.
+        """
         d = defer.maybeDeferred(lambda: 1/0)
         return self.assertFailure(d, ZeroDivisionError)
 
 
     def test_assertFailure_wrongException(self):
+        """
+        C{assertFailure} returns a C{Failure} if the passed L{Deferred} fails
+        with unexpected exception.
+        """
         d = defer.maybeDeferred(lambda: 1/0)
         self.assertFailure(d, OverflowError)
         d.addCallbacks(lambda x: self.fail('Should have failed'),
@@ -33,6 +41,10 @@
 
 
     def test_assertFailure_noException(self):
+        """
+        C{assertFailure} returns a C{Failure} if the passed L{Deferred}
+        doesn't fail with expected exception.
+        """
         d = defer.succeed(None)
         self.assertFailure(d, ZeroDivisionError)
         d.addCallbacks(lambda x: self.fail('Should have failed'),
@@ -42,8 +54,8 @@
 
     def test_assertFailure_moreInfo(self):
         """
-        In the case of assertFailure failing, check that we get lots of
-        information about the exception that was raised.
+        C{assertFailure} returns a C{Failure} with error message and brief
+        tracebrack information if the C{assertFailure} fails.
         """
         try:
             1/0
@@ -64,7 +76,8 @@
 
     def test_assertFailure_masked(self):
         """
-        A single wrong assertFailure should fail the whole test.
+        L{unittest.TestCase} fails if a single C{assertFailure} returns a
+        C{Failure}.
         """
         class ExampleFailure(Exception):
             pass
