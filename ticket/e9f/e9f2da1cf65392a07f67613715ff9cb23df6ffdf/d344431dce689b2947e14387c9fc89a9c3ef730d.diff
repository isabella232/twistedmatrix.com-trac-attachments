Index: twisted/conch/checkers.py
===================================================================
--- twisted/conch/checkers.py	(revision 20059)
+++ twisted/conch/checkers.py	(working copy)
@@ -20,7 +20,7 @@
 from twisted.conch import error
 from twisted.conch.ssh import keys
 from twisted.cred.checkers import ICredentialsChecker
-from twisted.cred.credentials import IUsernamePassword, ISSHPrivateKey, IPluggableAuthenticationModules
+from twisted.cred.credentials import IUsernamePassword, ISSHPrivateKey
 from twisted.cred.error import UnauthorizedLogin, UnhandledCredentials
 from twisted.internet import defer
 from twisted.python import failure, reflect, log
@@ -63,7 +63,7 @@
             if verifyCryptedPassword(shadowPass, credentials.password):
                 return defer.succeed(credentials.username)
             return defer.fail(UnauthorizedLogin())
-        
+
         return defer.fail(UnauthorizedLogin())
 
 
@@ -100,18 +100,20 @@
             return 0
         uid, gid = os.geteuid(), os.getegid()
         ouid, ogid = pwd.getpwnam(credentials.username)[2:4]
-        os.setegid(0)
-        os.seteuid(0)
-        os.setegid(ogid)
-        os.seteuid(ouid)
+        if (uid, gid) != (ouid, ogid):
+            os.setegid(0)
+            os.seteuid(0)
+            os.setegid(ogid)
+            os.seteuid(ouid)
         for name in ['authorized_keys2', 'authorized_keys']:
             if not os.path.exists(sshDir+name):
                 continue
             lines = open(sshDir+name).xreadlines()
-            os.setegid(0)
-            os.seteuid(0)
-            os.setegid(gid)
-            os.seteuid(uid)
+            if (uid, gid) != (ouid, ogid):
+                os.setegid(0)
+                os.seteuid(0)
+                os.setegid(gid)
+                os.seteuid(uid)
             for l in lines:
                 l2 = l.split()
                 if len(l2) < 2:
@@ -157,7 +159,7 @@
                     self._cbGoodAuthentication, credentials)
         return defer.fail(UnhandledCredentials("No checker for %s" % \
             ', '.join(map(reflect.qal, ifac))))
-    
+
     def _cbGoodAuthentication(self, avatarId, credentials):
         if avatarId not in self.successfulCredentials:
             self.successfulCredentials[avatarId] = []
