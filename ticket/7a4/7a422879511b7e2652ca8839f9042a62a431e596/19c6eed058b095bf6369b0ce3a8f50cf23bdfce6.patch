Index: twisted/topfiles/5780.bugfix
===================================================================
--- twisted/topfiles/5780.bugfix	(revision 0)
+++ twisted/topfiles/5780.bugfix	(revision 0)
@@ -0,0 +1 @@
+twisted.words.service.IRCUser now allows NICK commands with non-UTF8 and non-ASCII symbols.
Index: twisted/words/test/test_irc_service.py
===================================================================
--- twisted/words/test/test_irc_service.py	(revision 38801)
+++ twisted/words/test/test_irc_service.py	(working copy)
@@ -44,28 +44,30 @@
 
     def test_utf8Messages(self):
         """
-        An C{Exception} is not raised when a UTF-8 nick is set and a UTF-8 
-        message is sent.
+        When a UTF8 message is sent with sendMessage and the current IRCUser
+        has a UTF8 nick and is set to UTF8 encoding, the message will be 
+        written to the transport.
         """
-        expectedResult = (":example.com \xd1\x82\xd0\xb5\xd1\x81\xd1\x82 "
-                          "\xd0\xbd\xd0\xb8\xd0\xba\r\n")
+        expectedResult = (u":example.com \u0442\u0435\u0441\u0442 "
+                          u"\u043d\u0438\u043a\r\n").encode('utf-8')
 
-        self.ircUser.irc_NICK("", ["\xd0\xbd\xd0\xb8\xd0\xba"])
+        self.ircUser.irc_NICK("", [u"\u043d\u0438\u043a".encode('utf-8')])
         self.stringTransport.clear()
-        self.ircUser.sendMessage("\xd1\x82\xd0\xb5\xd1\x81\xd1\x82")
+        self.ircUser.sendMessage(u"\u0442\u0435\u0441\u0442".encode('utf-8'))
         self.assertEqual(self.stringTransport.value(), expectedResult)
 
 
-    def test_wrongUtf8Nick(self):
+    def test_invalidEncodingNick(self):
         """
-        An C{Exception} is not raised when a NICK command is sent with a 
-        non-UTF-8 nickname.
+        A NICK command sent with a nickname that cannot be decoded with the 
+        current IRCUser's encoding results in a PRIVMSG from NickServ 
+        indicating that the nickname could not be decoded.
         """
-        expectedResult = (":NickServ!NickServ@services PRIVMSG "
-                          "\xd4\xc5\xd3\xd4 :Your nickname cannot be "
-                          "decoded. Please use ASCII or UTF-8.\r\n")
+        expectedResult = (b":NickServ!NickServ@services PRIVMSG "
+                          b"\xd4\xc5\xd3\xd4 :Your nickname cannot be "
+                          b"decoded. Please use ASCII or UTF-8.\r\n")
 
-        self.ircUser.irc_NICK("", ["\xd4\xc5\xd3\xd4"])
+        self.ircUser.irc_NICK("", [b"\xd4\xc5\xd3\xd4"])
         self.assertEqual(self.stringTransport.value(), expectedResult)
 
 
