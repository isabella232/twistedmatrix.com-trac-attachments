diff --git a/twisted/test/process_twisted.py b/twisted/test/process_twisted.py
index e31c7e2..2071090 100644
--- a/twisted/test/process_twisted.py
+++ b/twisted/test/process_twisted.py
@@ -3,8 +3,8 @@
 ### Twisted Preamble
 # This makes sure that users don't have to set up their environment
 # specially in order to run these programs from bin/.
-import sys, os, string
-pos = string.find(os.path.abspath(sys.argv[0]), os.sep+'Twisted')
+import sys, os
+pos = os.path.abspath(sys.argv[0]).find(os.sep+'Twisted')
 if pos != -1:
     sys.path.insert(0, os.path.abspath(sys.argv[0])[:pos+8])
 sys.path.insert(0, os.curdir)
diff --git a/twisted/test/test_explorer.py b/twisted/test/test_explorer.py
index 764eff9..b93b72d 100644
--- a/twisted/test/test_explorer.py
+++ b/twisted/test/test_explorer.py
@@ -11,7 +11,7 @@ from twisted.trial import unittest
 
 from twisted.manhole import explorer
 
-import types, string
+import types
 
 """
 # Tests:
@@ -71,7 +71,7 @@ class SetattrDohickey:
     def __setattr__(self, k, v):
         v = list(str(v))
         v.reverse()
-        self.__dict__[k] = string.join(v, '')
+        self.__dict__[k] = ''.join(v)
 
 class MiddleMan(SomeDohickey, SetattrDohickey):
     pass
diff --git a/twisted/test/test_text.py b/twisted/test/test_text.py
index b10ed40..841365e 100644
--- a/twisted/test/test_text.py
+++ b/twisted/test/test_text.py
@@ -5,7 +5,6 @@
 
 from twisted.trial import unittest
 from twisted.python import text
-import string
 from cStringIO import StringIO
 
 
@@ -27,7 +26,7 @@ def set_lineWidth(n):
 
 class WrapTest(unittest.TestCase):
     def setUp(self):
-        self.sampleSplitText = string.split(sampleText)
+        self.sampleSplitText = sampleText.split()
 
         self.output = text.wordWrap(sampleText, lineWidth)
 
@@ -35,7 +34,7 @@ class WrapTest(unittest.TestCase):
         """Compare the number of words."""
         words = []
         for line in self.output:
-            words.extend(string.split(line))
+            words.extend(line.split())
         wordCount = len(words)
         sampleTextWordCount = len(self.sampleSplitText)
 
@@ -46,7 +45,7 @@ class WrapTest(unittest.TestCase):
 
         words = []
         for line in self.output:
-            words.extend(string.split(line))
+            words.extend(line.split())
 
         # Using failUnlessEqual here prints out some
         # rather too long lists.
