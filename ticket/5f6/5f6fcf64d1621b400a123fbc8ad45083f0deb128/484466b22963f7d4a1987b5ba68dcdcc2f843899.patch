diff --git twisted/python/lockfile.py twisted/python/lockfile.py
index a044957..cb441d9 100644
--- twisted/python/lockfile.py
+++ twisted/python/lockfile.py
@@ -16,7 +16,7 @@ from time import time as _uniquefloat
 from twisted.python.runtime import platform
 
 def unique():
-    return str(long(_uniquefloat() * 1000))
+    return str(int(_uniquefloat() * 1000))
 
 from os import rename
 if not platform.isWindows():
@@ -40,7 +40,7 @@ else:
         def kill(pid, signal):
             try:
                 OpenProcess(0, 0, pid)
-            except pywintypes.error, e:
+            except pywintypes.error as e:
                 if e.args[0] == ERROR_ACCESS_DENIED:
                     return
                 elif e.args[0] == ERROR_INVALID_PARAMETER:
@@ -70,7 +70,7 @@ else:
     def readlink(filename):
         try:
             fObj = _open(os.path.join(filename,'symlink'), 'rb')
-        except IOError, e:
+        except IOError as e:
             if e.errno == errno.ENOENT or e.errno == errno.EIO:
                 raise OSError(e.errno, None)
             raise
@@ -125,7 +125,7 @@ class FilesystemLock:
         while True:
             try:
                 symlink(str(os.getpid()), self.name)
-            except OSError, e:
+            except OSError as e:
                 if _windows and e.errno in (errno.EACCES, errno.EIO):
                     # The lock is in the middle of being deleted because we're
                     # on Windows where lock removal isn't atomic.  Give up, we
@@ -134,13 +134,13 @@ class FilesystemLock:
                 if e.errno == errno.EEXIST:
                     try:
                         pid = readlink(self.name)
-                    except OSError, e:
+                    except OSError as e:
                         if e.errno == errno.ENOENT:
                             # The lock has vanished, try to claim it in the
                             # next iteration through the loop.
                             continue
                         raise
-                    except IOError, e:
+                    except IOError as e:
                         if _windows and e.errno == errno.EACCES:
                             # The lock is in the middle of being
                             # deleted because we're on Windows where
@@ -152,13 +152,13 @@ class FilesystemLock:
                     try:
                         if kill is not None:
                             kill(int(pid), 0)
-                    except OSError, e:
+                    except OSError as e:
                         if e.errno == errno.ESRCH:
                             # The owner has vanished, try to claim it in the next
                             # iteration through the loop.
                             try:
                                 rmlink(self.name)
-                            except OSError, e:
+                            except OSError as e:
                                 if e.errno == errno.ENOENT:
                                     # Another process cleaned up the lock.
                                     # Race them to acquire it in the next
