Index: util.py
===================================================================
--- util.py	(revision 24890)
+++ util.py	(working copy)
@@ -156,11 +156,13 @@
     implements(interfaces.IConsumer)
 
     def __init__(self, collector, fd, callback=None, *args, **kw):
+        self.fd = fd 
+        self.startedProducing = False 
         self.chunks = []
         Pager.__init__(self, collector, callback, *args, **kw)
-        self.startProducing(fd)
 
     def startProducing(self, fd):
+        self.startedProducing = True 
         self.deferred = basic.FileSender().beginFileTransfer(fd, self)
         self.deferred.addBoth(lambda x : self.stopPaging())
 
@@ -179,6 +181,8 @@
         """
         Get the first chunk read and send it to collector.
         """
+        if not self.startedProducing: 
+            self.startProducing(self.fd) 
         if not self.chunks:
             return
         val = self.chunks.pop(0)
