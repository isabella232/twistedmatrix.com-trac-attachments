diff --git twisted/application/reactors.py twisted/application/reactors.py
index 203e3a5..6bae985 100644
--- twisted/application/reactors.py
+++ twisted/application/reactors.py
@@ -7,7 +7,7 @@ Plugin-based system for enumerating available reactors and installing one of
 them.
 """
 
-from zope.interface import Interface, Attribute, implementer
+from zope.interface import Interface, Attribute, implements
 
 from twisted.plugin import IPlugin, getPlugins
 from twisted.python.reflect import namedAny
@@ -41,12 +41,12 @@ class NoSuchReactor(KeyError):
     """
 
 
-@implementer(IPlugin, IReactorInstaller)
 class Reactor(object):
     """
     @ivar moduleName: The fully-qualified Python name of the module of which
     the install callable is an attribute.
     """
+    implements(IPlugin, IReactorInstaller)
 
 
     def __init__(self, shortName, moduleName, description):
diff --git twisted/application/service.py twisted/application/service.py
index fb47943..66fef85 100644
--- twisted/application/service.py
+++ twisted/application/service.py
@@ -13,7 +13,7 @@ a sibling).
 Maintainer: Moshe Zadka
 """
 
-from zope.interface import implementer, Interface, Attribute
+from zope.interface import implements, Interface, Attribute
 
 from twisted.python.reflect import namedAny
 from twisted.python import components
@@ -56,11 +56,11 @@ class IServiceMaker(Interface):
 
 
 
-@implementer(IPlugin, IServiceMaker)
 class ServiceMaker(object):
     """
     Utility class to simplify the definition of L{IServiceMaker} plugins.
     """
+    implements(IPlugin, IServiceMaker)
 
     def __init__(self, name, module, description, tapname):
         self.name = name
@@ -152,7 +152,6 @@ class IService(Interface):
         """
 
 
-@implementer(IService)
 class Service:
     """
     Base class for services.
@@ -162,6 +161,8 @@ class Service:
     as not serializing this book-keeping information.
     """
 
+    implements(IService)
+
     running = 0
     name = None
     parent = None
@@ -253,7 +254,6 @@ class IServiceCollection(Interface):
 
 
 
-@implementer(IServiceCollection)
 class MultiService(Service):
     """
     Straightforward Service Container.
@@ -264,6 +264,8 @@ class MultiService(Service):
     will finish.
     """
 
+    implements(IServiceCollection)
+
     def __init__(self):
         self.services = []
         self.namedServices = {}
@@ -345,7 +347,6 @@ class IProcess(Interface):
 
 
 
-@implementer(IProcess)
 class Process:
     """
     Process running parameters.
@@ -353,6 +354,7 @@ class Process:
     Sets up uid/gid in the constructor, and has a default
     of C{None} as C{processName}.
     """
+    implements(IProcess)
     processName = None
 
     def __init__(self, uid=None, gid=None):
diff --git twisted/application/test/test_internet.py twisted/application/test/test_internet.py
index 5ffc2a5..9e058d7 100644
--- twisted/application/test/test_internet.py
+++ twisted/application/test/test_internet.py
@@ -6,7 +6,7 @@ Tests for (new code in) L{twisted.application.internet}.
 """
 
 
-from zope.interface import implementer
+from zope.interface import implements
 from zope.interface.verify import verifyClass
 
 from twisted.internet.protocol import Factory
@@ -15,7 +15,6 @@ from twisted.application.internet import StreamServerEndpointService
 from twisted.internet.interfaces import IStreamServerEndpoint, IListeningPort
 from twisted.internet.defer import Deferred, CancelledError
 
-@implementer(IStreamServerEndpoint)
 class FakeServer(object):
     """
     In-memory implementation of L{IStreamServerEndpoint}.
@@ -37,6 +36,8 @@ class FakeServer(object):
         returned from C{listen} before it is returned.
     """
 
+    implements(IStreamServerEndpoint)
+
     result = None
     factory = None
     failImmediately = None
@@ -83,7 +84,6 @@ verifyClass(IStreamServerEndpoint, FakeServer)
 
 
 
-@implementer(IListeningPort)
 class FakePort(object):
     """
     Fake L{IListeningPort} implementation.
@@ -91,6 +91,8 @@ class FakePort(object):
     @ivar deferred: The L{Deferred} returned by C{stopListening}.
     """
 
+    implements(IListeningPort)
+
     deferred = None
 
     def stopListening(self):
