diff --git doc/web/howto/listings/element_1.py doc/web/howto/listings/element_1.py
index 0ce8db8..bb5e89a 100644
--- doc/web/howto/listings/element_1.py
+++ doc/web/howto/listings/element_1.py
@@ -1,7 +1,8 @@
 from twisted.web.template import Element, renderer, XMLFile
+from twisted.python.filepath import FilePath
 
 class ExampleElement(Element):
-    loader = XMLFile('template-1.xml')
+    loader = XMLFile(FilePath('template-1.xml'))
 
     @renderer
     def header(self, request, tag):
diff --git doc/web/howto/listings/element_2.py doc/web/howto/listings/element_2.py
index cee2eb2..a4c0271 100644
--- doc/web/howto/listings/element_2.py
+++ doc/web/howto/listings/element_2.py
@@ -1,7 +1,8 @@
 from twisted.web.template import Element, renderer, XMLFile, tags
+from twisted.python.filepath import FilePath
 
 class ExampleElement(Element):
-    loader = XMLFile('template-1.xml')
+    loader = XMLFile(FilePath('template-1.xml'))
 
     @renderer
     def header(self, request, tag):
diff --git doc/web/howto/listings/element_3.py doc/web/howto/listings/element_3.py
index 129b0be..46c2181 100644
--- doc/web/howto/listings/element_3.py
+++ doc/web/howto/listings/element_3.py
@@ -1,7 +1,8 @@
 from twisted.web.template import Element, renderer, XMLFile, tags
+from twisted.python.filepath import FilePath
 
 class ExampleElement(Element):
-    loader = XMLFile('template-1.xml')
+    loader = XMLFile(FilePath('template-1.xml'))
 
     @renderer
     def header(self, request, tag):
diff --git doc/web/howto/listings/iteration-1.py doc/web/howto/listings/iteration-1.py
index 7bc7320..e5ffcd3 100644
--- doc/web/howto/listings/iteration-1.py
+++ doc/web/howto/listings/iteration-1.py
@@ -1,7 +1,8 @@
 from twisted.web.template import Element, renderer, XMLFile, flattenString
+from twisted.python.filepath import FilePath
 
 class WidgetsElement(Element):
-    loader = XMLFile('iteration-1.xml')
+    loader = XMLFile(FilePath('iteration-1.xml'))
 
     widgetData = ['gadget', 'contraption', 'gizmo', 'doohickey']
 
diff --git doc/web/howto/listings/quoting_element.py doc/web/howto/listings/quoting_element.py
index 79ec557..a9ab1ff 100644
--- doc/web/howto/listings/quoting_element.py
+++ doc/web/howto/listings/quoting_element.py
@@ -1,7 +1,8 @@
 from twisted.web.template import Element, renderer, XMLFile
+from twisted.python.filepath import FilePath
 
 class ExampleElement(Element):
-    loader = XMLFile('template-1.xml')
+    loader = XMLFile(FilePath('template-1.xml'))
 
     @renderer
     def header(self, request, tag):
diff --git doc/web/howto/listings/slots_attributes_1.py doc/web/howto/listings/slots_attributes_1.py
index a0401cc..0de0c0b 100644
--- doc/web/howto/listings/slots_attributes_1.py
+++ doc/web/howto/listings/slots_attributes_1.py
@@ -1,7 +1,8 @@
 from twisted.web.template import Element, renderer, XMLFile
+from twisted.python.filepath import FilePath
 
 class ExampleElement(Element):
-    loader = XMLFile('slots-attributes-1.xml')
+    loader = XMLFile(FilePath('slots-attributes-1.xml'))
 
     @renderer
     def person_profile(self, request, tag):
diff --git doc/web/howto/listings/subviews-1.py doc/web/howto/listings/subviews-1.py
index 2cf91f5..55538ec 100644
--- doc/web/howto/listings/subviews-1.py
+++ doc/web/howto/listings/subviews-1.py
@@ -1,8 +1,9 @@
 from twisted.web.template import (
     XMLFile, TagLoader, Element, renderer, flattenString)
+from twisted.python.filepath import FilePath
 
 class WidgetsElement(Element):
-    loader = XMLFile('subviews-1.xml')
+    loader = XMLFile(FilePath('subviews-1.xml'))
 
     widgetData = ['gadget', 'contraption', 'gizmo', 'doohickey']
 
diff --git doc/web/howto/listings/transparent_element.py doc/web/howto/listings/transparent_element.py
index ddd09d8..bc788dd 100644
--- doc/web/howto/listings/transparent_element.py
+++ doc/web/howto/listings/transparent_element.py
@@ -1,7 +1,8 @@
 from twisted.web.template import Element, renderer, XMLFile
+from twisted.python.filepath import FilePath
 
 class ExampleElement(Element):
-    loader = XMLFile('transparent-1.xml')
+    loader = XMLFile(FilePath('transparent-1.xml'))
 
     @renderer
     def renderer1(self, request, tag):
diff --git twisted/web/template.py twisted/web/template.py
index b0736d3..b6ab9fd 100644
--- twisted/web/template.py
+++ twisted/web/template.py
@@ -25,12 +25,14 @@ __all__ = [
     'Comment', 'CDATA', 'Tag', 'slot', 'CharRef', 'renderElement'
     ]
 
+import warnings
 from zope.interface import implements
 
 from cStringIO import StringIO
 from xml.sax import make_parser, handler
 
 from twisted.web._stan import Tag, slot, Comment, CDATA, CharRef
+from twisted.python.filepath import FilePath
 
 TEMPLATE_NAMESPACE = 'http://twistedmatrix.com/ns/twisted.web.template/0.1'
 
@@ -390,14 +392,33 @@ class XMLFile(object):
     """
     An L{ITemplateLoader} that loads and parses XML from a file.
 
-    @type fobj: file object
-    @param fobj: The file object from which to load the XML.
+    @type path: L{FilePath}
+    @param path: The file from which to load the XML.
     """
     implements(ITemplateLoader)
 
-    def __init__(self, fobj):
-        self._loadDoc = lambda: _flatsaxParse(fobj)
+    def __init__(self, path):
+        if not isinstance(path, FilePath):
+            warnings.warn("Passing filenames or file objects to XMLFile is "
+                "deprecated since Twisted 12.1.  Pass a FilePath instead.",
+                category=DeprecationWarning, stacklevel=2)
         self._loadedTemplate = None
+        self._path = path
+
+
+    def _loadDoc(self):
+        if not isinstance(self._path, FilePath):
+            return _flatsaxParse(self._path)
+        else:
+            f = self._path.open('r')
+            try:
+                return _flatsaxParse(f)
+            finally:
+                f.close()
+
+
+    def __repr__(self):
+        return '<XMLFile of %r>' % (self._path,)
 
 
     def load(self):
diff --git twisted/web/test/test_template.py twisted/web/test/test_template.py
index 532abe6..973dd04 100644
--- twisted/web/test/test_template.py
+++ twisted/web/test/test_template.py
@@ -12,6 +12,7 @@ from cStringIO import StringIO
 from zope.interface.verify import verifyObject
 
 from twisted.internet.defer import succeed, gatherResults
+from twisted.python.filepath import FilePath
 from twisted.trial.unittest import TestCase
 from twisted.web.template import (
     Element, TagLoader, renderer, tags, XMLFile, XMLString)
@@ -175,6 +176,26 @@ class ElementTests(TestCase):
 
 
 
+class XMLFileReprTests(TestCase):
+    """
+    Tests for L{twisted.web.template.XMLFile}'s C{__repr__}.
+    """
+    def test_reprFilePath(self):
+        path = FilePath("/tmp/fake.xml")
+        self.assertEqual('<XMLFile of %r>' % (path,), repr(XMLFile(path)))
+
+
+    def test_reprFilename(self):
+        fname = "/tmp/fake.xml"
+        self.assertEqual('<XMLFile of %r>' % (fname,), repr(XMLFile(fname)))
+
+
+    def test_reprFile(self):
+        fobj = StringIO("not xml")
+        self.assertEqual('<XMLFile of %r>' % (fobj,), repr(XMLFile(fobj)))
+
+
+
 class XMLLoaderTestsMixin(object):
     """
     @ivar templateString: Simple template to use to excercise the loaders.
@@ -188,6 +209,17 @@ class XMLLoaderTestsMixin(object):
         """
         loader = self.loaderFactory()
         tag, = loader.load()
+        warnings = self.flushWarnings()
+        if self.deprecatedUse:
+            self.assertEqual(len(warnings), 1)
+            self.assertEqual(warnings[0]['category'], DeprecationWarning)
+            self.assertEqual(
+                warnings[0]['message'],
+                "Passing filenames or file objects to XMLFile is "
+                "deprecated since Twisted 12.1.  Pass a FilePath instead.")
+        else:
+            self.assertEqual(len(warnings), 0)
+
         self.assertEqual(tag.tagName, 'p')
         self.assertEqual(tag.children, [u'Hello, world.'])
 
@@ -208,21 +240,46 @@ class XMLStringLoaderTests(TestCase, XMLLoaderTestsMixin):
     """
     Tests for L{twisted.web.template.XMLString}
     """
+    deprecatedUse = False
     def loaderFactory(self):
         return XMLString(self.templateString)
 
 
 
-class XMLFileLoaderTests(TestCase, XMLLoaderTestsMixin):
+class XMLFileWithFilePathTests(TestCase, XMLLoaderTestsMixin):
     """
-    Tests for L{twisted.web.template.XMLFile}, using L{StringIO} to simulate a
-    file object.
+    Tests for L{twisted.web.template.XMLFile}'s L{FilePath} support.
     """
+    deprecatedUse = False
+    def loaderFactory(self):
+        fp = FilePath(self.mktemp())
+        fp.setContent(self.templateString)
+        return XMLFile(fp)
+
+
+
+class XMLFileWithFileTests(TestCase, XMLLoaderTestsMixin):
+    """
+    Tests for L{twisted.web.template.XMLFile}'s deprecated file object support.
+    """
+    deprecatedUse = True
     def loaderFactory(self):
         return XMLFile(StringIO(self.templateString))
 
 
 
+class XMLFileWithFilenameTests(TestCase, XMLLoaderTestsMixin):
+    """
+    Tests for L{twisted.web.template.XMLFile}'s deprecated filename support.
+    """
+    deprecatedUse = True
+    def loaderFactory(self):
+        fp = FilePath(self.mktemp())
+        fp.setContent(self.templateString)
+        return XMLFile(fp.path)
+
+
+
 class FlattenIntegrationTests(FlattenTestCase):
     """
     Tests for integration between L{Element} and
diff --git twisted/web/topfiles/5509.feature twisted/web/topfiles/5509.feature
new file mode 100644
index 0000000..e172a24
--- /dev/null
+++ twisted/web/topfiles/5509.feature
@@ -0,0 +1 @@
+twisted.web.template.XMLFile now supports FilePath objects.
diff --git twisted/web/topfiles/5509.removal twisted/web/topfiles/5509.removal
new file mode 100644
index 0000000..c912ece
--- /dev/null
+++ twisted/web/topfiles/5509.removal
@@ -0,0 +1 @@
+twisted.web.template.XMLFile's support for file objects and filenames is now deprecated.  Use the new support for FilePath objects.
diff --git twisted/web/util.py twisted/web/util.py
index ce87f72..a8cf996 100644
--- twisted/web/util.py
+++ twisted/web/util.py
@@ -19,6 +19,7 @@ from twisted.python.filepath import FilePath
 from twisted.python.reflect import fullyQualifiedName
 from twisted.python.deprecate import deprecatedModuleAttribute
 from twisted.python.versions import Version
+from twisted.python.modules import getModule
 
 from twisted.web import html, resource
 from twisted.web.template import (
@@ -368,7 +369,8 @@ class FailureElement(Element):
 
     @since: 12.1
     """
-    loader = XMLFile(FilePath(__file__).sibling('failure.xhtml').open())
+    loader = XMLFile(getModule(__name__).filePath.sibling("failure.xhtml"))
+    loader.load() # Load immediately, in case it changes
 
     def __init__(self, failure, loader=None):
         Element.__init__(self, loader)
