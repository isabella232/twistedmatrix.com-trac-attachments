Index: twisted/test/test_protocols.py
===================================================================
--- twisted/test/test_protocols.py	(Revision 29646)
+++ twisted/test/test_protocols.py	(Arbeitskopie)
@@ -544,7 +544,7 @@
         self.assertTrue(self.transport.disconnecting)
 
 
-    def test_OnlyData(self):
+    def test_onlyData(self):
         """
         Netstrings consisting only of data are refused.
         """
@@ -597,7 +597,7 @@
     def test_maxReceiveLimit(self):
         """
         Netstrings with a length specification exceeding the specified
-        MAX_LENGTH are refused.
+        C{MAX_LENGTH} are refused.
         """
         tooLong = self.netstringReceiver.MAX_LENGTH + 1
         self.netstringReceiver.dataReceived("%s:%s" %
@@ -605,7 +605,22 @@
         self.assertTrue(self.transport.disconnecting)
 
 
+    def test_consumeLength(self):
+        """
+        C{_consumeLength} returns the expected length of the netstring,
+        including the trailing comma. If the length exceeds the
+        biggest allowed netstring length specified in C{MAX_LENGTH},
+        C{_consumeLength} raises a L{basic.NetstringParseError}.
+        """
+        self.netstringReceiver._currentData = "12:"
+        length = self.netstringReceiver._consumeLength()
+        self.assertEquals(length, 13)
+        self.netstringReceiver.MAX_LENGTH = 11
+        self.assertRaises(basic.NetstringParseError,
+                          self.netstringReceiver._consumeLength)
 
+
+
 class IntNTestCaseMixin(LPTestCaseMixin):
     """
     TestCase mixin for int-prefixed protocols.
