Index: service.py
===================================================================
RCS file: /cvs/Twisted/twisted/application/service.py,v
retrieving revision 1.6
diff -u -r1.6 service.py
--- service.py	4 Dec 2003 22:46:55 -0000	1.6
+++ service.py	10 Feb 2004 06:03:44 -0000
@@ -29,6 +29,8 @@
 from twisted.python import components
 from twisted.internet import defer
 from twisted.persisted import sob
+from twisted.python import log
+import sys
 
 class IService(components.Interface):
 
@@ -225,6 +227,50 @@
         self.services.remove(service)
         if self.running:
             service.stopService()
+
+class RobustMultiService(MultiService):
+
+    """More robust version of MultiService
+
+    Extends MultiService to catch any exceptions from services
+    which would otherwise stop subsequent services starting. 
+    Exceptions caught are logged.
+    """
+
+    __implements__ = Service.__implements__, IServiceCollection
+
+    def __init__(self):
+        MultiService.__init__(self)
+        
+    def privilegedStartService(self):
+        Service.privilegedStartService(self)
+        for service in self:
+            try:
+                service.privilegedStartService()
+            except:
+                log.err(sys.exc_info()[2])
+
+    def startService(self):
+        Service.startService(self)
+        for service in self:
+            try:
+                service.startService()
+            except:
+                log.err(sys.exc_info()[2])
+
+    def addService(self, service):
+        if service.name is not None:
+            if self.namedServices.has_key(service.name):
+                raise RuntimeError("cannot have two services with same name")
+            self.namedServices[service.name] = service
+        self.services.append(service)
+        if self.running:
+            # It may be too late for that, but we will do our best
+            try:
+                service.privilegedStartService()
+                service.startService()
+            except:
+                log.err(sys.exc_info()[2])
 
 
 class IProcess(components.Interface):
