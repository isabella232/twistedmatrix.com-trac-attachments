diff --git a/twisted/conch/scripts/tkconch.py b/twisted/conch/scripts/tkconch.py
index eb00186..c97697b 100644
--- a/twisted/conch/scripts/tkconch.py
+++ b/twisted/conch/scripts/tkconch.py
@@ -371,14 +371,14 @@ class SSHClientTransport(transport.SSHClientTransport):
         elif goodKey == 2: # AAHHHHH changed
             return defer.fail(error.ConchError('bad host key'))
         else:
-            if options['host'] == self.transport.getPeer()[1]:
+            if options['host'] == self.transport.getPeer().host:
                 host = options['host']
                 khHost = options['host']
             else:
                 host = '%s (%s)' % (options['host'],
-                                    self.transport.getPeer()[1])
+                                    self.transport.getPeer().host)
                 khHost = '%s,%s' % (options['host'],
-                                    self.transport.getPeer()[1])
+                                    self.transport.getPeer().host)
             keyType = common.getNS(pubKey)[0]
             ques = """The authenticity of host '%s' can't be established.\r
 %s key fingerprint is %s.""" % (host,
diff --git a/twisted/protocols/htb.py b/twisted/protocols/htb.py
index 10008cf..468e8a2 100644
--- a/twisted/protocols/htb.py
+++ b/twisted/protocols/htb.py
@@ -192,7 +192,7 @@ class FilterByHost(HierarchicalBucketFilter):
     sweepInterval = 60 * 20
 
     def getBucketKey(self, transport):
-        return transport.getPeer()[1]
+        return transport.getPeer().host
 
 
 class FilterByServer(HierarchicalBucketFilter):
diff --git a/twisted/protocols/policies.py b/twisted/protocols/policies.py
index b9c0661..44f7617 100644
--- a/twisted/protocols/policies.py
+++ b/twisted/protocols/policies.py
@@ -398,7 +398,7 @@ class LimitConnectionsByPeer(WrappingFactory):
         return WrappingFactory.buildProtocol(self, addr)
 
     def unregisterProtocol(self, p):
-        peerHost = p.getPeer()[1]
+        peerHost = p.getPeer().host
         self.peerConnections[peerHost] -= 1
         if self.peerConnections[peerHost] == 0:
             del self.peerConnections[peerHost]
