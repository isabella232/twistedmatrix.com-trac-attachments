Index: application.xhtml
===================================================================
RCS file: /cvs/Twisted/doc/howto/application.xhtml,v
retrieving revision 1.8
diff -u -r1.8 application.xhtml
--- application.xhtml	11 Oct 2003 14:45:31 -0000	1.8
+++ application.xhtml	11 Oct 2003 18:19:57 -0000
@@ -1,8 +1,8 @@
-<?xml version="1.0"?>
-<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
-    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
-
-<html xmlns="http://www.w3.org/1999/xhtml">
+<?xml version="1.0" encoding="utf-8"?>
+<!DOCTYPE html PUBLIC
+    "-//W3C//DTD XHTML 1.0 Strict//EN"
+    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
+<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
 <head>
 <title>Using Application</title>
 </head>
@@ -26,6 +26,65 @@
 <li>Perform deinitalization options</li>
 </ul>
 
+<<<<<<< application.xhtml
+<p>This functionality is provided by the Application class (defined in
+twisted/internet/app.py). You create an Application with a constructor like
+any other object. Then you tell the app to listen to ports (just like you
+told the reactor to in the previous example), providing a Factory on each
+one. The difference is that the App won't starting listening on those ports
+right away, but will wait until it starts to run.</p>
+
+<p>When you're done setting up an Application object, there are three
+options.  You can run it directly by calling the application's
+<code>.run()</code> method.  You can use <code>twistd -y app.py</code>
+to run your application directly from python source code.  Or you can
+save the Application out to a file by calling the <code>.save()</code>
+method. The saved application can then be started later by using
+<code>twistd -f app-start.tap</code>.</p>
+
+<h2>Example Application</h2>
+
+<p>Here is a short example of the first option, running the server
+immediately. This example uses the pre-defined Daytime protocol, which
+simply sends the current time to each client.:</p>
+
+<p><a href="listings/application/app1.py" class="py-listing">app1.py</a></p>
+
+<p>This program will start listening to port 8813 in the <code>app.run()</code>
+call, and won't return from that call until the server is terminated
+(probably when you send it SIGINT via ^C on the keyboard).</p>
+
+<p>To use the second option, the same source file can be used, but
+using the <code>twistd -y</code> command to start the application
+as a daemon.  If persistence is not required, then use the
+<code>--no_save</code> option.</p>
+
+<pre class="shell">
+$ twistd --no_save --python=app1.py
+$ tail -f twistd.log
+04/04/2003 23:45 [-] Log opened.
+04/04/2003 23:45 [-] twistd 1.0.4alpha1 (/usr/local/bin/python 2.2.2)
+starting up
+04/04/2003 23:45 [-] license user: Nobody &lt;&gt;
+04/04/2003 23:45 [-] organization: No Organization
+04/04/2003 23:45 [-] reactor class: twisted.internet.default.SelectReactor
+04/04/2003 23:45 [-] Loading
+/home/cce/work/Twisted/doc/howto/listings/application/app1.py...
+04/04/2003 23:45 [-] Loaded.
+04/04/2003 23:45 [*daytimer*] twisted.internet.protocol.Factory starting on
+8813
+04/04/2003 23:45 [*daytimer*] Starting factory
+&lt;twisted.internet.protocol.Factory instance at 0x835dcac&gt;
+</pre>
+
+<p>To use the third option and launch the server later, just use
+<code>.save()</code> instead of <code>.run()</code>. The <code>.save()</code> method
+takes a base name for the generated <code>.tap</code> file:</p>
+
+<pre class="python">
+...
+app.listenTCP(8813, f)
+=======
 <p>There are two problems with this methodology. It has a lot
 of boiler-plate code, and it introduces an inflexibility into
 the design. The usual way to solve this kind of problem is
@@ -52,9 +111,163 @@
 is done by using <em>interfaces</em>. Interfaces, for our purposes,
 are just callables which return different aspects of the 
 <code>Application</code>.</p>
+>>>>>>> 1.8
+
+<<<<<<< application.xhtml
+app.save("start")
+</pre>
+
+<p>When you run this program, it will create a file called
+<code>daytime-start.tap</code>, and then exit. (The name is obtained by
+combining the application name with the argument to <code>.save()</code>). To
+start the server from the <q>freeze-dried</q> <code>.tap</code> file, use
+<code>twistd</code> (text wrapped to be more readable):</p>
+
+<pre class="shell">
+% ./app2.py 
+Saving daytimer application to daytimer-start.tap...
+Saved.
+% twistd -f daytimer-start.tap 
+% tail twistd.log 
+30/09/2002 01:38 [-] Log opened.
+30/09/2002 01:38 [-] twistd 0.99.2 (/usr/bin/python2.2 2.2.1) starting up
+30/09/2002 01:38 [-] license user: Nobody &lt;&gt;
+30/09/2002 01:38 [-] organization: No Organization
+30/09/2002 01:38 [-] reactor class: twisted.internet.default.SelectReactor
+30/09/2002 01:38 [-] Loading daytimer-start.tap...
+30/09/2002 01:38 [-] Loaded.
+30/09/2002 01:38 [*daytimer*] twisted.internet.protocol.Factory starting on 8813
+30/09/2002 01:38 [*daytimer*] Starting factory
+&lt;twisted.internet.protocol.Factory instance at 0x81ac9fc&gt;
+% 
+</pre>
+
+<p>That will <q>thaw out</q> the <code>.tap</code> file, create the
+Application, and
+then run it just as if you'd invoked app.run() yourself. It forks the new
+server off into the background (so twistd itself completes instead of
+waiting for the server to die), writes the server's process ID to a file
+called <code>twistd.pid</code>, and directs all the server's stdout messages
+to a file
+called <code>twistd.log</code> (these file names can be changed by appropriate
+arguments to <code>twistd</code>: see <code>twistd -h</code> for a list).</p>
+
+<p>When you try this example, be aware that <code>twistd</code> returns right
+away, but it takes a second or two for the server to actually start. The
+<code>twistd.pid</code> file won't be created until it does. Wait a moment
+before doing <code>ls</code> or <code>netstat</code>, or you'll think that the
+server failed to start. If it persists in failing, look in
+<code>twistd.log</code> for details. Remember that trying to bind to a reserved
+port will fail unless you're root, and the exception will be listed at the
+end of the log file.</p>
+
+<p>To kill the server, just do:</p>
+
+<pre class="shell">
+% kill `cat twistd.pid`
+</pre>
+
+<p>When the server is shut down, you'll notice that it creates a file called
+<code>daytimer-shutdown.tap</code> in the directory it was run from
+(again, the name is
+derived from the application name and the word <q>shutdown</q>). This
+<code>.tap</code> file is just like the <code>daytimer-start.tap</code>
+created by your
+original setup program, except that it represents the state of the
+Application object as it existed just before shutdown, rather than when it
+was freshly created by your code.</p>
+
+<p>Also note that the <code>twistd.pid</code> file is automatically deleted when
+the application shuts down.</p>
+
+
+<h2>Saving State Across Sessions: Adding Persistent Data</h2>
+
+<p>You can add persistent data (like that
+sequence number described above) to the protocol Factory object, and it will
+get saved in the <code>-shutdown.tap</code> file. Then, if you restart the
+server with <code>twistd -f daytimer-shutdown.tap</code>, the new server will
+get the data saved by the old server, and it can pick up where the old one
+left off, as if the server had been running continuously the whole time.</p>
+
+<p>To take advantage of this, simply add the attributes you want to the
+Factory, or to your subclass of Service (see the docs on Perspective Broker
+for details about Services). When the application terminates, it simply
+pickles up the whole Application (and everything it references, including
+Factories and Services). Any attributes or objects you have added will be
+saved and later restored.</p>
+
+<p>Here is an example:</p>
+
+<p><a href="listings/application/app3.py" class="py-listing">app3.py</a></p>
+
+<p>To demonstrate this, do the following:</p>
+
+<pre class="shell">
+% ./app3.py 
+Saving otk application to otk-start.tap...
+Saved.
+% twistd -f otk-start.tap 
+%
+% nc localhost 8123
+0
+% nc localhost 8123
+1
+% nc localhost 8123
+2
+%
+</pre>
+
+<p>Note that the stdout of the process is being directed into the log file,
+contained in <code>twistd.log</code>. Now stop the server, verify that it is no
+longer running, then restart it from the saved-at-shutdown <code>.tap</code>
+file:</p>
+
+<pre class="shell">
+% kill `cat twistd.pid `
+% nc localhost 8123
+localhost [127.0.0.1] 8123 (?) : Connection refused
+% twistd -f otk-shutdown.tap 
+% nc localhost 8123
+3
+%
+</pre>
+
+<p>Notice how the saved <code>.nextkey</code> attribute was restored, and the
+application picks up where it left off.</p>
+
+
+<h2>Configuration arguments</h2>
+
+<p>To do this right, you'll want to follow the sequence described by the
+<a href="plugin.xhtml">writing plugins</a> document. Instead of writing a short
+program that creates
+a <code>.tap</code> file (by creating an Application, doing various .listenTCPs
+on it, then calling .save), you will write a subroutine called
+updateApplication(). This subroutine should take a bunch of config arguments
+(using the usage.Options class described in the plugins document) and use
+them to create Factories and feed them to .listenTCP on an <em>existing</em>
+Application instance.</p>
+
+<p>With that in place, and a few files to register this new server you've
+created, a utility program called '<code>mktap</code>' can relieve you of the
+business of gathering user arguments and creating the app instance.
+<code>mktap</code> can use the Options subclass you define in your build-a-tap
+class to figure out what arguments are legal (<code>--port</code> taking a
+number, <code>--quotes</code> taking a filename, etc), provide <code>--help</code>
+with a list of valid arguments, and parse everything the user passes in
+<code>argv[]</code>. It creates the Application, then passes the app and the
+parsed options to your <code>updateApplication()</code> method, where you do the
+server-specific creation of a Factory and the various <code>listenTCP</code>
+calls. Then <code>mktap</code> saves out the <code>.tap</code> file, ready for
+starting by <code>twistd</code>.</p>
 
+<p>The end result is that installing your new server is simplified to the
+following steps:</p>
+=======
 <p>There are four interfaces supported, three of which are defined in
 <code>twisted.application.service</code>:</p>
+>>>>>>> 1.8
 
 <ul>
 <li><code>IService</code></li>
Index: async.xhtml
===================================================================
RCS file: /cvs/Twisted/doc/howto/async.xhtml,v
retrieving revision 1.2
diff -u -r1.2 async.xhtml
--- async.xhtml	10 Oct 2003 04:31:03 -0000	1.2
+++ async.xhtml	11 Oct 2003 18:19:57 -0000
@@ -1,9 +1,8 @@
-<?xml version="1.0"?>
-<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
-    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
-
-<html xmlns="http://www.w3.org/1999/xhtml">
-
+<?xml version="1.0" encoding="utf-8"?>
+<!DOCTYPE html PUBLIC
+    "-//W3C//DTD XHTML 1.0 Strict//EN"
+    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
+<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
 <head><title>Asynchronous Programming</title></head>
 <body>
 
Index: basics.xhtml
===================================================================
RCS file: /cvs/Twisted/doc/howto/basics.xhtml,v
retrieving revision 1.3
diff -u -r1.3 basics.xhtml
--- basics.xhtml	11 Oct 2003 14:55:10 -0000	1.3
+++ basics.xhtml	11 Oct 2003 18:19:58 -0000
@@ -1,8 +1,8 @@
-<?xml version="1.0"?>
-<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
-    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
-
-<html xmlns="http://www.w3.org/1999/xhtml">
+<?xml version="1.0" encoding="utf-8"?>
+<!DOCTYPE html PUBLIC
+    "-//W3C//DTD XHTML 1.0 Strict//EN"
+    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
+<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
 <head>
 <title>The Basics</title>
 </head>
Index: choosing-reactor.xhtml
===================================================================
RCS file: /cvs/Twisted/doc/howto/choosing-reactor.xhtml,v
retrieving revision 1.1
diff -u -r1.1 choosing-reactor.xhtml
--- choosing-reactor.xhtml	8 Oct 2003 10:22:00 -0000	1.1
+++ choosing-reactor.xhtml	11 Oct 2003 18:19:58 -0000
@@ -1,8 +1,8 @@
-<?xml version="1.0"?>
-<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
-    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
-
-<html xmlns="http://www.w3.org/1999/xhtml">
+<?xml version="1.0" encoding="utf-8"?>
+<!DOCTYPE html PUBLIC
+    "-//W3C//DTD XHTML 1.0 Strict//EN"
+    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
+<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
   <head>
     <title>Choosing a Reactor and GUI Toolkit Integration</title>
   </head>
@@ -77,7 +77,7 @@
 
     <h2>General Purpose Reactors</h2>
 
-    <h3>Select()-based Reactor</h3><a name="select" />
+    <h3 id="select">Select()-based Reactor</h3>
 
     <p>The SelectReactor is the default reactor.</p>
 
@@ -93,7 +93,7 @@
 </pre>
 
     
-    <h3>Poll()-based Reactor</h3><a name="poll" />
+    <h3 id="poll">Poll()-based Reactor</h3>
 
     <p>The PollReactor will work on any platform that provides
     <code class="python">poll()</code>.  With larger numbers of
@@ -106,7 +106,7 @@
 
     <h2>Platform-Specific Reactors</h2>
 
-    <h3>cReactor for Unix</h3><a name="creactor" />
+    <h3 id="creactor">cReactor for Unix</h3>
 
     <p>The cReactor is a high-performance C implementation of the
     Reactor interfaces.  It is currently experimental and under
@@ -117,7 +117,7 @@
 cReactor.install()
 </pre>
 
-    <h3>KQueue</h3><a name="kqueue" />
+    <h3 id="kqueue">KQueue</h3>
 
     <p>The KQueue Reactor allows Twisted to use FreeBSD's kqueue mechanism for
        event scheduling. See instructions in the <code class="API"
@@ -129,7 +129,7 @@
 kqreactor.install()
 </pre>
 
-    <h3>Java</h3><a name="java" />
+    <h3 id="java">Java</h3>
 
     <p>The Java Reactor allows Twisted to run under
     <a href="http://www.jython.org/">Jython</a>.  It does not
@@ -140,7 +140,7 @@
 javareactor.install()
 </pre>
 
-   <h3>Win32</h3><a name="win32" />
+   <h3 id="win32">Win32</h3>
 
     <p>The Win32 reactor is not yet complete and has various limitations
     and issues that need to be addressed.  The reactor supports GUI integration
@@ -154,7 +154,7 @@
 
     <h2>GUI Integration Reactors</h2>
 
-    <h3>GTK+</h3><a name="gtk" />
+    <h3 id="gtk">GTK+</h3>
 
     <p>Twisted integrates with <a href="http://www.daa.com.au/~james/pygtk/"
     >PyGTK</a>, versions 1.2 and 2.0.  Sample applications using GTK+ and
@@ -165,7 +165,7 @@
 gtkreactor.install()
 </pre>
 
-    <h3>Qt</h3><a name="qt" />
+    <h3 id="qt">Qt</h3>
 
     <p>An example Twisted application that uses Qt can be found in
     <code class="py-filename">doc/examples/qtdemo.py</code>.</p>
@@ -183,7 +183,7 @@
 
     <h2>Non-Reactor GUI Integration</h2>
 
-    <h3>Tkinter</h3><a name="tkinter" />
+    <h3 id="tkinter">Tkinter</h3>
 
     <p>The support for <a href="http://www.python.org/topics/tkinter/"
     >Tkinter</a> doesn't use a specialized reactor.  Instead, there is
@@ -203,7 +203,7 @@
     <p>An example Twisted application that uses Tk can be found in
     <code class="py-filename">twisted/words/ui/tkim.py</code>.</p>
 
-    <h3>wxPython</h3><a name="wxpython" />
+    <h3 id="wxpython">wxPython</h3>
 
     <p>As with <a href="#tkinter">Tkinter</a>, the support for integrating
     Twisted with a <a href="http://www.wxpython.org">wxPython</a>
@@ -220,7 +220,7 @@
     <p>An example Twisted application that uses WxWindows can be found
     in <code class="py-filename">doc/examples/wxdemo.py</code>.</p>
 
-    <h3>PyUI</h3><a name="pyui" />
+    <h3 id="pyui">PyUI</h3>
 
     <p>As with <a href="#tkinter">Tkinter</a>, the support for integrating
     Twisted with a <a href="http://pyui.sourceforge.net">PyUI</a>
Index: clients.xhtml
===================================================================
RCS file: /cvs/Twisted/doc/howto/clients.xhtml,v
retrieving revision 1.2
diff -u -r1.2 clients.xhtml
--- clients.xhtml	10 Oct 2003 04:31:03 -0000	1.2
+++ clients.xhtml	11 Oct 2003 18:19:59 -0000
@@ -1,8 +1,8 @@
-<?xml version="1.0"?>
-<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
-    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
-
-<html xmlns="http://www.w3.org/1999/xhtml">
+<?xml version="1.0" encoding="utf-8"?>
+<!DOCTYPE html PUBLIC
+    "-//W3C//DTD XHTML 1.0 Strict//EN"
+    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
+<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
   <head>
     <title>Writing Clients</title>
   </head>
Index: coding-standard.xhtml
===================================================================
RCS file: /cvs/Twisted/doc/howto/coding-standard.xhtml,v
retrieving revision 1.2
diff -u -r1.2 coding-standard.xhtml
--- coding-standard.xhtml	10 Oct 2003 04:31:03 -0000	1.2
+++ coding-standard.xhtml	11 Oct 2003 18:20:00 -0000
@@ -1,8 +1,8 @@
-<?xml version="1.0"?>
-<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
-    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
-
-<html xmlns="http://www.w3.org/1999/xhtml">
+<?xml version="1.0" encoding="utf-8"?>
+<!DOCTYPE html PUBLIC
+    "-//W3C//DTD XHTML 1.0 Strict//EN"
+    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
+<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
   <head>
     <title>Twisted Coding Standard</title>
   </head>
@@ -83,10 +83,11 @@
     that module.</p>
 
     <p>Depending on the situation, it is acceptable to have imports i
-       look like this:
+       look like this:</p>
        <pre class="python">from twisted.internet.defer import Deferred</pre>
-       or like this: 
+       <p>or like this: </p>
        <pre class="python">from twisted.internet import defer</pre> 
+       <p>
        That is, modules should import <em>modules</em> or 
        <em>classes and functions</em>, but not <em>packages</em>.</p>
 
@@ -230,7 +231,7 @@
     a Python version, place the import statement inside a try/except block,
     and import the Python version if the import fails.  This allows code to
     work on platforms where the extension version is not available.  For
-    example:
+    example:</p>
 
 <pre class="python">
 try:
@@ -239,7 +240,7 @@
     import pickle
 </pre>
 
-    Use the &quot;as&quot; syntax of the import statement as well, to set
+    <p>Use the &quot;as&quot; syntax of the import statement as well, to set
     the name of the extension module to the name of the Python module.</p>
 
     <h2>ChangeLog</h2>
Index: components.xhtml
===================================================================
RCS file: /cvs/Twisted/doc/howto/components.xhtml,v
retrieving revision 1.1
diff -u -r1.1 components.xhtml
--- components.xhtml	8 Oct 2003 10:22:01 -0000	1.1
+++ components.xhtml	11 Oct 2003 18:20:01 -0000
@@ -1,4 +1,8 @@
-<html>
+<?xml version="1.0" encoding="utf-8"?>
+<!DOCTYPE html PUBLIC
+    "-//W3C//DTD XHTML 1.0 Strict//EN"
+    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
+<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
 <head><title>Twisted Components: Interfaces and Adapters</title></head>
 
 <body>
Index: conch_client.xhtml
===================================================================
RCS file: /cvs/Twisted/doc/howto/conch_client.xhtml,v
retrieving revision 1.1
diff -u -r1.1 conch_client.xhtml
--- conch_client.xhtml	8 Oct 2003 10:22:01 -0000	1.1
+++ conch_client.xhtml	11 Oct 2003 18:20:01 -0000
@@ -1,8 +1,8 @@
-<?xml version="1.0"?>
-<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
-    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
-
-<html xmlns="http://www.w3.org/1999/xhtml">
+<?xml version="1.0" encoding="utf-8"?>
+<!DOCTYPE html PUBLIC
+    "-//W3C//DTD XHTML 1.0 Strict//EN"
+    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
+<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
   <head>
     <title>Writing a client with Twisted.Conch</title>
   </head>
@@ -225,7 +225,7 @@
     main()
 </pre>
 
-<P>We call <code class="python">connectTCP()</code> to connect to
+<p>We call <code class="python">connectTCP()</code> to connect to
 localhost, port 22 (the standard port for ssh), and pass it an instance
 of <code class="API">twisted.internet.protocol.ClientFactory</code>.
 This instance has the attribute <code class="python">protocol</code>
@@ -235,17 +235,17 @@
 <code class="python">ClientFactory</code>! When the <code
 class="python">connectTCP</code> call completes, the protocol will be
 called to create a <code class="python">ClientTransport()</code> object
-- this then invokes all our previous work.</P>
+- this then invokes all our previous work.</p>
 
-<P>It's worth noting that in the example <code class="python">main()</code> 
+<p>It's worth noting that in the example <code class="python">main()</code> 
 routine, the <code class="python">reactor.run()</code> call never returns. 
 If you want to make the program exit, call 
 <code class="python">reactor.stop()</code> in the earlier 
-<code class="python">closed()</code> method.</P>
+<code class="python">closed()</code> method.</p>
 
-<P>If you wish to observe the interactions in more detail, adding a call
+<p>If you wish to observe the interactions in more detail, adding a call
 to <code class="python">log.startLogging(sys.stdout, setStdout=0)</code>
 before the <code class="python">reactor.run()</code> call will send all
-logging to stdout.</P>
+logging to stdout.</p>
 
 </body></html>
Index: controllerindepth.xhtml
===================================================================
RCS file: /cvs/Twisted/doc/howto/controllerindepth.xhtml,v
retrieving revision 1.2
diff -u -r1.2 controllerindepth.xhtml
--- controllerindepth.xhtml	10 Oct 2003 04:31:03 -0000	1.2
+++ controllerindepth.xhtml	11 Oct 2003 18:20:03 -0000
@@ -1,11 +1,15 @@
-<html>
+<?xml version="1.0" encoding="utf-8"?>
+<!DOCTYPE html PUBLIC
+    "-//W3C//DTD XHTML 1.0 Strict//EN"
+    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
+<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
   <head><title>Controllers in Depth</title></head>
 <body>
 
 <h1>Controllers in Depth</h1>
 
-<img alt="Controller" title="Controller in Relation to View and Model"
-src="../img/controller.png" />
+<p><img alt="Controller" title="Controller in Relation to View and Model"
+src="../img/controller.png" /></p>
 
 <p>Controller objects are a way to generalize and reuse input handling logic. In
 Twisted Web, form input is passed to a Resource instance in request.args. You
@@ -30,7 +34,7 @@
   JavaScript events in your pages with server-side Python code.</li>
 </ul>
 
-<h2>Controller factories</h2><a name="controllerfactories" />
+<h2 id="controllerfactories">Controller factories</h2>
 
 <p>Controller factories provide the glue between a <code>controller=</code>
 directive on a DOM node and a Controller instance. When a DOM node with a
@@ -48,7 +52,7 @@
         return MyController(model)
 </pre>
 
-<h2>Handle</h2><a name="handle" />
+<h2 id="handle">Handle</h2>
 
 <p>Handle is the API your controller must implement to handle a node. It's
 return value may be a Deferred if you wish to pause the rendering of the View
@@ -61,7 +65,7 @@
         print "HOORJ! YOUR NAME IS %s" % name
 </pre>
 
-<h2>InputHandlers</h2><a name="inputhandlers" />
+<h2 id="inputhandlers">InputHandlers</h2>
 
 <p>InputHandlers are defined in <code class="API"
 base="twisted.web">woven.input</code>.  They were an early attempt to create a
@@ -151,7 +155,7 @@
             commit=self.commitName)
 </pre>
 
-<h2>Event handlers</h2><a name="eventhandlers" />
+<h2 id="eventhandlers">Event handlers</h2>
 
 <div class="note"><p>In order for Event Handlers to work, you must be using <a
 href="livepage.xhtml">LivePage</a>, and include the webConduitGlue View in your HTML
Index: cred.xhtml
===================================================================
RCS file: /cvs/Twisted/doc/howto/cred.xhtml,v
retrieving revision 1.2
diff -u -r1.2 cred.xhtml
--- cred.xhtml	10 Oct 2003 04:31:03 -0000	1.2
+++ cred.xhtml	11 Oct 2003 18:20:05 -0000
@@ -1,4 +1,8 @@
-<html>
+<?xml version="1.0" encoding="utf-8"?>
+<!DOCTYPE html PUBLIC
+    "-//W3C//DTD XHTML 1.0 Strict//EN"
+    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
+<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
 <head>
 <title>Why and How to use Twisted.Cred</title>
 </head>
Index: cvs-dev.xhtml
===================================================================
RCS file: /cvs/Twisted/doc/howto/cvs-dev.xhtml,v
retrieving revision 1.2
diff -u -r1.2 cvs-dev.xhtml
--- cvs-dev.xhtml	10 Oct 2003 04:31:03 -0000	1.2
+++ cvs-dev.xhtml	11 Oct 2003 18:20:05 -0000
@@ -1,4 +1,8 @@
-<html>
+<?xml version="1.0" encoding="utf-8"?>
+<!DOCTYPE html PUBLIC
+    "-//W3C//DTD XHTML 1.0 Strict//EN"
+    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
+<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
   <head>
     <title>Working from Twisted CVS</title>
   </head>
Index: debug-with-emacs.xhtml
===================================================================
RCS file: /cvs/Twisted/doc/howto/debug-with-emacs.xhtml,v
retrieving revision 1.1
diff -u -r1.1 debug-with-emacs.xhtml
--- debug-with-emacs.xhtml	8 Oct 2003 10:22:01 -0000	1.1
+++ debug-with-emacs.xhtml	11 Oct 2003 18:20:05 -0000
@@ -1,13 +1,20 @@
-<html>
+<?xml version="1.0" encoding="utf-8"?>
+<!DOCTYPE html PUBLIC
+    "-//W3C//DTD XHTML 1.0 Strict//EN"
+    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
+<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
 <head>
 <title>Debugging Python(Twisted) with Emacs</title>
 </head>
 <body>
 <h1>Debugging Python(Twisted) with Emacs</h1>
 
-<img src="http://yellow5.com/pokey/archive/pokey411_3.gif"/>
+<div>
+<img src="http://yellow5.com/pokey/archive/pokey411_3.gif"
+alt="POKEY THE PENGUIN" />
 <span class="footnote">POKEY THE PENGUIN IS COPYRIGHT &copy; 1998-2002
 THE AUTHORS</span>
+</div>
 
 <ul>
   <li>Open up your project files. sometimes emacs can't find them if you
Index: defer.xhtml
===================================================================
RCS file: /cvs/Twisted/doc/howto/defer.xhtml,v
retrieving revision 1.1
diff -u -r1.1 defer.xhtml
--- defer.xhtml	8 Oct 2003 10:22:01 -0000	1.1
+++ defer.xhtml	11 Oct 2003 18:20:06 -0000
@@ -1,8 +1,8 @@
-<?xml version="1.0"?>
-<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
-    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
-
-<html xmlns="http://www.w3.org/1999/xhtml">
+<?xml version="1.0" encoding="utf-8"?>
+<!DOCTYPE html PUBLIC
+    "-//W3C//DTD XHTML 1.0 Strict//EN"
+    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
+<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
 <head>
 <title>Using Deferreds</title>
 </head>
@@ -125,7 +125,7 @@
             self.d.errback(ValueError("You used an even number!"))
 
     def _toHTML(self, r):
-        return "<p>Result: %s</p>" % r
+        return "&lt;p&gt;Result: %s&lt;/p&gt;" % r
 
     def getData(self, x):
         """The Deferred mechanism allows for chained callbacks.
@@ -150,7 +150,7 @@
 d.addCallback(printData)
 d.addErrback(printError)
 
-# this will print "<p>Result: 12</p>"
+# this will print "&lt;p&gt;Result: 12&lt;/p&gt;"
 g = Getter()
 d = g.getData(4)
 d.addCallback(printData)
@@ -161,8 +161,8 @@
 
 <h3>Visual Explanation</h3>
 
-<div hlint="off" align="center">
-<img src="../img/deferred-attach.png" />
+<div hlint="off">
+<img src="../img/deferred-attach.png" alt="attach" />
 </div>
 
 <ol>
@@ -172,7 +172,7 @@
   <li>Requesting method attaches callbacks to Deferred
   object.</li>
 </ol>
-<img hlint="off" src="../img/deferred-process.png" align="left" /> 
+<p><img hlint="off" src="../img/deferred-process.png" alt="process" /></p>
 
 <ol>
   
@@ -206,7 +206,7 @@
     instance, switch to callback.</li>
   </ul> </li>
 </ol>
-<br hlint="off" clear="all" />
+<p><br hlint="off" clear="all" /></p>
 
 
 <h3>More about callbacks</h3>
Index: dirdbm.xhtml
===================================================================
RCS file: /cvs/Twisted/doc/howto/dirdbm.xhtml,v
retrieving revision 1.1
diff -u -r1.1 dirdbm.xhtml
--- dirdbm.xhtml	8 Oct 2003 10:22:01 -0000	1.1
+++ dirdbm.xhtml	11 Oct 2003 18:20:07 -0000
@@ -1,8 +1,8 @@
-<?xml version="1.0"?>
-<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
-    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
-
-<html xmlns="http://www.w3.org/1999/xhtml">
+<?xml version="1.0" encoding="utf-8"?>
+<!DOCTYPE html PUBLIC
+    "-//W3C//DTD XHTML 1.0 Strict//EN"
+    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
+<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
   <head>
     <title>DirDBM: Directory-based Storage</title>
   </head>
Index: doc-standard.xhtml
===================================================================
RCS file: /cvs/Twisted/doc/howto/doc-standard.xhtml,v
retrieving revision 1.1
diff -u -r1.1 doc-standard.xhtml
--- doc-standard.xhtml	8 Oct 2003 10:22:01 -0000	1.1
+++ doc-standard.xhtml	11 Oct 2003 18:20:07 -0000
@@ -1,8 +1,8 @@
-<?xml version="1.0"?>
-<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
+<?xml version="1.0" encoding="utf-8"?>
+<!DOCTYPE html PUBLIC
+    "-//W3C//DTD XHTML 1.0 Strict//EN"
     "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
-
-<html xmlns="http://www.w3.org/1999/xhtml">
+<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
   <head>
     <title>HTML Documentation Standard for Twisted</title>
   </head>
Index: enterprise.xhtml
===================================================================
RCS file: /cvs/Twisted/doc/howto/enterprise.xhtml,v
retrieving revision 1.2
diff -u -r1.2 enterprise.xhtml
--- enterprise.xhtml	10 Oct 2003 04:31:03 -0000	1.2
+++ enterprise.xhtml	11 Oct 2003 18:20:07 -0000
@@ -1,8 +1,8 @@
-<?xml version="1.0"?>
-<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
-    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
-
-<html xmlns="http://www.w3.org/1999/xhtml">
+<?xml version="1.0" encoding="utf-8"?>
+<!DOCTYPE html PUBLIC
+    "-//W3C//DTD XHTML 1.0 Strict//EN"
+    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
+<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
   <head>
     <title>Introduction to Twisted Enterprise</title>
   </head>
Index: extend-lore.xhtml
===================================================================
RCS file: /cvs/Twisted/doc/howto/extend-lore.xhtml,v
retrieving revision 1.2
diff -u -r1.2 extend-lore.xhtml
--- extend-lore.xhtml	10 Oct 2003 04:31:03 -0000	1.2
+++ extend-lore.xhtml	11 Oct 2003 18:20:08 -0000
@@ -1,5 +1,9 @@
-<html xmlns="http://www.w3.org/1999/xhtml">
-  <head><title>Extending the Lore Documentation System</title></head>
+<?xml version="1.0" encoding="utf-8"?>
+<!DOCTYPE html PUBLIC
+    "-//W3C//DTD XHTML 1.0 Strict//EN"
+    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
+<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
+<head><title>Extending the Lore Documentation System</title></head>
 
 <body>
 <h1>Extending the Lore Documentation System</h1>
@@ -69,8 +73,8 @@
 the output of lint to produce no warnings when it sees lines with these 2
 classes.  To make LaTeX and lint work, we start by creating a plugin.</p>
 
-<a href="listings/lore/plugins.tml" class="py-listing">
-  Listing 1: The Plugin File</a>
+<p><a href="listings/lore/plugins.tml" class="py-listing">
+  Listing 1: The Plugin File</a></p>
 
 <p>Name this file <code class="py-filename">plugins.tml</code>, and put it in
 a new package directory named <code class="py-filename">myhtml</code>.  Also
@@ -98,8 +102,8 @@
 in the package named <code class="py-filename">myhtml</code>.  The purpose of
 the factory module is to tell Lore how to process your input.</p>
 
-<a href="listings/lore/factory.py-1" class="py-listing">Listing 2: The Input
-  Factory</a>
+<p><a href="listings/lore/factory.py-1" class="py-listing">Listing 2: The Input
+  Factory</a></p>
 
 <p>In Listing 2, we create a subclass of ProcessingFunctionFactory.  This
 class provides a hook for you, a class variable named
@@ -120,8 +124,8 @@
 <q>latex tutorial</q> and you will find any number of useful LaTeX
 resources.</p>
 
-<a href="listings/lore/spitters.py-1" class="py-listing">Listing 3:
-  spitters.py</a>
+<p><a href="listings/lore/spitters.py-1" class="py-listing">Listing 3:
+  spitters.py</a></p>
 
 <p>The method <code>visitNode_span_productname</code> is
 our handler for &lt;span&gt; tags with the <code>class="productname"</code>
@@ -133,8 +137,8 @@
 <p>Now let's see what Lore does with these new classes with the following
 input file:</p>
 
-<a href="listings/lore/1st_example.html" class="html-listing">Listing 4:
-  1st_example.html</a>
+<p><a href="listings/lore/1st_example.html" class="html-listing">Listing 4:
+  1st_example.html</a></p>
 
 <p>First, verify that your package is laid out correctly.  Your directory
 structure should look like this:</p>
@@ -163,7 +167,7 @@
 
 <p>And here's what the rendered PDF looks like:</p>
 
-<p><img src="../img/myhtml-output.png"/></p>
+<p><img src="../img/myhtml-output.png" alt="myhtml-output" /></p>
 
 <p>What happens when we run lore on this file using the lint output?</p>
 
@@ -178,8 +182,8 @@
 process them.  To fix this problem, we must add to <code
     class="py-filename">factory.py</code>.</p>
 
-<a href="listings/lore/factory.py-2" class="py-listing">Listing 5: Input
-    Factory with Lint Support</a>
+<p><a href="listings/lore/factory.py-2" class="py-listing">Listing 5: Input
+    Factory with Lint Support</a></p>
 
 <p>The method <code class="py-src-identifier">getLintChecker</code> is called
 by Lore to produce the lint output.  This modification adds our classes to the
@@ -209,19 +213,19 @@
 </ul>
 
 <h3>Creating New Outputs</h3>
-<p><div class="doit">write some stuff</div></p>
+<div class="doit">write some stuff</div>
 
 <h2>Other Uses for Lore Extensions</h2>
-<p><div class="doit">write some stuff</div></p>
+<div class="doit">write some stuff</div>
 
 <h3>Color-Code Programming Languages</h3>
-<p><div class="doit">write some stuff</div></p>
+<div class="doit">write some stuff</div>
 
 <h3>Add New Structural Elements</h3>
-<p><div class="doit">write some stuff</div></p>
+<div class="doit">write some stuff</div>
 
 <h3>Support New File Formats</h3>
-<p><div class="doit">write some stuff</div></p>
+<div class="doit">write some stuff</div>
 
 
 </body>
Index: faq.xhtml
===================================================================
RCS file: /cvs/Twisted/doc/howto/faq.xhtml,v
retrieving revision 1.2
diff -u -r1.2 faq.xhtml
--- faq.xhtml	10 Oct 2003 04:31:03 -0000	1.2
+++ faq.xhtml	11 Oct 2003 18:20:09 -0000
@@ -1,8 +1,8 @@
-<?xml version="1.0"?>
-<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
-    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
-
-<html xmlns="http://www.w3.org/1999/xhtml">
+<?xml version="1.0" encoding="utf-8"?>
+<!DOCTYPE html PUBLIC
+    "-//W3C//DTD XHTML 1.0 Strict//EN"
+    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
+<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
 <head><title>The Twisted FAQ</title></head>
 <body>
 <h1>The Twisted FAQ</h1>
@@ -78,15 +78,15 @@
 will probably be provided. If no comment about API stability is present, assume
 the module is unstable.</p>
 
-<p>In Twisted 1.0, <em>most of twisted.internet is completely stable</em>, other than:
+<p>In Twisted 1.0, <em>most of twisted.internet is completely stable</em>, other
+than:</p>
 
 <ol>
 <li>UDP support</li>
 <li>twisted.internet.win32eventreactor - will be replaced with win32support in future.</li>
 </ol>
 
-But as always, the only accurate way of knowing a module's stability is reading
-the module's docstrings.</p>
+<p>But as always, the only accurate way of knowing a module's stability is reading the module's docstrings.</p>
 
 <h2>Installation</h2>
 
Index: flow.xhtml
===================================================================
RCS file: /cvs/Twisted/doc/howto/flow.xhtml,v
retrieving revision 1.1
diff -u -r1.1 flow.xhtml
--- flow.xhtml	8 Oct 2003 10:22:01 -0000	1.1
+++ flow.xhtml	11 Oct 2003 18:20:10 -0000
@@ -1,8 +1,8 @@
-<?xml version="1.0"?>
-<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
-    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
-
-<html xmlns="http://www.w3.org/1999/xhtml">
+<?xml version="1.0" encoding="utf-8"?>
+<!DOCTYPE html PUBLIC
+    "-//W3C//DTD XHTML 1.0 Strict//EN"
+    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
+<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
 <head>
 <title>Cooperative Data Flows (via generators)</title>
 </head>
Index: formindepth.xhtml
===================================================================
RCS file: /cvs/Twisted/doc/howto/formindepth.xhtml,v
retrieving revision 1.1
diff -u -r1.1 formindepth.xhtml
--- formindepth.xhtml	8 Oct 2003 10:22:01 -0000	1.1
+++ formindepth.xhtml	11 Oct 2003 18:20:10 -0000
@@ -1,4 +1,9 @@
-<html><head><title>Form In Depth</title></head><body>
+<?xml version="1.0" encoding="utf-8"?>
+<!DOCTYPE html PUBLIC
+    "-//W3C//DTD XHTML 1.0 Strict//EN"
+    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
+<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
+<head><title>Form In Depth</title></head><body>
 <h1>Form In Depth</h1>
 
 <p>XXX: To be written</p>
Index: glossary.xhtml
===================================================================
RCS file: /cvs/Twisted/doc/howto/glossary.xhtml,v
retrieving revision 1.3
diff -u -r1.3 glossary.xhtml
--- glossary.xhtml	10 Oct 2003 04:31:03 -0000	1.3
+++ glossary.xhtml	11 Oct 2003 18:20:10 -0000
@@ -1,8 +1,8 @@
-<?xml version="1.0"?>
-<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
-    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
-
-<html xmlns="http://www.w3.org/1999/xhtml">
+<?xml version="1.0" encoding="utf-8"?>
+<!DOCTYPE html PUBLIC
+    "-//W3C//DTD XHTML 1.0 Strict//EN"
+    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
+<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
 <head>
 <title>Twisted Glossary</title>
 </head>
Index: guardindepth.xhtml
===================================================================
RCS file: /cvs/Twisted/doc/howto/guardindepth.xhtml,v
retrieving revision 1.1
diff -u -r1.1 guardindepth.xhtml
--- guardindepth.xhtml	8 Oct 2003 10:22:02 -0000	1.1
+++ guardindepth.xhtml	11 Oct 2003 18:20:10 -0000
@@ -1,4 +1,9 @@
-<html><head><title>Guard In Depth</title></head><body>
+<?xml version="1.0" encoding="utf-8"?>
+<!DOCTYPE html PUBLIC
+    "-//W3C//DTD XHTML 1.0 Strict//EN"
+    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
+<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
+<head><title>Guard In Depth</title></head><body>
 <h1>Guard In Depth</h1>
 
 <p>XXX: To be written</p>
Index: im.xhtml
===================================================================
RCS file: /cvs/Twisted/doc/howto/im.xhtml,v
retrieving revision 1.1
diff -u -r1.1 im.xhtml
--- im.xhtml	8 Oct 2003 10:22:02 -0000	1.1
+++ im.xhtml	11 Oct 2003 18:20:10 -0000
@@ -1,8 +1,8 @@
-<?xml version="1.0" encoding="ISO-8859-1"?>
-<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
+<?xml version="1.0" encoding="utf-8"?>
+<!DOCTYPE html PUBLIC
+    "-//W3C//DTD XHTML 1.0 Strict//EN"
     "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
-
-<html xmlns="http://www.w3.org/1999/xhtml">
+<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
 	<head>
 		<title>Overview of Twisted IM</title>
 	</head>
Index: index.xhtml
===================================================================
RCS file: /cvs/Twisted/doc/howto/index.xhtml,v
retrieving revision 1.2
diff -u -r1.2 index.xhtml
--- index.xhtml	10 Oct 2003 04:31:03 -0000	1.2
+++ index.xhtml	11 Oct 2003 18:20:10 -0000
@@ -1,9 +1,8 @@
-<?xml version="1.0"?>
-<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
-    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
-
-<html xmlns="http://www.w3.org/1999/xhtml">
-
+<?xml version="1.0" encoding="utf-8"?>
+<!DOCTYPE html PUBLIC
+    "-//W3C//DTD XHTML 1.0 Strict//EN"
+    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
+<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
 <head><title>Twisted Documentation</title></head>
 <body>
 
Index: internet-overview.xhtml
===================================================================
RCS file: /cvs/Twisted/doc/howto/internet-overview.xhtml,v
retrieving revision 1.2
diff -u -r1.2 internet-overview.xhtml
--- internet-overview.xhtml	10 Oct 2003 04:31:03 -0000	1.2
+++ internet-overview.xhtml	11 Oct 2003 18:20:10 -0000
@@ -1,9 +1,8 @@
-<?xml version="1.0"?>
-<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
-    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
-
-<html xmlns="http://www.w3.org/1999/xhtml">
-
+<?xml version="1.0" encoding="utf-8"?>
+<!DOCTYPE html PUBLIC
+    "-//W3C//DTD XHTML 1.0 Strict//EN"
+    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
+<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
 <head><title>Overview of Twisted Internet</title></head>
 <body>
 
Index: livepage.xhtml
===================================================================
RCS file: /cvs/Twisted/doc/howto/livepage.xhtml,v
retrieving revision 1.1
diff -u -r1.1 livepage.xhtml
--- livepage.xhtml	8 Oct 2003 10:22:04 -0000	1.1
+++ livepage.xhtml	11 Oct 2003 18:20:10 -0000
@@ -1,14 +1,20 @@
-<html>
+<?xml version="1.0" encoding="utf-8"?>
+<!DOCTYPE html PUBLIC
+    "-//W3C//DTD XHTML 1.0 Strict//EN"
+    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
+<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
 <head><title>LivePage</title></head>
 
 <body>
 
 <h1>LivePage</h1>
 
-<div class="note"><p>This is just a quick bootstrap page for now.</p></div>
+<div class="note"><p>This is just a quick bootstrap page for now.</p>
 
 <img title="Overview of LivePage" alt="Overview of LivePage"
 src="../img/livepage.png" />
+
+</div>
 
 <p>To use LivePage, subclass or instantiate <code class="API"
 base="twisted.web.woven.page">LivePage</code> instead of <code class="API"
Index: lore.xhtml
===================================================================
RCS file: /cvs/Twisted/doc/howto/lore.xhtml,v
retrieving revision 1.1
diff -u -r1.1 lore.xhtml
--- lore.xhtml	8 Oct 2003 10:22:04 -0000	1.1
+++ lore.xhtml	11 Oct 2003 18:20:11 -0000
@@ -1,4 +1,8 @@
-<html xmlns="http://www.w3.org/1999/xhtml">
+<?xml version="1.0" encoding="utf-8"?>
+<!DOCTYPE html PUBLIC
+    "-//W3C//DTD XHTML 1.0 Strict//EN"
+    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
+<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
 <head><title>Using the Lore Documentation System</title></head>
 
 <body>
@@ -50,7 +54,7 @@
 
 <p><code>span</code>: The span element is an element which has no meaning
    -- unless it has a special <code>class</code> attributes.
-   The following classes have the stated meanings:
+   The following classes have the stated meanings:</p>
 <dl>
 <dt><code>footnote</code></dt>
 <dd>a small comment which should not be inside the main text-flow.</dd>
@@ -64,10 +68,11 @@
     you will only have one level, in which case <code>value="term"</code>
     works.</dd>
 </dl>
-</p>
+
 
 <p><code>div</code>: The div element is equivalent to a span, except it always
-   appears outside paragraphs. The following classes have the given meanings:
+   appears outside paragraphs. The following classes have the given
+   meanings:</p>
 <dl>
 <dt><code>note</code></dt>
 <dd>A short note which is not necessary for the understanding of the text.</dd>
@@ -77,10 +82,10 @@
 <dt><code>boxed</code></dt>
 <dd>An indication that the text should be clearly separated from its
     surroundings.</dd>
-</dl></p>
+</dl>
 
 <p><code>a</code>: This element can have several meanings, depending on
-   the attributes:
+   the attributes:</p>
 <dl>
 <dt><code>name</code> attribute</dt>
 <dd>Add a label to the current position, which might be used in this document
@@ -97,7 +102,7 @@
     <code>class=html-listing</code></dt>
 <dd>Indicate the given resource is a part of the text flow, and should be
     inlined (and if possible, syntax highlighted).</dd>
-</dl></p>
+</dl>
 
 <p><code>ol</code>, <code>ul</code>: A list. It can be enumerated or
    bulleted. Inside a list, the element <code>li</code> (for a list element)
@@ -107,7 +112,7 @@
    headings.</p>
 
 <p><code>code</code>: a string which has meaning to the computer.
-   There are many possible classes:
+   There are many possible classes:</p>
 <dl>
 <dt><code>API</code></dt>
 <dd>A class, function or a module. It does not have to be a fully qualified
@@ -132,7 +137,7 @@
 <dd>Identifier</dd>
 <dt><code>py-src-keyword</code></dt>
 <dd>Keyword</dd>
-</dl></p>
+</dl>
 
 <p><code>pre</code>: Preformatted text, usually for file listings. It can
 be used with the <code>python</code>
Index: manhole.xhtml
===================================================================
RCS file: /cvs/Twisted/doc/howto/manhole.xhtml,v
retrieving revision 1.1
diff -u -r1.1 manhole.xhtml
--- manhole.xhtml	8 Oct 2003 10:22:04 -0000	1.1
+++ manhole.xhtml	11 Oct 2003 18:20:11 -0000
@@ -1,8 +1,8 @@
-<?xml version="1.0"?>
-<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
-    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
-
-<html xmlns="http://www.w3.org/1999/xhtml">
+<?xml version="1.0" encoding="utf-8"?>
+<!DOCTYPE html PUBLIC
+    "-//W3C//DTD XHTML 1.0 Strict//EN"
+    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
+<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
   <head>
     <title>Debugging with Manhole</title>
   </head>
Index: modelindepth.xhtml
===================================================================
RCS file: /cvs/Twisted/doc/howto/modelindepth.xhtml,v
retrieving revision 1.2
diff -u -r1.2 modelindepth.xhtml
--- modelindepth.xhtml	10 Oct 2003 04:31:03 -0000	1.2
+++ modelindepth.xhtml	11 Oct 2003 18:20:12 -0000
@@ -1,8 +1,16 @@
-<html><head><title>Model In Depth</title></head><body>
+<?xml version="1.0" encoding="utf-8"?>
+<!DOCTYPE html PUBLIC
+    "-//W3C//DTD XHTML 1.0 Strict//EN"
+    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
+<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
+<head><title>Model In Depth</title></head><body>
 
 <h1>Model In Depth</h1>
 
-<img title="Model in Relation to Controller and View" src="../img/model.png" />
+<p>
+<img title="Model in Relation to Controller and View" src="../img/model.png"
+alt="Model in Relation to Controller and View" />
+</p>
 
 <p>Model objects provide data to View objects as a Page is being rendered.</p>
 
@@ -22,7 +30,7 @@
 
 </ul>
 
-<h2>Submodel Paths</h2><a name="submodelpaths" />
+<h2 id="submodelpaths">Submodel Paths</h2>
 
   <p>Each Model Woven has access to in the tree has a <q>submodel path</q>. Submodel paths start at the Root Model and specify each segment Woven must follow to locate the Model. Submodel paths are slash-separated strings similar to filesystem paths. For the basic Python container types, Dictionaries and Lists, a submodel path segment is simply the key into the container. Given the model:</p>
 
@@ -35,7 +43,8 @@
          }
 </pre>
 
-<img title="Model Tree Diagram" src="../img/plone_root_model.png" />
+<p><img title="Model Tree Diagram" src="../img/plone_root_model.png" alt="Model
+Tree Diagram" /></p>
 
 <p>The following submodel paths are valid:</p>
  
@@ -67,7 +76,7 @@
 &lt;/html&gt;
 </pre>
 
-<h2>The Model Stack and Relative Submodel Paths</h2><a name="modelstack" />
+<h2 id="modelstack">The Model Stack and Relative Submodel Paths</h2>
 
   <p>While <q>absolute model paths</q> are useful for specifying exactly which Model data you want associated with a node, the more frequent use case is to specify a <q>relative model path</q> which is a path relative to the Model currently on top of the <q>Model stack</q>. Relative model paths are easy to distinguish because they do not begin with a slash.</p>
 
@@ -116,7 +125,7 @@
 &lt;/html&gt;
 </pre>
 
-<h2>IModel Adapters</h2><a name="imodel" />
+<h2 id="imodel">IModel Adapters</h2>
 
   <p>The IModel interface is documented in <code class="API">twisted.web.woven.interfaces.IModel</code>. It describes the interfaces Models must implement in order to participate in the Woven Model stack. If you are inheriting from <code class="API">twisted.web.woven.model.Model</code>, most of these interfaces will be implemented for you.</p>
 
@@ -170,7 +179,7 @@
 components.registerAdapter(MyDataModel, MyData, interfaces.IModel)
 </pre>
 
-<h2>Model Factories</h2><a name="modelfactories" />
+<h2 id="modelfactories">Model Factories</h2>
 
   <p>Using a separate Model class for each individual piece of data in the system makes sense when you are able to generalize your Model classes enough so they are reusable. However, it is often easier, especially if you need to perform highly varied SQL calls to produce your data, to use a Model which supports Model factories.</p>
 
Index: names.xhtml
===================================================================
RCS file: /cvs/Twisted/doc/howto/names.xhtml,v
retrieving revision 1.1
diff -u -r1.1 names.xhtml
--- names.xhtml	8 Oct 2003 10:22:04 -0000	1.1
+++ names.xhtml	11 Oct 2003 18:20:12 -0000
@@ -1,8 +1,13 @@
-<html><head><title>Creating and working with a names (DNS) server</title></head>
+<?xml version="1.0" encoding="utf-8"?>
+<!DOCTYPE html PUBLIC
+    "-//W3C//DTD XHTML 1.0 Strict//EN"
+    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
+<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
+<head><title>Creating and working with a names (DNS) server</title></head>
 <body>
 <h1>Creating and working with a names (DNS) server</h1>
 
-<p>A Names server can be perform three basic operations:
+<p>A Names server can be perform three basic operations:</p>
 <ul>
 <li>act as a recursive server, forwarding queries to other servers</li>
 <li>perform local caching of recursively discovered records</li>
@@ -10,6 +15,7 @@
 </ul>
 
 <h3>Creating a non-authoritative server</h3>
+<p>
 The first two of these are easy, and you can create a server that performs
 them with the command <code class="shell">mktap dns --recursive
 --cache</code>, or launch <code class="shell">tkmktap</code> and configure a
@@ -33,7 +39,8 @@
 <code>example-domain.com</code>, we first create a 
 zone file for this domain.</p>
 
-<a href="listings/names/example-domain.com" class="py-listing">Zone file</a>
+<p><a href="listings/names/example-domain.com" class="py-listing">Zone
+file</a></p>
 	
 <p>Next, run the command <code class="shell">mktap dns --pyzone
 example-domain.com</code>, and then (as above) <code class="shell">twistd -f
Index: newcred.xhtml
===================================================================
RCS file: /cvs/Twisted/doc/howto/newcred.xhtml,v
retrieving revision 1.2
diff -u -r1.2 newcred.xhtml
--- newcred.xhtml	11 Oct 2003 14:58:26 -0000	1.2
+++ newcred.xhtml	11 Oct 2003 18:20:14 -0000
@@ -1,7 +1,8 @@
-<?xml version="1.0"?>
-<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
-    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
-<html xmlns="http://www.w3.org/1999/xhtml">
+<?xml version="1.0" encoding="utf-8"?>
+<!DOCTYPE html PUBLIC
+    "-//W3C//DTD XHTML 1.0 Strict//EN"
+    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
+<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
   <head>
     <title>New Cred: Authentication for the 24th Century</title>
   </head>
Index: options.xhtml
===================================================================
RCS file: /cvs/Twisted/doc/howto/options.xhtml,v
retrieving revision 1.1
diff -u -r1.1 options.xhtml
--- options.xhtml	8 Oct 2003 10:22:05 -0000	1.1
+++ options.xhtml	11 Oct 2003 18:20:15 -0000
@@ -1,8 +1,8 @@
-<?xml version="1.0"?>
-<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
-    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
-
-<html xmlns="http://www.w3.org/1999/xhtml">
+<?xml version="1.0" encoding="utf-8"?>
+<!DOCTYPE html PUBLIC
+    "-//W3C//DTD XHTML 1.0 Strict//EN"
+    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
+<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
   <head>
     <title>Using usage.Options</title>
   </head>
Index: overview.xhtml
===================================================================
RCS file: /cvs/Twisted/doc/howto/overview.xhtml,v
retrieving revision 1.1
diff -u -r1.1 overview.xhtml
--- overview.xhtml	8 Oct 2003 10:22:05 -0000	1.1
+++ overview.xhtml	11 Oct 2003 18:20:15 -0000
@@ -1,15 +1,15 @@
-<?xml version="1.0"?>
-<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
-    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
-
-<html xmlns="http://www.w3.org/1999/xhtml">
+<?xml version="1.0" encoding="utf-8"?>
+<!DOCTYPE html PUBLIC
+    "-//W3C//DTD XHTML 1.0 Strict//EN"
+    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
+<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
   <head>
     <title>High-Level Overview of Twisted</title>
   </head>
 
   <body>
     <h1>High-Level Overview of Twisted</h1>
-    <img src="../img/twisted-overview.png" />
+    <p><img src="../img/twisted-overview.png" alt="Twisted Overview" /></p>
   </body>
 </html>
 
Index: pageindepth.xhtml
===================================================================
RCS file: /cvs/Twisted/doc/howto/pageindepth.xhtml,v
retrieving revision 1.2
diff -u -r1.2 pageindepth.xhtml
--- pageindepth.xhtml	10 Oct 2003 04:31:03 -0000	1.2
+++ pageindepth.xhtml	11 Oct 2003 18:20:17 -0000
@@ -1,4 +1,9 @@
-<html><head><title>Page In Depth</title></head><body>
+<?xml version="1.0" encoding="utf-8"?>
+<!DOCTYPE html PUBLIC
+    "-//W3C//DTD XHTML 1.0 Strict//EN"
+    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
+<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
+<head><title>Page In Depth</title></head><body>
 
 <h1>Page In Depth</h1>
 
@@ -23,7 +28,7 @@
   located in the template during the rendering process.</li>
 </ul>
 
-<h2>Root Models</h2><a name="rootmodels" />
+<h2 id="rootmodels">Root Models</h2>
 
   <p>A Root Model is the base of a Woven Model tree. All Model data that the Page will use for rendering should be made available through this Model. Any Python object can be used as a Model within Woven, even Dictionaries, Lists, Strings, Integers, and Floats. This is accomplished through the use of IModel adapters, which normalize Model access methods.</p>
 
@@ -41,7 +46,7 @@
 
 <p>Using a Page object as a Model factory (by not passing a Root Model) is discussed below in <a href="#factories">Factories</a>.</p>
 
-<h2>Templates</h2><a name="templates" />
+<h2 id="templates">Templates</h2>
 
   <p>The Template a page will render can be specified in various ways.</p>
 
@@ -90,7 +95,7 @@
 
 <p>How you manage your templates is up to you.</p>
 
-<h2>Child Pages</h2><a name="children" />
+<h2 id="children">Child Pages</h2>
 
   <p>As discussed in the <a href="using-twistedweb.xhtml">Twisted Web</a> section of the documentation, Resource objects provide access to their children by providing a getChild method which returns the next Resource object in the URL tree. Woven Page instances implement IResource and thus follow the same rules as any other Resource instance.</p>
 
@@ -141,7 +146,7 @@
     template = "&lt;html&gt;No slash for you!&lt;/html&gt;"
 </pre>
 
-<h2>Factories</h2><a name="factories" />
+<h2 id="factories">Factories</h2>
 
 <p>So far, we have observed the use of the special <code>model=</code>,
 <code>view=</code>, and <code>controller=</code> attributes (<q>directives</q>)
@@ -159,7 +164,7 @@
 
 </ol>
 
-<h3>View factories</h3><a name="viewfactories" />
+<h3 id="viewfactories">View factories</h3>
   
     <p>When a view directive is encountered in a Woven template, it is translated into a <code>wvfactory_</code> call. For example, the node <code>&lt;div view="cool" /&gt;</code> will cause the method <code>wvfactory_cool</code> to be called on your Page instance. View factories are methods which have the following signature, and must return an IView implementor:</p>
 
@@ -200,7 +205,7 @@
 
     <p>Note that if an appropriately named View factory is not found on your page class, Woven will look for the name in the <code>widgets</code> module before giving up and raising an exception. This is why we have been able to create templates that have nodes like <code>&lt;div view="Text" /&gt;</code> and <code>&lt;div view="List" /&gt;</code> without getting exceptions.</p>
 
-<h3>Controller factories</h3><a name="controllerfactories" />
+<h3 id="controllerfactories">Controller factories</h3>
 
     <p>When a controller directive is encountered in a Woven template, it is translated into a <code>wcfactory_</code> call. For example, the node <code>&lt;input type="text" name="foo" controller="number" /&lt;</code> will cause the method <code>wcfactory_number</code> to be called on your Page instance. Controller factories are methods which have the following signature, and must return an IController implementor:</p>
 
@@ -215,7 +220,7 @@
 
     <p>Note that if an appropriately named Controller factory is not found on your page class, Woven will look for the name in the <code>input</code> module before giving up and raising an exception.</p>
 
-<h3>Model factories</h3><a name="modelfactories" />
+<h3 id="modelfactories">Model factories</h3>
     
     <p>If your Page instance is passed a Root Model composed of basic python types, Woven is able to use IModel adapters to allow your Template to access the entire Model tree automatically. However, often it can be useful to produce your model data in some sort of method call which retrieves the data.</p>
 
Index: pb-copyable.xhtml
===================================================================
RCS file: /cvs/Twisted/doc/howto/pb-copyable.xhtml,v
retrieving revision 1.2
diff -u -r1.2 pb-copyable.xhtml
--- pb-copyable.xhtml	10 Oct 2003 04:31:03 -0000	1.2
+++ pb-copyable.xhtml	11 Oct 2003 18:20:19 -0000
@@ -1,7 +1,11 @@
-<html xmlns="http://www.w3.org/1999/xhtml">
+<?xml version="1.0" encoding="utf-8"?>
+<!DOCTYPE html PUBLIC
+    "-//W3C//DTD XHTML 1.0 Strict//EN"
+    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
+<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
 <head>
 <title>PB Copyable: Passing Complex Types</title>
-<style src="stylesheet-unprocessed.css"></style>
+<style src="stylesheet-unprocessed.css" type="text/css"></style>
 </head>
 
 <body>
@@ -115,9 +119,9 @@
 
 <p>PB lets you specify the mapping from remote class names to local classes
 with the <code class="API"
-base="twisted.spread.jelly">setUnjellyableForClass</code> function<!--
+base="twisted.spread.jelly">setUnjellyableForClass</code> function</p>
 
---><span class="footnote"> <p>Note that, in this context, <q>unjelly</q> is
+<p><span class="footnote">Note that, in this context, <q>unjelly</q> is
 a verb with the opposite meaning of <q>jelly</q>. The verb <q>to jelly</q>
 means to serialize an object or data structure into a sequence of bytes (or
 other primitive transmittable/storable representation), while <q>to
@@ -128,17 +132,17 @@
 that a serialized representation A (of some remote object) can be
 unserialized into a local object of type B. It is these objects <q>B</q>
 that are the <q>Unjellyable</q> second argument of the
-<code>setUnjellyableForClass</code> function.</p>
+<code>setUnjellyableForClass</code> function.</span></p>
 
-<p>In particular, <q>unjellyable</q> does <em>not</em> mean <q>cannot be
+<p><span class="footnote">In particular, <q>unjellyable</q> does <em>not</em> mean <q>cannot be
 jellied</q>. <code class="API"
 base="twisted.spread.jelly">Unpersistable</code> means <q>not
 persistable</q>, but <q>unjelly</q>, <q>unserialize</q>, and <q>unpickle</q>
 mean to reverse the operations of <q>jellying</q>, <q>serializing</q>, and
-<q>pickling</q>.</p> </span>.
+<q>pickling</q>.</span></p>
 
 
-This function takes a remote/sender class reference (either the
+<p>This function takes a remote/sender class reference (either the
 fully-qualified name as used by the sending end, or a class object from
 which the name can be extracted), and a local/recipient class (used to
 create the local representation for incoming serialized objects). Whenever
@@ -167,8 +171,10 @@
 <p>Ok, enough of this theory. How do you send a fully-fledged object from
 one side to the other?</p>
 
+<p>
 <a href="listings/pb/copy_sender.py" class="py-listing">copy_sender.py</a>
 <a href="listings/pb/copy_receiver.py" class="py-listing">copy_receiver.py</a>
+</p>
 
 <p>The sending side has a class called <code>LilyPond</code>. To make this
 eligble for transport through <code>callRemote</code> (either as an
@@ -271,10 +277,11 @@
 whatever comes over the wire and is responsible for setting up the state of
 the object it lives in.</p>
 
-
+<p>
 <a href="listings/pb/copy2_classes.py" class="py-listing">copy2_classes.py</a>
 <a href="listings/pb/copy2_sender.py" class="py-listing">copy2_sender.py</a>
 <a href="listings/pb/copy2_receiver.py" class="py-listing">copy2_receiver.py</a>
+</p>
 
 <p>In this example, the classes are defined in a separate source file, which
 also sets up the binding between them. The <code>SenderPond</code> and
@@ -478,9 +485,12 @@
 controlled by the sending side, and the <code>SlaveDuckPond</code> is a
 cache that tracks changes to the master:</p>
 
+<p>
 <a href="listings/pb/cache_classes.py" class="py-listing">cache_classes.py</a>
 <a href="listings/pb/cache_sender.py" class="py-listing">cache_sender.py</a>
 <a href="listings/pb/cache_receiver.py" class="py-listing">cache_receiver.py</a>
+</p>
+
 <p>When run, this example emits the following:</p>
 
 <pre class="shell">
Index: pb-cred.xhtml
===================================================================
RCS file: /cvs/Twisted/doc/howto/pb-cred.xhtml,v
retrieving revision 1.2
diff -u -r1.2 pb-cred.xhtml
--- pb-cred.xhtml	10 Oct 2003 04:31:03 -0000	1.2
+++ pb-cred.xhtml	11 Oct 2003 18:20:21 -0000
@@ -1,13 +1,12 @@
-<?xml version="1.0"?>
-<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
-    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
-
-<html xmlns="http://www.w3.org/1999/xhtml">
-
+<?xml version="1.0" encoding="utf-8"?>
+<!DOCTYPE html PUBLIC
+    "-//W3C//DTD XHTML 1.0 Strict//EN"
+    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
+<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
 <head>
 <title>Authentication with Perspective Broker</title>
 
-<style src="stylesheet-unprocessed.css"></style>
+<style src="stylesheet-unprocessed.css" type="text/css"></style>
 
 </head>
 
@@ -233,8 +232,10 @@
 details that are useful here to explain what's going on. Again, this will make
 more sense later.</p></div>
 
+<p>
 <a href="listings/pb/pb5server.py" class="py-listing">pb5server.py</a>
 <a href="listings/pb/pb5client.py" class="py-listing">pb5client.py</a>
+</p>
 
 <p>Note that once this example has done the method call, you'll have to
 terminate both ends yourself. Also note that the Perspective's
@@ -299,16 +300,18 @@
 
 </div>
 
+<p>
 <a href="listings/pb/pb6server.py" class="py-listing">pb6server.py</a>
 <a href="listings/pb/pb6client1.py" class="py-listing">pb6client1.py</a>
 <a href="listings/pb/pb6client2.py" class="py-listing">pb6client2.py</a>
+</p>
 
 <p>While pb6server.py is running, try starting pb6client1, then pb6client2.
 Compare the argument passed by the <code>.callRemote()</code> in each
 client. You can see how each client logs into a different Perspective.</p>
 
 
-<h2>Class Overview</h2><a name="overview" />
+<h2 id="overview">Class Overview</h2>
 
 <p>Now that we've seen some of the motivation behind the Perspective class,
 let's start to de-mystify some of the parts labeled <q>magic</q> in
@@ -403,7 +406,7 @@
 </p>
 
 
-<h2>Class Responsibilities</h2><a name="responsibilities" />
+<h2 id="responsibilities">Class Responsibilities</h2>
 
 <p>Now that we've gone over the classes and objects involved, let's look at
 the specific responsibilities of each. Most of these classes are on the hook
@@ -413,7 +416,7 @@
 they get called.</p>
 
 
-<h3>Authorizer</h3><a name="responsibilities/authorizer" />
+<h3 id="responsibilitiesauthorizer">Authorizer</h3>
 
 <p>The <code>Authorizer</code> has to provide <code>Identity</code> objects
 (requested by name) by implementing <code>.getIdentityRequest()</code>. The
@@ -448,7 +451,7 @@
 outdated concept)</p>
 </div>
 
-<h3>Identity</h3><a name="responsibilities/identity" />
+<h3 id="responsibilitiesidentity">Identity</h3>
 
 <p>The <code>Identity</code> object thus returned has two responsibilities.
 The first is to authenticate the user, because so far they are unverified:
@@ -505,7 +508,7 @@
 </pre>
 
 
-<h3>Service</h3><a name="responsibilities/service" />
+<h3 id="responsibilitiesservice">Service</h3>
 
 <p>The <code class="API" base="twisted.cred.service">Service</code> object's
 job is to provide <code>Perspective</code> instances, by implementing
@@ -537,7 +540,7 @@
 <code>Perspective</code>s that it contains.</p>
 
 
-<h2>How that example worked</h2><a name="smallexample" />
+<h2 id="smallexample">How that example worked</h2>
 
 <p>Ok, so that's what everything is supposed to do. Now you can walk through
 the previous example and see what was going on: we created a subclass called
@@ -591,7 +594,7 @@
 </div>
 
 
-<h2>Code Walkthrough: pb.PBClientFactory</h2><a name="walkthrough" />
+<h2 id="walkthrough">Code Walkthrough: pb.PBClientFactory</h2>
 
 <p>So, now that you've seen the complete sequence, it's time for a code
 walkthrough. This will give you a chance to see the places where you might
@@ -695,7 +698,7 @@
 etc.</p>
 
 
-<h2>A Larger Example</h2><a name="bigexample" />
+<h2 id="bigexample">A Larger Example</h2>
 
 <p>Now it's time to look more closely at the Go server described before.</p>
 
Index: pb-intro.xhtml
===================================================================
RCS file: /cvs/Twisted/doc/howto/pb-intro.xhtml,v
retrieving revision 1.1
diff -u -r1.1 pb-intro.xhtml
--- pb-intro.xhtml	8 Oct 2003 10:22:05 -0000	1.1
+++ pb-intro.xhtml	11 Oct 2003 18:20:21 -0000
@@ -1,7 +1,11 @@
-<html xmlns="http://www.w3.org/1999/xhtml">
+<?xml version="1.0" encoding="utf-8"?>
+<!DOCTYPE html PUBLIC
+    "-//W3C//DTD XHTML 1.0 Strict//EN"
+    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
+<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
 <head>
 <title>Introduction to Perspective Broker</title>
-<style src="stylesheet-unprocessed.css"></style>
+<style src="stylesheet-unprocessed.css" type="text/css"></style>
 </head>
 
 <body>
@@ -165,7 +169,7 @@
 is transformed
 into a local method call on the server.  In order to use one of these
 <q>flavors</q>, subclass them and name your published methods with the
-appropriate prefix.
+appropriate prefix.</p>
 
 <ul>
   <li><code class="API">twisted.spread.pb.Perspective</code>
@@ -218,8 +222,6 @@
   
 </ul>
 
-</p>
-
 <h2>Things you can Copy Remotely</h2>
 
 <p>In addition to returning objects that you can call remote methods on, you
@@ -231,7 +233,6 @@
 <code class="python">__getstate__</code> or specialized method calls for that
 flavor.</p>
 
-<p>
 <ul>
   <li><code class="API">twisted.spread.flavors.Copyable</code>
   
@@ -254,7 +255,7 @@
   actually be copied, you must declare a <code class="python">RemoteCopy</code>
   handler for
   that Copyable subclass.  The easiest way to do this is to declare both in the
-  same module, like so:
+  same module, like so:</p>
 
   <pre class="python">
 from twisted.spread import flavors
@@ -265,6 +266,7 @@
 flavors.setCopierForClass(str(Foo), RemoteFoo)
   </pre>
   
+  <p>
   In this case, each time a Foo is copied between peers, a RemoteFoo will be
   instantiated and populated with the Foo's state.  If you do not do this, PB
   will complain that there have been security violations, and it may close the
@@ -331,6 +333,5 @@
   Any further calls to this observer object will be invalid.</p>
   </li>
 </ul>
-</p>
 
 </body></html>
Index: pb-usage.xhtml
===================================================================
RCS file: /cvs/Twisted/doc/howto/pb-usage.xhtml,v
retrieving revision 1.2
diff -u -r1.2 pb-usage.xhtml
--- pb-usage.xhtml	10 Oct 2003 04:31:03 -0000	1.2
+++ pb-usage.xhtml	11 Oct 2003 18:20:25 -0000
@@ -1,7 +1,11 @@
-<html xmlns="http://www.w3.org/1999/xhtml">
+<?xml version="1.0" encoding="utf-8"?>
+<!DOCTYPE html PUBLIC
+    "-//W3C//DTD XHTML 1.0 Strict//EN"
+    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
+<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
 <head>
 <title>Using Perspective Broker</title>
-<style src="stylesheet-unprocessed.css"></style>
+<style src="stylesheet-unprocessed.css" type="text/css"></style>
 </head>
 
 <body>
@@ -13,10 +17,11 @@
 application. It uses <code>BrokerFactory()</code> on the server side, and
 <code>PBClientFactory()</code> on the client side.</p>
 
-<a href="../examples/pbsimple.py" class="py-listing" skipLines="16"
+<p><a href="../examples/pbsimple.py" class="py-listing" skipLines="16"
 >pbsimple.py</a>
 <a href="../examples/pbsimpleclient.py" class="py-listing" skipLines="16"
 >pbsimpleclient.py</a>
+</p>
 
 <p>First we look at the server. This defines an Echoer class (derived from
 <code class="API" base="twisted.spread">pb.Root</code>), with a method called
@@ -161,8 +166,8 @@
 have methods that you can call, as well as copies of objects, as described
 later. </p>
 
-<a href="listings/TwistedQuotes/pbquote.py" class="py-listing">Quote Service
-and Perspective</a>
+<p><a href="listings/TwistedQuotes/pbquote.py" class="py-listing">Quote Service
+and Perspective</a></p>
 
 <p>For examples of these, we're returning to the TwistedQuotes project
 discussed in the <q>Writing Plugins</q>.  The PB <code
@@ -182,8 +187,8 @@
 Application that has a PB broker factory listening on a port.  (The default
 port for PB is 8787.)  </p>
 
-<a href="listings/TwistedQuotes/quotetap2.py" class="py-listing">TAP Plugin
-with PB Quotes Service support</a>
+<p><a href="listings/TwistedQuotes/quotetap2.py" class="py-listing">TAP Plugin
+with PB Quotes Service support</a></p>
 
 <p>In the TAP builder, we create a <code class="python">QuoteService</code>
 that wraps the quoter.  We then create a 
@@ -197,8 +202,8 @@
 <code class="API" base="twisted.spread">pb.PBClientFactory.getPerspective</code>
 method.</p>
 
-<a href="listings/TwistedQuotes/pbquoteclient.py" class="py-listing">PB Quotes
-Client Code</a>
+<p><a href="listings/TwistedQuotes/pbquoteclient.py" class="py-listing">PB Quotes
+Client Code</a></p>
 
 <p><code class="API" base="twisted.spread">pb.PBClientFactory.getPerspective</code> 
 will handle all the details of waiting for the creation of a
@@ -256,9 +261,10 @@
 example, the initial root object has a method that returns a reference to the
 second object.</p>
 
-
+<p>
 <a href="listings/pb/pb1server.py" class="py-listing">pb1server.py</a>
 <a href="listings/pb/pb1client.py" class="py-listing">pb1client.py</a>
+</p>
 
 <p>The root object has a method called <code>remote_getTwo</code>, which
 returns the <code>Two()</code> instance. On the client end, the callback gets a
@@ -295,8 +301,9 @@
 your great aunt owned and which nobody wants but which nobody can bear to throw
 out. Ok, not really like that, but you get the idea.</span>.</p>
 
-<a href="listings/pb/pb2server.py" class="py-listing">pb2server.py</a>
+<p><a href="listings/pb/pb2server.py" class="py-listing">pb2server.py</a>
 <a href="listings/pb/pb2client.py" class="py-listing">pb2client.py</a>
+</p>
 
 <p>The server gives a <code>Two()</code> instance to the client, who then
 returns the reference back to the server. The server compares the <q>two</q>
@@ -335,8 +342,10 @@
 <q>server</q>: the only real difference is who initiates the original TCP
 connection; after that it's all symmetric.</p>
 
+<p>
 <a href="listings/pb/pb3server.py" class="py-listing">pb3server.py</a>
 <a href="listings/pb/pb3client.py" class="py-listing">pb3client.py</a>
+</p>
 
 <p>In this example, the client gives a reference to its own object to the
 server. The server then invokes a remote method on the client-side
@@ -383,8 +392,10 @@
 exception occurred in somebody else's memory space at some unknown time in
 the past.</p>
 
+<p>
 <a href="listings/pb/exc_server.py" class="py-listing">exc_server.py</a>
 <a href="listings/pb/exc_client.py" class="py-listing">exc_client.py</a>
+</p>
 
 <pre class="shell">
 % ./exc_client.py 
@@ -443,8 +454,10 @@
 <code>Deferred</code>. The <code>trap</code> calls are used in chained
 errbacks to test for each kind of exception in sequence. </p>
 
+<p>
 <a href="listings/pb/trap_server.py" class="py-listing">trap_server.py</a>
 <a href="listings/pb/trap_client.py" class="py-listing">trap_client.py</a>
+</p>
 
 <pre class="shell">
 % ./trap_client.py 
@@ -470,25 +483,25 @@
 know which local class ought to be used to create an instance that
 corresponds to the remote object<!--   eat breaking space
 
---><span class="footnote"><p>The naive approach of simply doing <code>import
+--></p><p><span class="footnote">The naive approach of simply doing <code>import
 SomeClass</code> to match a remote caller who claims to have an object of
 type <q>SomeClass</q> could have nasty consequences for some modules that do
 significant operations in their <code>__init__</code> methods (think
 <code>telnetlib.Telnet(host='localhost', port='chargen')</code>, or even
 more powerful classes that you have available in your server program).
 Allowing a remote entity to create arbitrary classes in your namespace is
-nearly equivalent to allowing them to run arbitrary code.</p>
+nearly equivalent to allowing them to run arbitrary code.</span></p>
 
-<p>The <code class="API" base="twisted.spread">pb.InsecureJelly</code>
+<p><span class="footnote">The <code class="API" base="twisted.spread">pb.InsecureJelly</code>
 exception arises because the class being sent over the wire has not been
 registered with the serialization layer (known as <code class="API"
 base="twisted.spread">jelly</code>). The easiest way to make it possible to
 copy entire class instances over the wire is to have them inherit from <code
 class="API" base="twisted.spread">pb.Copyable</code>, and then to use
 <code>setUnjellyableForClass(remoteClass, localClass)</code> on the
-receiving side. See XXX for an example.</p></span>.
+receiving side. See XXX for an example.</span></p>
 
-The receiving end of the connection gets to decide what to accept and what
+<p>The receiving end of the connection gets to decide what to accept and what
 to reject. It indicates its disapproval by raising a <code class="API"
 base="twisted.spread">pb.InsecureJelly</code> exception. Because it occurs
 at the remote end, the exception is returned to the caller asynchronously,
Index: pb.xhtml
===================================================================
RCS file: /cvs/Twisted/doc/howto/pb.xhtml,v
retrieving revision 1.1
diff -u -r1.1 pb.xhtml
--- pb.xhtml	8 Oct 2003 10:22:05 -0000	1.1
+++ pb.xhtml	11 Oct 2003 18:20:25 -0000
@@ -1,8 +1,12 @@
-<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
-<html> <head>
+<?xml version="1.0" encoding="utf-8"?>
+<!DOCTYPE html PUBLIC
+    "-//W3C//DTD XHTML 1.0 Strict//EN"
+    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
+<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
+<head>
 <title>Overview of Twisted Spread</title>
 
-<style src="stylesheet-unprocessed.css"></style>
+<style src="stylesheet-unprocessed.css" type="text/css"></style>
 
 </head>
 
Index: pclients.xhtml
===================================================================
RCS file: /cvs/Twisted/doc/howto/pclients.xhtml,v
retrieving revision 1.2
diff -u -r1.2 pclients.xhtml
--- pclients.xhtml	10 Oct 2003 04:31:03 -0000	1.2
+++ pclients.xhtml	11 Oct 2003 18:20:25 -0000
@@ -1,4 +1,8 @@
-<html xmlns="http://www.w3.org/1999/xhtml">
+<?xml version="1.0" encoding="utf-8"?>
+<!DOCTYPE html PUBLIC
+    "-//W3C//DTD XHTML 1.0 Strict//EN"
+    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
+<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
 <head>
 <title>Managing Clients of Perspectives</title>
 <link rel="author" href="http://twistedmatrix.com/users/acapnotic/" title="Kevin Turner" />
@@ -52,9 +56,9 @@
 <div class="doit"><p>explain or point to how clients get attached to
 perspectives (pb.connect, guard(?)).</p></div>
 
-<h2>Clientless Perspective</h2><a name="clientless" />
+<h2 id="clientless">Clientless Perspective</h2>
 
-<a href="listings/pclients/clientless.py" class="py-listing" >clientless.py</a>
+<p><a href="listings/pclients/clientless.py" class="py-listing">clientless.py</a></p>
 
 <p>Needless to say, the <code>ClientlessPerspective</code> is not ideal for
 all applications.  A common model for network applications is to have the
@@ -67,20 +71,22 @@
 methods which are called with references to clients connecting or disconnecting
 from the service.</p>
 
-<h2>Single Client</h2><a name="singleClient" />
+<h2 id="singleClient">Single Client</h2>
 
-<a href="listings/pclients/single.py" class="py-listing" >single.py</a>
+<p><a href="listings/pclients/single.py" class="py-listing" >single.py</a></p>
 
 <p>Here's a more complex example, using the more specialized <code
 class="API" base="twisted.spread.pb.Perspective">brokerAttached</code>
 method of Perspective Broker.</p>
 
-<a href="listings/pclients/single-pb.py" class="py-listing" >single-pb.py</a>
+<p><a href="listings/pclients/single-pb.py" class="py-listing"
+>single-pb.py</a></p>
 
-<a name="singleClientKick" /><p>Here's an example which attempts to enforce
+<p id="singleClientKick">Here's an example which attempts to enforce
 the single-client limit in a different manner:</p>
 
-<a href="listings/pclients/single-kick.py" class="py-listing" >single-kick.py</a>
+<p><a href="listings/pclients/single-kick.py" class="py-listing"
+>single-kick.py</a></p>
 
 <p>What do we learn?</p>
 
@@ -119,11 +125,12 @@
   you'll just have to accommodate them both. Which leads us to...</li>
 </ul>
 
-<h2>Multiple Client</h2><a name="multiClient" />
+<h2 id="multiClient">Multiple Client</h2>
 
-<a href="listings/pclients/multiple.py" class="py-listing" >multiple.py</a>
+<p><a href="listings/pclients/multiple.py" class="py-listing"
+>multiple.py</a></p>
 
-<h2>Anonymous Clients</h2><a name="anonymous" />
+<h2 id="anonymous">Anonymous Clients</h2>
 
 <p>Last item on the list: Anonymous perspectives.  One way to do
 it would be to use a <code >ClientlessPerspective</code> or <code
@@ -132,7 +139,8 @@
 can interfere with any other.  Another way to do it, without that restriction,
 would be to use disposable Perspectives:</p>
 
-<a href="listings/pclients/unattachable.py" class="py-listing" >unattachable.py</a>
+<p><a href="listings/pclients/unattachable.py" class="py-listing"
+>unattachable.py</a></p>
 
 <p>If you wanted to have <em>all</em> access to a Service be
 anonymous, you could make a service like this:</p>
Index: picturepile.xhtml
===================================================================
RCS file: /cvs/Twisted/doc/howto/picturepile.xhtml,v
retrieving revision 1.3
diff -u -r1.3 picturepile.xhtml
--- picturepile.xhtml	11 Oct 2003 14:43:27 -0000	1.3
+++ picturepile.xhtml	11 Oct 2003 18:20:26 -0000
@@ -1,8 +1,8 @@
-<?xml version="1.0"?>
-<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
-    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
-
-<html xmlns="http://www.w3.org/1999/xhtml">
+<?xml version="1.0" encoding="utf-8"?>
+<!DOCTYPE html PUBLIC
+    "-//W3C//DTD XHTML 1.0 Strict//EN"
+    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
+<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
 <head>
 <title>PicturePile: a tutorial Woven application</title>
 </head>
@@ -169,7 +169,7 @@
 &lt;/html&gt;
 </pre>
 
-And here is the definition of <code>ImageDisplay</code>:
+<p>And here is the definition of <code>ImageDisplay</code>:</p>
 
 <pre class="python">
 from twisted.web import static
@@ -264,7 +264,8 @@
 be nicer if one could adjust it. Let's add a list of thumbnail sizes to the
 directory listing. Again, we start with the template:</p>
 
-<a href="listings/PicturePile/directory-listing3.html" class="html-listing">directory-listing3.html</a>
+<p><a href="listings/PicturePile/directory-listing3.html"
+class="html-listing">directory-listing3.html</a></p>
 
 <p>This time, we add a form with a list of thumbnail sizes named
 <code>thumbnailSize</code>: we want the form to reflect the selected option, so
@@ -386,7 +387,8 @@
 concerned with the input from the <code>&lt;select&gt;</code> element of the
 form, we place the controller upon it:</p>
 
-<a href="listings/PicturePile/directory-listing4.html" class="html-listing">directory-listing4.html</a>
+<p><a href="listings/PicturePile/directory-listing4.html"
+class="html-listing">directory-listing4.html</a></p>
 
 <p>Now, the selected size will be remembered across subdirectories and
 page reloads.</p>
Index: plugin.xhtml
===================================================================
RCS file: /cvs/Twisted/doc/howto/plugin.xhtml,v
retrieving revision 1.2
diff -u -r1.2 plugin.xhtml
--- plugin.xhtml	10 Oct 2003 04:31:03 -0000	1.2
+++ plugin.xhtml	11 Oct 2003 18:20:29 -0000
@@ -1,5 +1,9 @@
-<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
-<html> <head>
+<?xml version="1.0" encoding="utf-8"?>
+<!DOCTYPE html PUBLIC
+    "-//W3C//DTD XHTML 1.0 Strict//EN"
+    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
+<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
+<head>
 <title>Writing a New Plug-In for mktap</title>
 </head>
 
@@ -153,6 +157,7 @@
 
 <p>
 <code class="shell">plugins.tml</code> will be a list of calls to one function:
+</p>
 <pre class="python" hlint="off">
 register(name, module, type=plugin_type,
          description=user_description
@@ -179,7 +184,6 @@
     types may require a specific bit of data in order to work.</li>
     
   </ul>
-  </p>
 
 <p>Note the <code class="py-src-parameter">tapname</code> parameter given in
 the example above.  This parameter is an example of <code
@@ -252,8 +256,8 @@
 class="shell">quoters.py</code> in your <code
 class="shell">TwistedQuotes</code> directory.)</p>
 
-<a href="listings/TwistedQuotes/quoters.py" class="py-listing">Twisted Quotes
-Central Abstraction</a>
+<p><a href="listings/TwistedQuotes/quoters.py" class="py-listing">Twisted Quotes
+Central Abstraction</a></p>
 
 <p>This code listing shows us what the Twisted Quotes system is all about.  The
 code doesn't have any way of talking to the outside world, but it provides a
@@ -294,8 +298,8 @@
 class="shell">quoteproto.py</code> in your <code
 class="shell">TwistedQuotes</code> directory.)</p>
 
-<a href="listings/TwistedQuotes/quoteproto.py" class="py-listing">Twisted
-Quotes Protocol Implementation</a>
+<p><a href="listings/TwistedQuotes/quoteproto.py" class="py-listing">Twisted
+Quotes Protocol Implementation</a></p>
 
 <p>This is a very straightforward <code>Protocol</code> implementation, and the
 pattern described above is repeated here.  The Protocol contains essentially no
@@ -344,8 +348,8 @@
 class="shell">quotetap.py</code> in your <code
 class="shell">TwistedQuotes</code> directory.)</p>
 
-<a href="listings/TwistedQuotes/quotetap.py" class="py-listing">Twisted Quotes
-TAP construction module</a>
+<p><a href="listings/TwistedQuotes/quotetap.py" class="py-listing">Twisted Quotes
+TAP construction module</a></p>
 
 <p>This module has to conform to a fairly simple interface.  It must have a
 class called <code class="python">Options</code> which is a subclass of <code
@@ -373,8 +377,8 @@
 them together by writing a TML file which allows the <code
 class="shell">mktap</code> utility to find our protocol module.</p>
 
-<a href="listings/TwistedQuotes/plugins.tml" class="py-listing">Twisted Quotes
-Plug-in registration</a>
+<p><a href="listings/TwistedQuotes/plugins.tml" class="py-listing">Twisted Quotes
+Plug-in registration</a></p>
 
 <p>Now the QOTD server is ready to be instantiated!  Let's start up a server
 and get a quote from it.</p>
Index: process.xhtml
===================================================================
RCS file: /cvs/Twisted/doc/howto/process.xhtml,v
retrieving revision 1.1
diff -u -r1.1 process.xhtml
--- process.xhtml	8 Oct 2003 10:22:05 -0000	1.1
+++ process.xhtml	11 Oct 2003 18:20:29 -0000
@@ -1,8 +1,8 @@
-<?xml version="1.0"?>
-<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
-    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
-
-<html xmlns="http://www.w3.org/1999/xhtml">
+<?xml version="1.0" encoding="utf-8"?>
+<!DOCTYPE html PUBLIC
+    "-//W3C//DTD XHTML 1.0 Strict//EN"
+    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
+<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
   <head>
     <title>Using Processes</title>
   </head>
@@ -14,13 +14,12 @@
 
 <p>Along with connection to servers across the internet, Twisted also
 connects to local processes with much the same API. The API is described in
-more detail in the documentation of:
+more detail in the documentation of:</p>
 <ul>
 <li><code class="API">twisted.internet.interfaces.IReactorProcess</code></li>
 <li><code class="API">twisted.internet.interfaces.IProcessTransport</code></li>
 <li><code class="API">twisted.internet.protocol.ProcessProtocol</code></li>
 </ul>
-</p>
 
     <h2>Running Another Process</h2>
 
@@ -234,7 +233,7 @@
 methods are called. It writes a number of lines into the <code>wc</code> program
 and then parses the output.</p>
 
-<a href="listings/process/process.py" class="py-listing">process.py</a>
+<p><a href="listings/process/process.py" class="py-listing">process.py</a></p>
 
 <p>The exact output of this program depends upon the relative timing of some
 un-synchronized events. In particular, the program may observe the child
@@ -262,13 +261,14 @@
 <code class="API">twisted.internet.utils.getProcessOutput</code>
 function can be used. Here is a simple example:</p>
 
-<a href="listings/process/quotes.py" class="py-listing">quotes.py</a>
+<p><a href="listings/process/quotes.py" class="py-listing">quotes.py</a></p>
 
 <p>If you need to get just the final exit code, the 
 <code class="API">twisted.internet.utils.getProcessValue</code>
 function is useful. Here is an example:</p>
 
-<a href="listings/process/trueandfalse.py" class="py-listing">trueandfalse.py</a>
+<p><a href="listings/process/trueandfalse.py"
+class="py-listing">trueandfalse.py</a></p>
 
   </body>
 </html>
Index: reactor-basics.xhtml
===================================================================
RCS file: /cvs/Twisted/doc/howto/reactor-basics.xhtml,v
retrieving revision 1.2
diff -u -r1.2 reactor-basics.xhtml
--- reactor-basics.xhtml	10 Oct 2003 04:31:03 -0000	1.2
+++ reactor-basics.xhtml	11 Oct 2003 18:20:29 -0000
@@ -1,8 +1,8 @@
-<?xml version="1.0"?>
-<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
-    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
-
-<html xmlns="http://www.w3.org/1999/xhtml">
+<?xml version="1.0" encoding="utf-8"?>
+<!DOCTYPE html PUBLIC
+    "-//W3C//DTD XHTML 1.0 Strict//EN"
+    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
+<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
   <head>
     <title>Reactor Basics</title>
   </head>
Index: release.xhtml
===================================================================
RCS file: /cvs/Twisted/doc/howto/release.xhtml,v
retrieving revision 1.1
diff -u -r1.1 release.xhtml
--- release.xhtml	8 Oct 2003 10:22:05 -0000	1.1
+++ release.xhtml	11 Oct 2003 18:20:29 -0000
@@ -1,4 +1,8 @@
-<html>
+<?xml version="1.0" encoding="utf-8"?>
+<!DOCTYPE html PUBLIC
+    "-//W3C//DTD XHTML 1.0 Strict//EN"
+    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
+<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
 <head>
 <title>Releasing Twisted</title>
 </head>
@@ -143,7 +147,6 @@
       (at) yahoo (dot) com</a></li>
   <li>FreeBSD (while Johann is busy): <a href="mailto:nbm (at) mithrandr (dot) moria (dot) org">nbm (at) mithrandr (dot) moria (dot) org</a></li>
   <li>Gentoo: <a href="mailto:lordvan (at) gentoo (dot) org">lordvan (at) gentoo (dot) org</a></li>
-  <li>RH9: <a href="mailto:alexander (dot) winston (at) comcast (dot) net">alexander (dot) winston (at) comcast (dot) net</a></li>
 </ul>
 
 <p>Stable</p>
Index: resource-templates.xhtml
===================================================================
RCS file: /cvs/Twisted/doc/howto/resource-templates.xhtml,v
retrieving revision 1.2
diff -u -r1.2 resource-templates.xhtml
--- resource-templates.xhtml	10 Oct 2003 04:31:03 -0000	1.2
+++ resource-templates.xhtml	11 Oct 2003 18:20:29 -0000
@@ -1,8 +1,8 @@
-<?xml version="1.0"?>
-<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
-    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
-
-<html xmlns="http://www.w3.org/1999/xhtml">
+<?xml version="1.0" encoding="utf-8"?>
+<!DOCTYPE html PUBLIC
+    "-//W3C//DTD XHTML 1.0 Strict//EN"
+    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
+<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
   <head>
     <title>Light Weight Templating With Resource Templates</title>
   </head>
@@ -54,7 +54,8 @@
 
 <p>Here is a simple example for a resource template.</p>
 
-<a href="listings/TwistedQuotes/webquote.rtl" class="py-listing">Resource Template for Quotes</a>
+<p><a href="listings/TwistedQuotes/webquote.rtl" class="py-listing">Resource
+Template for Quotes</a></p>
 
 </body>
 </html>
Index: roadmap.xhtml
===================================================================
RCS file: /cvs/Twisted/doc/howto/roadmap.xhtml,v
retrieving revision 1.1
diff -u -r1.1 roadmap.xhtml
--- roadmap.xhtml	8 Oct 2003 10:22:05 -0000	1.1
+++ roadmap.xhtml	11 Oct 2003 18:20:32 -0000
@@ -1,8 +1,8 @@
-<?xml version="1.0"?>
-<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
+<?xml version="1.0" encoding="utf-8"?>
+<!DOCTYPE html PUBLIC
+    "-//W3C//DTD XHTML 1.0 Strict//EN"
     "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
-
-<html xmlns="http://www.w3.org/1999/xhtml">
+<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
   <head>
     <title>The Road to API-stable Twisted</title>
 <style hlint="off" type="text/css">
@@ -12,9 +12,9 @@
 /*]]>*/
 </style>
   </head>
+  <body>
     <h1>The Road to API-stable Twisted</h1>
 
-  <body>
     <p>The maintainers on each of these packages are not
     necessarily the people who will be responsible for writing most
     of their code, although I've certainly tried to do that in most
@@ -24,7 +24,7 @@
     don't think you're the right person to maintain a package, let
     me know.</p>
 
-    <p hlint="off" align="right">--glyph</p>
+    <p hlint="off">--glyph</p>
 
     <table border="1" cellpadding="3">
       <tr>
Index: row.xhtml
===================================================================
RCS file: /cvs/Twisted/doc/howto/row.xhtml,v
retrieving revision 1.1
diff -u -r1.1 row.xhtml
--- row.xhtml	8 Oct 2003 10:22:05 -0000	1.1
+++ row.xhtml	11 Oct 2003 18:20:32 -0000
@@ -1,8 +1,8 @@
-<?xml version="1.0"?>
-<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
+<?xml version="1.0" encoding="utf-8"?>
+<!DOCTYPE html PUBLIC
+    "-//W3C//DTD XHTML 1.0 Strict//EN"
     "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
-
-<html xmlns="http://www.w3.org/1999/xhtml">
+<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
 <head>
   <title>Twisted Enterprise Row Objects</title>
 </head>
Index: servers.xhtml
===================================================================
RCS file: /cvs/Twisted/doc/howto/servers.xhtml,v
retrieving revision 1.2
diff -u -r1.2 servers.xhtml
--- servers.xhtml	10 Oct 2003 04:31:03 -0000	1.2
+++ servers.xhtml	11 Oct 2003 18:20:37 -0000
@@ -1,8 +1,8 @@
-<?xml version="1.0"?>
-<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
-    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
-
-<html xmlns="http://www.w3.org/1999/xhtml">
+<?xml version="1.0" encoding="utf-8"?>
+<!DOCTYPE html PUBLIC
+    "-//W3C//DTD XHTML 1.0 Strict//EN"
+    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
+<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
   <head>
     <title>Writing Servers</title>
   </head>
Index: telnet.xhtml
===================================================================
RCS file: /cvs/Twisted/doc/howto/telnet.xhtml,v
retrieving revision 1.1
diff -u -r1.1 telnet.xhtml
--- telnet.xhtml	8 Oct 2003 10:22:06 -0000	1.1
+++ telnet.xhtml	11 Oct 2003 18:20:38 -0000
@@ -1,4 +1,9 @@
-<html><head><title>Creating and working with a telnet server</title></head>
+<?xml version="1.0" encoding="utf-8"?>
+<!DOCTYPE html PUBLIC
+    "-//W3C//DTD XHTML 1.0 Strict//EN"
+    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
+<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
+<head><title>Creating and working with a telnet server</title></head>
 <body>
 <h1>Creating and working with a telnet server</h1>
 
@@ -142,7 +147,7 @@
 
 <p>Let's suppose that we have the following application:</p>
 
-<a href="listings/manhole/manhole1.py" class="py-listing">manhole1.py</a>
+<p><a href="listings/manhole/manhole1.py" class="py-listing">manhole1.py</a></p>
 
 <p>This will give us a basic quote-of-the-day server: running <code
 class="shell">telnet localhost 8123</code> will give us a quote. However,
@@ -150,7 +155,7 @@
 the manhole-shell by adding a few lines to create a new server (a Factory)
 listening on a different point:</p>
 
-<a href="listings/manhole/manhole2.py" class="py-listing">manhole2.py</a>
+<p><a href="listings/manhole/manhole2.py" class="py-listing">manhole2.py</a></p>
 
 <p>With this in place, you can telnet to port 8007, give the username
 <q>boss</q> and password <q>sekrit</q>, and you'll end up with a shell that
Index: test-standard.xhtml
===================================================================
RCS file: /cvs/Twisted/doc/howto/test-standard.xhtml,v
retrieving revision 1.1
diff -u -r1.1 test-standard.xhtml
--- test-standard.xhtml	8 Oct 2003 10:22:06 -0000	1.1
+++ test-standard.xhtml	11 Oct 2003 18:20:41 -0000
@@ -1,8 +1,8 @@
-<?xml version="1.0"?>
-<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
+<?xml version="1.0" encoding="utf-8"?>
+<!DOCTYPE html PUBLIC
+    "-//W3C//DTD XHTML 1.0 Strict//EN"
     "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
-
-<html xmlns="http://www.w3.org/1999/xhtml">
+<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
   <head>
     <title>Unit Tests in Twisted</title>
   </head>
@@ -271,7 +271,7 @@
 well as <code>twisted-dev.el</code>'s F9 command) use this to automatically
 run the right tests.</p>
 
-    <h2 id="links">Links</h2><a name="links"></a>
+    <h2 id="links">Links</h2>
     <ul>
       <li>A chapter on <a href=
       "http://diveintopython.org/roman_divein.html" >Unit Testing</a>
Index: threading.xhtml
===================================================================
RCS file: /cvs/Twisted/doc/howto/threading.xhtml,v
retrieving revision 1.1
diff -u -r1.1 threading.xhtml
--- threading.xhtml	8 Oct 2003 10:22:06 -0000	1.1
+++ threading.xhtml	11 Oct 2003 18:20:42 -0000
@@ -1,13 +1,13 @@
-<?xml version="1.0"?>
-<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
-    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
-
-<html xmlns="http://www.w3.org/1999/xhtml">
+<?xml version="1.0" encoding="utf-8"?>
+<!DOCTYPE html PUBLIC
+    "-//W3C//DTD XHTML 1.0 Strict//EN"
+    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
+<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
   <head>
     <title>Using Threads in Twisted</title>
   </head>
 
-  <body text="#000000" bgcolor="#ffffff">
+  <body>
     <h1>Using Threads in Twisted</h1>
 
     <h2>Introduction</h2>
Index: time.xhtml
===================================================================
RCS file: /cvs/Twisted/doc/howto/time.xhtml,v
retrieving revision 1.1
diff -u -r1.1 time.xhtml
--- time.xhtml	8 Oct 2003 10:22:06 -0000	1.1
+++ time.xhtml	11 Oct 2003 18:20:42 -0000
@@ -1,8 +1,8 @@
-<?xml version="1.0"?>
-<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
-    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
-
-<html xmlns="http://www.w3.org/1999/xhtml">
+<?xml version="1.0" encoding="utf-8"?>
+<!DOCTYPE html PUBLIC
+    "-//W3C//DTD XHTML 1.0 Strict//EN"
+    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
+<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
   <head>
     <title>Scheduling tasks for the future</title>
   </head>
Index: twisted-pair.xhtml
===================================================================
RCS file: /cvs/Twisted/doc/howto/twisted-pair.xhtml,v
retrieving revision 1.1
diff -u -r1.1 twisted-pair.xhtml
--- twisted-pair.xhtml	8 Oct 2003 10:22:06 -0000	1.1
+++ twisted-pair.xhtml	11 Oct 2003 18:20:42 -0000
@@ -1,8 +1,8 @@
-<?xml version="1.0"?>
-<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
-    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
-
-<html xmlns="http://www.w3.org/1999/xhtml">
+<?xml version="1.0" encoding="utf-8"?>
+<!DOCTYPE html PUBLIC
+    "-//W3C//DTD XHTML 1.0 Strict//EN"
+    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
+<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
 <head>
 <title>Twisted Pair: Low-level Networking</title>
 </head>
Index: udp.xhtml
===================================================================
RCS file: /cvs/Twisted/doc/howto/udp.xhtml,v
retrieving revision 1.1
diff -u -r1.1 udp.xhtml
--- udp.xhtml	8 Oct 2003 10:22:06 -0000	1.1
+++ udp.xhtml	11 Oct 2003 18:20:46 -0000
@@ -1,8 +1,8 @@
-<?xml version="1.0"?>
-<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
-    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
-
-<html xmlns="http://www.w3.org/1999/xhtml">
+<?xml version="1.0" encoding="utf-8"?>
+<!DOCTYPE html PUBLIC
+    "-//W3C//DTD XHTML 1.0 Strict//EN"
+    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
+<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
   <head>
     <title>UDP Networking</title>
   </head>
Index: upgrading.xhtml
===================================================================
RCS file: /cvs/Twisted/doc/howto/upgrading.xhtml,v
retrieving revision 1.2
diff -u -r1.2 upgrading.xhtml
--- upgrading.xhtml	10 Oct 2003 04:31:03 -0000	1.2
+++ upgrading.xhtml	11 Oct 2003 18:20:50 -0000
@@ -1,4 +1,8 @@
-<html>
+<?xml version="1.0" encoding="utf-8"?>
+<!DOCTYPE html PUBLIC
+    "-//W3C//DTD XHTML 1.0 Strict//EN"
+    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
+<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
 <head>
 <title>Upgrading Applications</title>
 </head>
Index: using-twistedweb.xhtml
===================================================================
RCS file: /cvs/Twisted/doc/howto/using-twistedweb.xhtml,v
retrieving revision 1.4
diff -u -r1.4 using-twistedweb.xhtml
--- using-twistedweb.xhtml	11 Oct 2003 01:20:21 -0000	1.4
+++ using-twistedweb.xhtml	11 Oct 2003 18:20:51 -0000
@@ -1,8 +1,8 @@
-<?xml version="1.0"?>
-<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
-"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
-
-<html xmlns="http://www.w3.org/1999/xhtml">
+<?xml version="1.0" encoding="utf-8"?>
+<!DOCTYPE html PUBLIC
+    "-//W3C//DTD XHTML 1.0 Strict//EN"
+    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
+<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
 <head>
 <title>Configuring and Using the Twisted.Web Server</title>
 </head>
@@ -10,12 +10,12 @@
 <body>
 <h1>Configuring and Using the Twisted.Web Server</h1>
 
-<h2>Twisted Web Development</h2><a name="development" />
+<h2 id="development">Twisted Web Development</h2>
 
 <p>Twisted Web serves python objects that implement the interface 
 IResource.</p>
 
-<img src="../img/twisted_1.gif" alt="Twisted Web process" />
+<p><img src="../img/twisted_1.gif" alt="Twisted Web process" /></p>
 
 <h3>Main Concepts</h3>
 
@@ -36,8 +36,7 @@
 
 </ul>
 
-<h3>Site Objects</h3>
-<a name="sites" />
+<h3 id="sites">Site Objects</h3>
 
 <p>Site objects serve as the glue between a port to listen for HTTP requests on, and a root Resource object.</p>
 
@@ -60,8 +59,7 @@
 reactor.run()
 </pre>
 
-<h3>Resource objects</h3>
-<a name="resources" />
+<h3 id="resources">Resource objects</h3>
 
 <p><code>Resource</code> objects represent a single URL segment of a site. During URL parsing, <code>getChild</code> is called on the current <code>Resource</code> to produce the next <code>Resource</code> object.</p>
 
@@ -95,8 +93,7 @@
 resource = Hello()
 </pre>
 
-<h3>Resource Trees</h3>
-<a name="trees" />
+<h3 id="trees">Resource Trees</h3>
 
 <p>Resources can be arranged in trees using <code>putChild</code>. <code>putChild</code> puts a Resource instance into another Resource instance, making it available at the given path segment name:</p>
 
@@ -117,8 +114,7 @@
 
 </ul>
 
-<h3>.rpy scripts</h3>
-<a name="rpys" />
+<h3 id="rpys">.rpy scripts</h3>
 
 <p>Files with the extension <code>.rpy</code> are python scripts which, when placed in a directory served by Twisted Web, will be executed when visited through the web.</p>
 
@@ -152,8 +148,7 @@
 % twistd -nf web.tap
 </pre>
 
-<h3>Resource rendering</h3>
-<a name="rendering" />
+<h3 id="rendering">Resource rendering</h3>
 
 <p>Resource rendering occurs when Twisted Web locates a leaf Resource object to handle a web request. A Resource object may do various things to produce output which will be sent back to the browser:</p>
 
@@ -164,14 +159,13 @@
 <li>Request a <code>Deferred</code>, return <code>server.NOT_DONE_YET</code>, and call <code>request.write("stuff")</code> and <code>request.finish()</code> later, in a callback on the <code>Deferred</code>.</li>
 </ul>
 
-<h3>Session</h3>
-<a name="sessions" />
+<h3 id="sessions">Session</h3>
 
 <p>HTTP is a stateless protocol; every request-response is treated as an individual unit, distinguishable from any other request only by the URL requested. With the advent of Cookies in the mid nineties, dynamic web servers gained the ability to distinguish between requests coming from different <em>browser sessions</em> by sending a Cookie to a browser. The browser then sends this cookie whenever it makes a request to a web server, allowing the server to track which requests come from which browser session.</p>
 
 <p>Twisted Web provides an abstraction of this browser-tracking behavior called the <em>Session object</em>. Calling <code>request.getSession()</code> checks to see if a session cookie has been set; if not, it creates a unique session id, creates a Session object, stores it in the Site, and returns it. If a session object already exists, the same session object is returned. In this way, you can store data specific to the session in the session object.</p>
 
-<img src="../img/twisted_2.gif" />
+<p><img src="../img/twisted_2.gif" alt="" /></p>
 
 <h2>Advanced Configuration</h2>
 
@@ -401,8 +395,7 @@
 
 <p> Twisted.Web serves flat HTML files just as it does any other flat file.  </p>
 
-<a name="ResourceScripts" />
-<h3>Resource Scripts</h3>
+<h3 id="ResourceScripts">Resource Scripts</h3>
 
 <p> A Resource script is a Python file ending with the extension <code>.rpy</code>, which is required to create an instance of a (subclass of a) <code class="API">twisted.web.resource.Resource</code>. </p>
 
@@ -469,8 +462,7 @@
 href="woven.xhtml">its documentation</a> for more details.
 </p>
 
-<a name="SpreadableWebServers" />
-<h3>Spreadable Web Servers</h3>
+<h3 id="SpreadableWebServers">Spreadable Web Servers</h3>
 
 <p> One of the most interesting applications of Twisted.Web is the distributed webserver; multiple servers can all answer requests on the same port, using the <code class="API">twisted.spread</code> package for <q>spreadable</q> computing.  In two different directories, run the commands:  </p>
 
Index: viewindepth.xhtml
===================================================================
RCS file: /cvs/Twisted/doc/howto/viewindepth.xhtml,v
retrieving revision 1.1
diff -u -r1.1 viewindepth.xhtml
--- viewindepth.xhtml	8 Oct 2003 10:22:06 -0000	1.1
+++ viewindepth.xhtml	11 Oct 2003 18:20:52 -0000
@@ -1,8 +1,14 @@
-<html><head><title>View In Depth</title></head><body>
+<?xml version="1.0" encoding="utf-8"?>
+<!DOCTYPE html PUBLIC
+    "-//W3C//DTD XHTML 1.0 Strict//EN"
+    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
+<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
+<head><title>View In Depth</title></head><body>
 
 <h1>View In Depth</h1>
 
-<img title="View in Relation to Controller and Model" src="../img/view.png" />
+<p><img title="View in Relation to Controller and Model" src="../img/view.png"
+alt="View in Relation to Controller and Model" /></p>
 
 <p>View objects are given a Model and a template DOM node, and use the DOM api to insert the given Model data into the DOM. Views are where you manipulate the HTML, in the form of DOM, which will be sent to the web browser.</p>
 
@@ -32,7 +38,7 @@
 
 </ul>
 
-<h2>View factories</h2><a name="viewfactories" />
+<h2 id="viewfactories">View factories</h2>
 
 <p>View factories provide the glue between a <code>view=</code> directive on a
 DOM node and a View instance. When a DOM node with a <code>view=</code>
@@ -72,7 +78,7 @@
 resource.setSubviewFactory("foo", MyView)
 </pre>
 
-<h2>generate</h2><a name="generate" />
+<h2 id="generate">generate</h2>
 
   <p>The generate method is the most important method in the IView interface. It is the entry point from the Woven framework into your custom Python View code. When your View instance was constructed, it was passed a Model as the first argument. This is the Model data which generate should insert into the DOM. generate is passed the request and a template DOM node, and must return a DOM node, which will replace the template in the DOM tree:</p>
 
@@ -97,7 +103,7 @@
 
 <p>However, Woven also supports the concept of <q>pattern=</q> nodes, nodes which are marked in the template with a given <q>pattern=</q> directive so they may be located by the View abstractly. To support this, Woven contains a View subclass called Widget, which provides a far more convenient API for rendering your Views.</p>
 
-<h2>Widgets</h2><a name="widgets" />
+<h2 id="widgets">Widgets</h2>
 
   <p>Rendering Views is such an important part of developing a Woven application that it needs to be as convenient as possible. To support reducing the amount of boilerplate required to write a new View, the View subclass Widget was created. When subclassing Widget, simply override setUp instead of generate. setUp differs from generate in that it is passed a reference to the Model data, not the Model wrapper, and may simply mutate the template DOM node in place without having to worry about returning anything:</p>
 
@@ -135,7 +141,7 @@
 
 <p>Widgets, along with the DOM api and the getPattern helper method, provide a powerful way for you to write view logic in Python without knowing or caring what type of HTML nodes are in your Template.</p>
 
-<h2>lmx</h2><a name="lmx" />
+<h2 id="lmx">lmx</h2>
 
   <p>Generating View structure using the DOM is very useful for separating the Template from the actual logic which structures the View. However, if you need to do a large amount of HTML generation in Python, it becomes very cumbersome quickly. lmx is a lightweight wrapper around DOM nodes that allows you to quickly and easily build large HTML structures from Python:</p>
 
@@ -209,7 +215,7 @@
 resource.setSubviewFactory("calendar", Calendar)
 </pre>
     
-<h2>wvupdate_</h2><a name="wvupdate" />
+<h2 id="wvupdate">wvupdate_</h2>
 
 <p>Sometimes, you need to create some view-rendering code for a very specific
 purpose. Since this code will most likely not be reusable across pages, it is
@@ -235,7 +241,7 @@
 
 <p>It is often possible to use <code>wvupdate_</code> methods to quickly prototype some View code, and generalize this code later. By moving the <code>wvupdate_</code> code into a Widget subclass, you make this code available to many different Pages.</p>
 
-<h2>The View stack</h2><a name="viewstack" />
+<h2 id="viewstack">The View stack</h2>
 
 <p>Woven uses a View stack to keep track of which View objects are currently in
 scope. You can use this fact to provide View objects which contain a lot of
Index: vision.xhtml
===================================================================
RCS file: /cvs/Twisted/doc/howto/vision.xhtml,v
retrieving revision 1.1
diff -u -r1.1 vision.xhtml
--- vision.xhtml	8 Oct 2003 10:22:06 -0000	1.1
+++ vision.xhtml	11 Oct 2003 18:20:52 -0000
@@ -1,8 +1,8 @@
-<?xml version="1.0"?>
-<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
+<?xml version="1.0" encoding="utf-8"?>
+<!DOCTYPE html PUBLIC
+    "-//W3C//DTD XHTML 1.0 Strict//EN"
     "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
-
-<html xmlns="http://www.w3.org/1999/xhtml">
+<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
   <head>
     <title>The Vision For Twisted</title>
   </head>
Index: web-development.xhtml
===================================================================
RCS file: /cvs/Twisted/doc/howto/web-development.xhtml,v
retrieving revision 1.2
diff -u -r1.2 web-development.xhtml
--- web-development.xhtml	10 Oct 2003 04:31:04 -0000	1.2
+++ web-development.xhtml	11 Oct 2003 18:20:52 -0000
@@ -1,8 +1,8 @@
-<?xml version="1.0"?>
-<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
-"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
-
-<html xmlns="http://www.w3.org/1999/xhtml">
+<?xml version="1.0" encoding="utf-8"?>
+<!DOCTYPE html PUBLIC
+    "-//W3C//DTD XHTML 1.0 Strict//EN"
+    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
+<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
 <head>
 <title>Web Application Development</title>
 </head>
Index: web-overview.xhtml
===================================================================
RCS file: /cvs/Twisted/doc/howto/web-overview.xhtml,v
retrieving revision 1.2
diff -u -r1.2 web-overview.xhtml
--- web-overview.xhtml	10 Oct 2003 04:31:04 -0000	1.2
+++ web-overview.xhtml	11 Oct 2003 18:20:52 -0000
@@ -1,8 +1,8 @@
-<?xml version="1.0"?>
-<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
-    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
-
-<html xmlns="http://www.w3.org/1999/xhtml">
+<?xml version="1.0" encoding="utf-8"?>
+<!DOCTYPE html PUBLIC
+    "-//W3C//DTD XHTML 1.0 Strict//EN"
+    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
+<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
   <head>
     <title>Overview of Twisted Web</title>
   </head>
@@ -22,7 +22,9 @@
 
     <h2>Twisted Web's Structure</h2>
 
-        <p><img src="../img/web-overview.png"/></p>
+        <p>
+          <img src="../img/web-overview.png" alt="A Twisted Web overview." />
+        </p>
 
         <p>When
         the Web Server receives a request from a Client, it creates
Index: woven-reference.xhtml
===================================================================
RCS file: /cvs/Twisted/doc/howto/woven-reference.xhtml,v
retrieving revision 1.2
diff -u -r1.2 woven-reference.xhtml
--- woven-reference.xhtml	10 Oct 2003 04:31:04 -0000	1.2
+++ woven-reference.xhtml	11 Oct 2003 18:20:52 -0000
@@ -1,4 +1,9 @@
-<html><head><title>Woven Widget Reference</title></head>
+<?xml version="1.0" encoding="utf-8"?>
+<!DOCTYPE html PUBLIC
+    "-//W3C//DTD XHTML 1.0 Strict//EN"
+    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
+<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
+<head><title>Woven Widget Reference</title></head>
 <body>
 <h1>Woven Widget Reference</h1>
 
Index: woven.xhtml
===================================================================
RCS file: /cvs/Twisted/doc/howto/woven.xhtml,v
retrieving revision 1.2
diff -u -r1.2 woven.xhtml
--- woven.xhtml	10 Oct 2003 04:31:04 -0000	1.2
+++ woven.xhtml	11 Oct 2003 18:20:56 -0000
@@ -1,4 +1,9 @@
-<html><head><title>Woven</title></head><body>
+<?xml version="1.0" encoding="utf-8"?>
+<!DOCTYPE html PUBLIC
+    "-//W3C//DTD XHTML 1.0 Strict//EN"
+    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
+<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
+<head><title>Woven</title></head><body>
 
 <h1>Woven</h1>
 
@@ -86,9 +91,10 @@
   <li><a href="guardindepth.xhtml">Guard</a></li>
 </ul>
 
-<img title="Overview of the Woven rendering process" src="../img/woven_overview.png" />
+<p><img title="Overview of the Woven rendering process"
+src="../img/woven_overview.png" alt="Overview of the Woven rendering process" /></p>
 
-<h2>Templates</h2><a name="templates" />
+<h2 id="templates">Templates</h2>
 
   <p>Templates in Woven are XHTML documents, marked up with four special woven attributes:</p>
 
@@ -116,7 +122,7 @@
   &lt;/html&gt;
 </pre>
 
-<h2>Models</h2><a name="models" />
+<h2 id="models">Models</h2>
 
   <p>Model objects are arranged in a tree. Each Woven page has a model tree with exactly one root. All data required for display by a Woven page is made available through named sub-models below this root.</p>
 
@@ -152,7 +158,7 @@
 
 </ul>
 
-<h2>Views</h2><a name="views" />
+<h2 id="views">Views</h2>
 
   <p>View objects are constructed each time a <code>view=</code> directive is encountered.</p>
 
@@ -175,7 +181,7 @@
 
 <p>The <code>View</code> object should return a DOM node that has been populated with the given model data.</p>
 
-<h2>Controllers</h2><a name="controllers" />
+<h2 id="controllers">Controllers</h2>
 
   <p>Controllers are responsible for accepting input from the user and making appropriate changes to the model.</p>
 
@@ -201,7 +207,7 @@
           self.model.notify({'request': request})
 </pre>
 
-<h2>Pages</h2><a name="pages" />
+<h2 id="pages">Pages</h2>
 
   <p>Pages are the entry point into a Woven application. The Page object accepts a request to render a web page from <code>twisted.web</code> and drives the page rendering process by parsing the template, locating Model objects in the tree, and invoking Controller and View objects.</p>
 
@@ -240,7 +246,7 @@
 
 <p>Name this script <code>test.rpy</code> and place it in the directory served by <code>twisted.web</code>. Then visit the URL <code>http://localhost:8080/test.rpy</code> with your web browser, and you should see a page with the HTML-formatted model data.</p>
 
-<h3>Page rendering process</h3><a name="rendering" />
+<h3 id="rendering">Page rendering process</h3>
 
   <p>When Woven renders a page, it first constructs a DOM (Document Object Model) which represents the template in memory using Python objects.</p>
 
@@ -256,10 +262,16 @@
 
   <p>When the entire DOM has been traversed and mutated, the DOM is converted to HTML and sent to the browser.</p>
 
-<img title="Example of Woven expanding the template (before processing)" src="../img/woven_before.png" />
-<img title="Example of Woven expanding the template (after processing)" src="../img/woven_after.png" />
+<p>
+<img title="Example of Woven expanding the template (before processing)"
+src="../img/woven_before.png" alt="Example of Woven expanding the template
+(before processing)" />
+<img title="Example of Woven expanding the template (after processing)"
+src="../img/woven_after.png" alt="Example of Woven expanding the template (after
+processing)" />
+</p>
 
-<h2>Further Reading</h2><a name="furtherconcepts" />
+<h2 id="furtherconcepts">Further Reading</h2>
 
 <p><a href="web-overview.xhtml">Twisted Web</a> is the Object-publishing web server woven uses to glue HTTP requests to Page rendering.</p>
 
Index: xmlrpc.xhtml
===================================================================
RCS file: /cvs/Twisted/doc/howto/xmlrpc.xhtml,v
retrieving revision 1.2
diff -u -r1.2 xmlrpc.xhtml
--- xmlrpc.xhtml	10 Oct 2003 04:31:04 -0000	1.2
+++ xmlrpc.xhtml	11 Oct 2003 18:20:57 -0000
@@ -1,8 +1,8 @@
-<?xml version="1.0"?>
-<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
-    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
-
-<html xmlns="http://www.w3.org/1999/xhtml">
+<?xml version="1.0" encoding="utf-8"?>
+<!DOCTYPE html PUBLIC
+    "-//W3C//DTD XHTML 1.0 Strict//EN"
+    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
+<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
   <head>
     <title>Creating XML-RPC Servers and Clients with Twisted</title>
   </head>
@@ -78,7 +78,8 @@
 <p>XML-RPC resources can also be part of a normal Twisted web server, using
 resource scripts. The following is an example of such a resource script:</p>
 
-<a href="listings/TwistedQuotes/xmlquote.rpy" class="py-listing">xmlquote.rpy</a>
+<p><a href="listings/TwistedQuotes/xmlquote.rpy"
+class="py-listing">xmlquote.rpy</a></p>
 
 <h3>Using XML-RPC sub-handlers</h3>
 
@@ -177,7 +178,7 @@
 <p>From the point of view, of a Twisted developer, there is little difference
 between XML-RPC support and SOAP support. Here is an example of SOAP usage:</p>
 
-<a href="listings/TwistedQuotes/soap.rpy" class="py-listing">soap.rpy</a>
+<p><a href="listings/TwistedQuotes/soap.rpy" class="py-listing">soap.rpy</a></p>
 
 
 <h2>Creating an XML-RPC Client</h2>
@@ -245,7 +246,8 @@
 class="API" base="twisted.web.server">Site</code>, and then adds
 <code>/RPC2</code> and <code>/SOAP</code> paths to it.</p>
 
-<a href="listings/TwistedQuotes/xmlAndSoapQuote.py" class="py-listing">xmlAndSoapQuote.py</a>
+<p><a href="listings/TwistedQuotes/xmlAndSoapQuote.py"
+class="py-listing">xmlAndSoapQuote.py</a></p>
 
 <p>Refer to <a href="using-twistedweb.html#development">Twisted Web
 Development</a> for more details about Resources.</p>
