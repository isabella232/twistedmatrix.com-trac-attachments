Index: twisted/web/test/test_http.py
===================================================================
--- twisted/web/test/test_http.py	(revision 37042)
+++ twisted/web/test/test_http.py	(working copy)
@@ -1653,7 +1653,19 @@
         self.assertRaises(RuntimeError, req.finish)
 
 
+    def test_repr(self):
+        """
+        L{Request.__repr__} returns the method, uri and client protocol of the
+        C{Request} instance as a C{String} in the form <METHOD URI PROTOCOL>.
+        """
+        request = http.Request(DummyChannel(), False)
+        request.clientproto = b"HTTP/1.0"
+        request.method = b"GET"
+        request.uri = b"/foo/bar"
+        self.assertEqual(repr(request), '<%s %s %s>' % (request.method, request.uri, request.clientproto))
 
+
+
 class MultilineHeadersTestCase(unittest.TestCase):
     """
     Tests to exercise handling of multiline headers by L{HTTPClient}.  RFCs 1945
Index: twisted/web/topfiles/6120.bugfix
===================================================================
--- twisted/web/topfiles/6120.bugfix	(revision 0)
+++ twisted/web/topfiles/6120.bugfix	(revision 0)
@@ -0,0 +1 @@
+twisted.web.test_http.RequestTests.test_repr has been added as a test for twisted.web.http.Request.__repr__.
Index: twisted/web/http.py
===================================================================
--- twisted/web/http.py	(revision 37042)
+++ twisted/web/http.py	(working copy)
@@ -791,8 +791,16 @@
 
 
     def __repr__(self):
-        return '<%s %s %s>'% (self.method, self.uri, self.clientproto)
+        """
+        Return the method, uri and client protocol of the C{Request} instance
+        as a C{string} in the form <METHOD URI PROTOCOL>.
 
+        @return: C{string} in the form <METHOD URI PROTOCOL>.
+        @rtype: C{string}.
+        """
+        return '<%s %s %s>' % (self.method, self.uri, self.clientproto)
+
+
     def process(self):
         """
         Override in subclasses.
