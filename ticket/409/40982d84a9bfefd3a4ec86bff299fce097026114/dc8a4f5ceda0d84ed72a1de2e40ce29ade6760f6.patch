diff --git twisted/python/reflect.py twisted/python/reflect.py
index ac25d47..4d817d2 100644
--- twisted/python/reflect.py
+++ twisted/python/reflect.py
@@ -49,34 +49,6 @@ class QueueMethod:
         self.calls.append((self.name, args))
 
 
-def funcinfo(function):
-    """
-    this is more documentation for myself than useful code.
-    """
-    warnings.warn(
-        "[v2.5] Use inspect.getargspec instead of twisted.python.reflect.funcinfo",
-        DeprecationWarning,
-        stacklevel=2)
-    code=function.func_code
-    name=function.func_name
-    argc=code.co_argcount
-    argv=code.co_varnames[:argc]
-    defaults=function.func_defaults
-
-    out = []
-
-    out.append('The function %s accepts %s arguments' % (name ,argc))
-    if defaults:
-        required=argc-len(defaults)
-        out.append('It requires %s arguments' % required)
-        out.append('The arguments required are: %s' % argv[:required])
-        out.append('additional arguments are:')
-        for i in range(argc-required):
-            j=i+required
-            out.append('%s which has a default of' % (argv[j], defaults[i]))
-    return out
-
-
 ISNT=0
 WAS=1
 IS=2
@@ -129,40 +101,6 @@ def isinst(inst,clazz):
 
 
 
-## the following were factored out of usage
-
-if not _PY3:
-    # These functions are still imported by libraries used in turn by the
-    # Twisted unit tests, like Nevow 0.10. Since they are deprecated,
-    # there's no need to port them to Python 3 (hence the condition above).
-    # https://bazaar.launchpad.net/~divmod-dev/divmod.org/trunk/revision/2716
-    # removed the dependency in Nevow. Once that is released, these functions
-    # can be safely removed from Twisted.
-
-    @deprecated(Version("Twisted", 11, 0, 0), "inspect.getmro")
-    def allYourBase(classObj, baseClass=None):
-        """
-        allYourBase(classObj, baseClass=None) -> list of all base
-        classes that are subclasses of baseClass, unless it is None,
-        in which case all bases will be added.
-        """
-        l = []
-        _accumulateBases(classObj, l, baseClass)
-        return l
-
-
-    @deprecated(Version("Twisted", 11, 0, 0), "inspect.getmro")
-    def accumulateBases(classObj, l, baseClass=None):
-        _accumulateBases(classObj, l, baseClass)
-
-
-    def _accumulateBases(classObj, l, baseClass=None):
-        for base in classObj.__bases__:
-            if baseClass is None or issubclass(base, baseClass):
-                l.append(base)
-            _accumulateBases(base, l, baseClass)
-
-
 def accumulateClassDict(classObj, attr, adict, baseClass=None):
     """
     Accumulate all attributes of a given name in a class hierarchy into a single dictionary.
@@ -290,11 +228,10 @@ __all__ = [
 
     'QueueMethod',
 
-    'funcinfo', 'fullFuncName', 'qual', 'getcurrent', 'getClass', 'isinst',
+    'fullFuncName', 'qual', 'getcurrent', 'getClass', 'isinst',
     'namedModule', 'namedObject', 'namedClass', 'namedAny',
-    'safe_repr', 'safe_str', 'allYourBase', 'accumulateBases',
-    'prefixedMethodNames', 'addMethodNamesToDict', 'prefixedMethods',
-    'accumulateMethods',
+    'safe_repr', 'safe_str', 'prefixedMethodNames', 'addMethodNamesToDict',
+    'prefixedMethods', 'accumulateMethods',
     'accumulateClassDict', 'accumulateClassList', 'isSame', 'isLike',
     'modgrep', 'isOfType', 'findInstances', 'objgrep', 'filenameToModuleName',
     'fullyQualifiedName']
diff --git twisted/topfiles/5481.removal twisted/topfiles/5481.removal
new file mode 100644
index 0000000..a0c481f
--- /dev/null
+++ twisted/topfiles/5481.removal
@@ -0,0 +1 @@
+funcinfo (deprecated since 2.5), allYourBase and accumulateBases (deprecated since 11.0) were removed.
