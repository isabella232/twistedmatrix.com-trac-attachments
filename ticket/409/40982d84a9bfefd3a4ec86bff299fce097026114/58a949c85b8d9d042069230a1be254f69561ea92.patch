Index: twisted/python/reflect.py
===================================================================
--- twisted/python/reflect.py	(revision 46253)
+++ twisted/python/reflect.py	(working copy)
@@ -16,7 +16,6 @@
 import weakref
 import re
 import traceback
-import warnings
 from collections import deque
 
 RegexType = type(re.compile(""))
@@ -456,39 +455,11 @@
         self.calls.append((self.name, args))
 
 
-def funcinfo(function):
-    """
-    this is more documentation for myself than useful code.
-    """
-    warnings.warn(
-        "[v2.5] Use inspect.getargspec instead of twisted.python.reflect.funcinfo",
-        DeprecationWarning,
-        stacklevel=2)
-    code=function.func_code
-    name=function.func_name
-    argc=code.co_argcount
-    argv=code.co_varnames[:argc]
-    defaults=function.func_defaults
+ISNT = 0
+WAS = 1
+IS = 2
 
-    out = []
 
-    out.append('The function %s accepts %s arguments' % (name ,argc))
-    if defaults:
-        required=argc-len(defaults)
-        out.append('It requires %s arguments' % required)
-        out.append('The arguments required are: %s' % argv[:required])
-        out.append('additional arguments are:')
-        for i in range(argc-required):
-            j=i+required
-            out.append('%s which has a default of' % (argv[j], defaults[i]))
-    return out
-
-
-ISNT=0
-WAS=1
-IS=2
-
-
 def fullFuncName(func):
     qualName = (str(pickle.whichmodule(func, func.__name__)) + '.' + func.__name__)
     if namedObject(qualName) is not func:
@@ -543,37 +514,6 @@
             return ISNT
 
 
-    # These functions are still imported by libraries used in turn by the
-    # Twisted unit tests, like Nevow 0.10. Since they are deprecated,
-    # there's no need to port them to Python 3 (hence the condition above).
-    # https://bazaar.launchpad.net/~divmod-dev/divmod.org/trunk/revision/2716
-    # removed the dependency in Nevow. Once that is released, these functions
-    # can be safely removed from Twisted.
-
-    @deprecated(Version("Twisted", 11, 0, 0), "inspect.getmro")
-    def allYourBase(classObj, baseClass=None):
-        """
-        allYourBase(classObj, baseClass=None) -> list of all base
-        classes that are subclasses of baseClass, unless it is None,
-        in which case all bases will be added.
-        """
-        l = []
-        _accumulateBases(classObj, l, baseClass)
-        return l
-
-
-    @deprecated(Version("Twisted", 11, 0, 0), "inspect.getmro")
-    def accumulateBases(classObj, l, baseClass=None):
-        _accumulateBases(classObj, l, baseClass)
-
-
-    def _accumulateBases(classObj, l, baseClass=None):
-        for base in classObj.__bases__:
-            if baseClass is None or issubclass(base, baseClass):
-                l.append(base)
-            _accumulateBases(base, l, baseClass)
-
-
 def accumulateClassDict(classObj, attr, adict, baseClass=None):
     """
     Accumulate all attributes of a given name in a class hierarchy into a single dictionary.
@@ -713,11 +653,10 @@
 
     'QueueMethod',
 
-    'funcinfo', 'fullFuncName', 'qual', 'getcurrent', 'getClass', 'isinst',
+    'fullFuncName', 'qual', 'getcurrent', 'getClass', 'isinst',
     'namedModule', 'namedObject', 'namedClass', 'namedAny', 'requireModule',
-    'safe_repr', 'safe_str', 'allYourBase', 'accumulateBases',
-    'prefixedMethodNames', 'addMethodNamesToDict', 'prefixedMethods',
-    'accumulateMethods',
+    'safe_repr', 'safe_str', 'prefixedMethodNames', 'addMethodNamesToDict',
+    'prefixedMethods', 'accumulateMethods',
     'accumulateClassDict', 'accumulateClassList', 'isSame', 'isLike',
     'modgrep', 'isOfType', 'findInstances', 'objgrep', 'filenameToModuleName',
     'fullyQualifiedName']
Index: twisted/test/test_reflect.py
===================================================================
--- twisted/test/test_reflect.py	(revision 46253)
+++ twisted/test/test_reflect.py	(working copy)
@@ -895,34 +895,14 @@
 
 if not _PY3:
     # The functions tested below are deprecated but still used by external
-    # projects like Nevow 0.10. They are not going to be ported to Python 3
-    # (hence the condition above) and will be removed as soon as no project used
+    # projects. They are not going to be ported to Python 3 (hence the
+    # condition above) and will be removed as soon as no project used
     # by Twisted will depend on these functions. Also, have a look at the
     # comments related to those functions in twisted.python.reflect.
     class DeprecationTests(unittest.TestCase):
         """
         Test deprecations in twisted.python.reflect
         """
-
-        def test_allYourBase(self):
-            """
-            Test deprecation of L{reflect.allYourBase}. See #5481 for removal.
-            """
-            self.callDeprecated(
-                (Version("Twisted", 11, 0, 0), "inspect.getmro"),
-                reflect.allYourBase, DeprecationTests)
-
-
-        def test_accumulateBases(self):
-            """
-            Test deprecation of L{reflect.accumulateBases}. See #5481 for removal.
-            """
-            l = []
-            self.callDeprecated(
-                (Version("Twisted", 11, 0, 0), "inspect.getmro"),
-                reflect.accumulateBases, DeprecationTests, l, None)
-
-
         def test_getcurrent(self):
             """
             Test deprecation of L{reflect.getcurrent}.
Index: twisted/topfiles/5481.removal
===================================================================
--- twisted/topfiles/5481.removal	(revision 0)
+++ twisted/topfiles/5481.removal	(working copy)
@@ -0,0 +1 @@
+funcinfo, allYourBase and accumulateBases in twisted.python.reflect (deprecated in Twisted 11.0) are removed now.
