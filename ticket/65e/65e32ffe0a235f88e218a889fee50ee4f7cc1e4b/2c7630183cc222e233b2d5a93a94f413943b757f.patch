Index: twisted/mail/maildir.py
===================================================================
--- twisted/mail/maildir.py	(revision 30077)
+++ twisted/mail/maildir.py	(working copy)
@@ -27,13 +27,9 @@
 from twisted.python.hashlib import md5
 from twisted.mail import mail
 from twisted.internet import interfaces, defer, reactor
+from twisted.cred import portal, credentials, checkers
+from twisted.cred.error import UnauthorizedLogin
 
-from twisted import cred
-import twisted.cred.portal
-import twisted.cred.credentials
-import twisted.cred.checkers
-import twisted.cred.error
-
 INTERNAL_ERROR = '''\
 From: Twisted.mail Internals
 Subject: An Error Occurred
@@ -433,7 +429,7 @@
     """A Maildir Domain where membership is checked by a dirdbm file
     """
 
-    implements(cred.portal.IRealm, mail.IAliasableDomain)
+    implements(portal.IRealm, mail.IAliasableDomain)
 
     portal = None
     _credcheckers = None
@@ -493,7 +489,7 @@
     def requestAvatar(self, avatarId, mind, *interfaces):
         if pop3.IMailbox not in interfaces:
             raise NotImplementedError("No interface")
-        if avatarId == cred.checkers.ANONYMOUS:
+        if avatarId == checkers.ANONYMOUS:
             mbox = StringListMailbox([INTERNAL_ERROR])
         else:
             mbox = MaildirMailbox(os.path.join(self.root, avatarId))
@@ -505,11 +501,11 @@
         )
 
 class DirdbmDatabase:
-    implements(cred.checkers.ICredentialsChecker)
+    implements(checkers.ICredentialsChecker)
 
     credentialInterfaces = (
-        cred.credentials.IUsernamePassword,
-        cred.credentials.IUsernameHashedPassword
+        credentials.IUsernamePassword,
+        credentials.IUsernameHashedPassword
     )
 
     def __init__(self, dbm):
@@ -519,4 +515,4 @@
         if c.username in self.dirdbm:
             if c.checkPassword(self.dirdbm[c.username]):
                 return c.username
-        raise cred.error.UnauthorizedLogin()
+        raise UnauthorizedLogin()
