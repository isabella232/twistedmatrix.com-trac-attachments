--- xmlstream.py	2005-06-08 18:31:18.164852568 -0400
+++ xmlstream-new.py	2005-06-08 17:53:45.004385024 -0400
@@ -96,9 +96,9 @@
 class ConnectAuthenticator(Authenticator):
     def connectionMade(self):
         # Generate stream header
-        if self.version == 1.0:
-            sh = "<stream:stream xmlns='%s' xmlns:stream='http://etherx.jabber.org/streams' version='1.0'>" % \
-                 (self.namespace)
+        if self.version != 0.0:
+            sh = "<stream:stream xmlns='%s' xmlns:stream='http://etherx.jabber.org/streams' version='%s' to='%s'>" % \
+                 (self.namespace,self.version, self.streamHost.encode('utf-8'))
         else:
             sh = "<stream:stream xmlns='%s' xmlns:stream='http://etherx.jabber.org/streams' to='%s'>" % \
                  (self.namespace, self.streamHost.encode('utf-8'))
@@ -119,6 +119,15 @@
         # Setup watcher for stream errors
         self.addObserver("/error[@xmlns='http://etherx.jabber.org/streams']", self.streamError)
 
+    def _reset(self):
+        self.stream = domish.elementStream()
+        self.stream.DocumentStartEvent = self.onDocumentStart
+        self.stream.ElementEvent = self.onElement
+        self.stream.DocumentEndEvent = self.onDocumentEnd
+        
+
+        
+
     def streamError(self, errelem):
         self.dispatch(errelem, STREAM_ERROR_EVENT)
         self.transport.loseConnection()
@@ -159,6 +168,9 @@
     def onDocumentStart(self, rootelem):
         if rootelem.hasAttribute("id"):
             self.sid = rootelem["id"]              # Extract stream identifier
+        if rootelem.hasAttribute("version"):
+            self.version = rootelem["version"] # Extract version
+            
         self.authenticator.streamStarted(rootelem) # Notify authenticator
         self.dispatch(self, STREAM_START_EVENT)    
 
