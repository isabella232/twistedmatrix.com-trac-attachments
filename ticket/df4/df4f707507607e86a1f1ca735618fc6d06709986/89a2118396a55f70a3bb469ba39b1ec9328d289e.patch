Index: twisted/python/filepath.py
===================================================================
--- twisted/python/filepath.py	(revision 22990)
+++ twisted/python/filepath.py	(working copy)
@@ -499,7 +499,14 @@
         utime(self.path, None)
 
     def remove(self):
-        if self.isdir():
+        """
+        Removes the file or directory that is represented by self.  If
+        C{self.path} is a directory, it recursively removes everything all
+        its children before removing the directory.  If it's a file or link,
+        just deletes itself.
+
+        """
+        if self.isdir() and not self.islink():
             for child in self.children():
                 child.remove()
             os.rmdir(self.path)
Index: twisted/test/test_paths.py
===================================================================
--- twisted/test/test_paths.py	(revision 22990)
+++ twisted/test/test_paths.py	(working copy)
@@ -386,6 +386,19 @@
         self.path.remove()
         self.failIf(self.path.exists())
 
+    def test_removeWithSymlink(self):
+        """
+        Verify that remove on a symlink will only remove the link
+        """
+        link = self.path.child("sub1.link")
+        os.symlink(self.path.child("sub1").path, link.path)
+        link.remove()
+        self.failIf(link.exists())
+        self.failUnless(self.path.child("sub1").exists())
+
+    if not hasattr(os, "symlink"): 
+        test_removeWithSymlink.skip = "Platform doesn't support symbolic links"
+
     def testCopyTo(self):
         self.assertRaises((OSError, IOError), self.path.copyTo, self.path.child('file1'))
         oldPaths = list(self.path.walk()) # Record initial state
