Index: test_threads.py
===================================================================
--- test_threads.py	(revision 13898)
+++ test_threads.py	(working copy)
@@ -191,3 +191,15 @@
             reactor.iterate()
         self.failUnless(self.gotResult, "timeout")
         if t.active(): t.cancel()
+
+    def testDeferToThreadDecorator(self):
+        f = threads.threaded(lambda x, y=5:x + y)
+        d = f(3, y=4) 
+        d.addCallback(self._resultCallback)
+        t = reactor.callLater(1, self._timeout)
+        while not self.done:
+            reactor.iterate()
+        self.failUnless(self.gotResult, "timeout")
+        if t.active(): t.cancel()
+
+
