Index: twisted/conch/test/test_manhole.py
===================================================================
--- twisted/conch/test/test_manhole.py	(revision 32505)
+++ twisted/conch/test/test_manhole.py	(working copy)
@@ -303,7 +303,28 @@
         self._assertBuffer([">>> 1 + 1 + 1"])
     testControlL = defer.deferredGenerator(testControlL)
 
+    def test_controlA(self):
+        """
+        CTL-A can be used as HOME - returning cursor to beginning of
+        current line buffer.
+        """
+        self._testwrite('rint "hello"' + '\x01' + 'p')
+        d = self.recvlineClient.expect('print "hello"')
+        def cb(ignore):
+            self._assertBuffer(['>>> print "hello"'])
+        return d.addCallback(cb)
 
+    def test_controlE(self):
+        """
+        CTL-E can be used as END - setting cursor to end of current
+        line buffer.
+        """
+        self._testwrite('rint "hello' + '\x01' + 'p' + '\x05' + '"')
+        d = self.recvlineClient.expect('print "hello"')
+        def cb(ignore):
+            self._assertBuffer(['>>> print "hello"'])
+        return d.addCallback(cb)
+
     def testDeferred(self):
         self._testwrite(
             "from twisted.internet import defer, reactor\n"
Index: twisted/conch/topfiles/5252.bugfix
===================================================================
--- twisted/conch/topfiles/5252.bugfix	(revision 0)
+++ twisted/conch/topfiles/5252.bugfix	(revision 0)
@@ -0,0 +1 @@
+Add supprt for CTRL-A and CTRL-E in Manhole instance to trigger HOME and END functions.
Index: twisted/conch/manhole.py
===================================================================
--- twisted/conch/manhole.py	(revision 32505)
+++ twisted/conch/manhole.py	(working copy)
@@ -135,6 +135,8 @@
 CTRL_D = '\x04'
 CTRL_BACKSLASH = '\x1c'
 CTRL_L = '\x0c'
+CTRL_A = '\x01'
+CTRL_E = '\x05'
 
 class Manhole(recvline.HistoricRecvLine):
     """Mediator between a fancy line source and an interactive interpreter.
@@ -159,6 +161,8 @@
         self.keyHandlers[CTRL_C] = self.handle_INT
         self.keyHandlers[CTRL_D] = self.handle_EOF
         self.keyHandlers[CTRL_L] = self.handle_FF
+        self.keyHandlers[CTRL_A] = self.handle_HOME
+        self.keyHandlers[CTRL_E] = self.handle_END
         self.keyHandlers[CTRL_BACKSLASH] = self.handle_QUIT
 
 
@@ -194,11 +198,9 @@
         self.terminal.cursorHome()
         self.drawInputLine()
 
-
     def handle_QUIT(self):
         self.terminal.loseConnection()
 
-
     def _needsNewline(self):
         w = self.terminal.lastWrite
         return not w.endswith('\n') and not w.endswith('\x1bE')
