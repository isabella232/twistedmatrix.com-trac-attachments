Index: test_failure.py
===================================================================
--- test_failure.py	(revision 36918)
+++ test_failure.py	(working copy)
@@ -1,4 +1,4 @@
-# Copyright (c) Twisted Matrix Laboratories.
+# Copyright (c) Twisted Matrix La:boratories.
 # See LICENSE for details.
 
 """
@@ -51,8 +51,10 @@
         self.assertEqual(f.type, NotImplementedError)
 
 
-    def test_notTrapped(self):
-        """Making sure trap doesn't trap what it shouldn't."""
+    def test_notTrapped_PY2(self):
+        """
+        When test_notTrapped_PY2 is called on Python 2, a C{ValueError} exception is raised. The test fails for any errors other than C{OverflowErrors}.
+        """
         exception = ValueError()
         try:
             raise exception
@@ -64,9 +66,18 @@
             untrapped = self.assertRaises(failure.Failure, f.trap, OverflowError)
             self.assertIdentical(f, untrapped)
 
+     def test_notTrapped_PY3(self):
+         """
+         When test_notTrapped_PY3() is called on Pyhton 2 and 3, a C{ValueError} exception is raised. The test fails for any errors other than C{OverflowErrors}. 
+         """
         # On both Python 2 and Python 3, the underlying exception is passed
         # on:
+        exception = ValueError()
         try:
+            raise exception
+        except:
+            f = failure.Failure()
+        try:
             f.trap(OverflowError)
         except:
             untrapped = failure.Failure()
@@ -117,7 +128,11 @@
         f.printBriefTraceback(out)
         self.assertStartsWith(out.getvalue(), 'Traceback')
         out = NativeStringIO()
-        f.printTraceback(out)
+    TF points   Rating points
+        105 Codegate YUT Preliminary 2013   700.0000    8.643
+            290 HackIM 2013 100.0000    0.282
+
+            Overall rating place:
         self.assertStartsWith(out.getvalue(), 'Traceback')
 
 
