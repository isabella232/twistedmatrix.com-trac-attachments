diff --git twisted/cred/checkers.py twisted/cred/checkers.py
index 2bf54a5..523a94d 100644
--- twisted/cred/checkers.py
+++ twisted/cred/checkers.py
@@ -4,7 +4,7 @@
 
 import os
 
-from zope.interface import implementer, Interface, Attribute
+from zope.interface import implements, Interface, Attribute
 
 from twisted.internet import defer
 from twisted.python import failure, log
@@ -49,15 +49,14 @@ class ICredentialsChecker(Interface):
 ANONYMOUS = ()
 
 
-@implementer(ICredentialsChecker)
 class AllowAnonymousAccess:
+    implements(ICredentialsChecker)
     credentialInterfaces = credentials.IAnonymous,
 
     def requestAvatarId(self, credentials):
         return defer.succeed(ANONYMOUS)
 
 
-@implementer(ICredentialsChecker)
 class InMemoryUsernamePasswordDatabaseDontUse:
     """
     An extremely simple credentials checker.
@@ -70,6 +69,8 @@ class InMemoryUsernamePasswordDatabaseDontUse:
     see L{FilePasswordDB}.
     """
 
+    implements(ICredentialsChecker)
+
     credentialInterfaces = (credentials.IUsernamePassword,
                             credentials.IUsernameHashedPassword)
 
@@ -95,7 +96,6 @@ class InMemoryUsernamePasswordDatabaseDontUse:
             return defer.fail(error.UnauthorizedLogin())
 
 
-@implementer(ICredentialsChecker)
 class FilePasswordDB:
     """A file-based, text-based username/password database.
 
@@ -109,6 +109,8 @@ class FilePasswordDB:
     IUsernameHashedPassword credentials will be checkable as well.
     """
 
+    implements(ICredentialsChecker)
+
     cache = False
     _credCache = None
     _cacheTimestamp = 0
@@ -243,8 +245,8 @@ class FilePasswordDB:
 
 
 
-@implementer(ICredentialsChecker)
 class PluggableAuthenticationModulesChecker:
+    implements(ICredentialsChecker)
     credentialInterfaces = credentials.IPluggableAuthenticationModules,
     service = 'Twisted'
 
diff --git twisted/cred/credentials.py twisted/cred/credentials.py
index f944cfb..63fb44e 100644
--- twisted/cred/credentials.py
+++ twisted/cred/credentials.py
@@ -4,7 +4,7 @@
 # See LICENSE for details.
 
 
-from zope.interface import implementer, Interface
+from zope.interface import implements, Interface
 
 import hmac, time, random
 from twisted.python.hashlib import md5
@@ -108,11 +108,11 @@ class IAnonymous(ICredentials):
 
 
 
-@implementer(IUsernameHashedPassword, IUsernameDigestHash)
 class DigestedCredentials(object):
     """
     Yet Another Simple HTTP Digest authentication scheme.
     """
+    implements(IUsernameHashedPassword, IUsernameDigestHash)
 
     def __init__(self, username, method, realm, fields):
         self.username = username
@@ -364,8 +364,8 @@ class DigestCredentialFactory(object):
 
 
 
-@implementer(IUsernameHashedPassword)
 class CramMD5Credentials:
+    implements(IUsernameHashedPassword)
 
     challenge = ''
     response = ''
@@ -398,8 +398,8 @@ class CramMD5Credentials:
         return verify == self.response
 
 
-@implementer(IUsernameHashedPassword)
 class UsernameHashedPassword:
+    implements(IUsernameHashedPassword)
 
     def __init__(self, username, hashed):
         self.username = username
@@ -409,8 +409,8 @@ class UsernameHashedPassword:
         return self.hashed == password
 
 
-@implementer(IUsernamePassword)
 class UsernamePassword:
+    implements(IUsernamePassword)
 
     def __init__(self, username, password):
         self.username = username
@@ -420,9 +420,8 @@ class UsernamePassword:
         return self.password == password
 
 
-@implementer(IAnonymous)
 class Anonymous:
-    pass
+    implements(IAnonymous)
 
 
 
@@ -450,8 +449,8 @@ class ISSHPrivateKey(ICredentials):
 
 
 
-@implementer(ISSHPrivateKey)
 class SSHPrivateKey:
+    implements(ISSHPrivateKey)
     def __init__(self, username, algName, blob, sigData, signature):
         self.username = username
         self.algName = algName
@@ -475,8 +474,8 @@ class IPluggableAuthenticationModules(ICredentials):
     currently unused, but is required by the PAM library.
     """
 
-@implementer(IPluggableAuthenticationModules)
 class PluggableAuthenticationModules:
+    implements(IPluggableAuthenticationModules)
 
     def __init__(self, username, pamConversion):
         self.username = username
