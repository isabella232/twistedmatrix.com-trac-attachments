Index: names/authority.py
===================================================================
--- names/authority.py	(revision 1)
+++ names/authority.py	(working copy)
@@ -82,7 +82,11 @@
         additional = []
         default_ttl = max(self.soa[1].minimum, self.soa[1].expire)
 
-        domain_records = self.records.get(name.lower())
+        #a record in self.records has a name with a trailing dot if it was created with one, 
+        #@e.g., by a bind format zone file. Without the second get, the record would never be 
+        #queried with the trailing dot name and so would never be found. So, if the get fails 
+        #with the no trailing dot form of the name, try it again with a trailing dot.  
+        domain_records = self.records.get(name.lower(), self.records.get(name.lower() + '.'))
 
         if domain_records:
             for record in domain_records:
Index: names/test/test_names.py
===================================================================
--- names/test/test_names.py	(revision 1)
+++ names/test/test_names.py	(working copy)
@@ -830,3 +830,61 @@
         messages.append(m)
         return self.assertFailure(
             resolver.getHostByName("fooby.com"), socket.gaierror)
+
+class BindAuthorityTestCase(unittest.TestCase):
+    """
+    Test L{twisted.names.authority.BindAuthority}'s handling of a 
+    bind format zone file with dots at the end of a domain name.
+    """
+    tmpFile = 'tmp.zone'
+    
+    def setUp(self):
+        """
+        Create a zone file with absolute names (e.g., that end in "."'s) 
+        """
+        
+        bindFormatZoneFile = \
+"""
+$TTL 1W
+$ORIGIN         example-domain.com.
+@               IN SOA          example-domain.com.   admin.example-domain.com. (
+                                42              ; serial (d. adams)
+                                2D              ; refresh
+                                4H              ; retry
+                                6W              ; expiry
+                                1W )            ; minimum
+
+                IN NS           example-domain.com.
+                IN A            192.168.168.24
+
+demo1           IN A            192.168.168.25
+demo2           IN A            192.168.168.26
+"""
+        fp = open(self.tmpFile, 'w')
+        fp.write(bindFormatZoneFile)
+        fp.close()
+    
+    def test_bindAuthorityDottedName(self):
+        """
+        Test that you can lookup an A record from the bind format zone file. 
+        """
+        from twisted.names.authority import BindAuthority
+        bindAuthority = BindAuthority(self.tmpFile)
+        d = bindAuthority.lookupAddress('demo1.example-domain.com')    
+        result = []
+        d.addCallback(result.append)
+        answer, authority, additional = result[0]
+        self.assertEqual(answer[0], dns.RRHeader('demo1.example-domain.com',
+                         type=dns.A, cls=dns.IN, ttl=604800, auth=True,
+                         payload=dns.Record_A(address='192.168.168.25', ttl=604800)))
+        self.assertEqual(authority, [])
+        self.assertEqual(additional, [])
+        
+    def tearDown(self):
+        """
+        Remove the temporary file created in setUp.
+        """
+        import os
+        os.remove(self.tmpFile)
+            
+         
\ No newline at end of file
