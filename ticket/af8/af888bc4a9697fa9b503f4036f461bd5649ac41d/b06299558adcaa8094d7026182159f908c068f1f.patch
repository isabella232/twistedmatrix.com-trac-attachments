diff --git a/twisted/internet/_threadedselect.py b/twisted/internet/_threadedselect.py
index b88a569..8727e30 100644
--- a/twisted/internet/_threadedselect.py
+++ b/twisted/internet/_threadedselect.py
@@ -51,10 +51,10 @@ with wxPython, or the PyObjCTools.AppHelper.stopEventLoop function.
 """
 
 from threading import Thread
-from Queue import Queue, Empty
+from queue import Queue, Empty
 import sys
 
-from zope.interface import implements
+from zope.interface import implementer
 
 from twisted.internet.interfaces import IReactorFDSet
 from twisted.internet import posixbase
@@ -75,11 +75,11 @@ def dictRemove(dct, value):
 def raiseException(e):
     raise e
 
+@implementer(IReactorFDSet)
 class ThreadedSelectReactor(posixbase.PosixReactorBase):
     """A threaded select() based reactor - runs on all POSIX platforms and on
     Win32.
     """
-    implements(IReactorFDSet)
 
     def __init__(self):
         threadable.init(1)
@@ -113,8 +113,8 @@ class ThreadedSelectReactor(posixbase.PosixReactorBase):
 
     def _preenDescriptorsInThread(self):
         log.msg("Malformed file descriptor found.  Preening lists.")
-        readers = self.reads.keys()
-        writers = self.writes.keys()
+        readers = list(self.reads.keys())
+        writers = list(self.writes.keys())
         self.reads.clear()
         self.writes.clear()
         for selDict, selList in ((self.reads, readers), (self.writes, writers)):
@@ -149,8 +149,8 @@ class ThreadedSelectReactor(posixbase.PosixReactorBase):
         writes = self.writes
         while 1:
             try:
-                r, w, ignored = _select(reads.keys(),
-                                        writes.keys(),
+                r, w, ignored = _select(list(reads.keys()),
+                                        list(writes.keys()),
                                         [], timeout)
                 break
             except ValueError:
@@ -162,7 +162,7 @@ class ThreadedSelectReactor(posixbase.PosixReactorBase):
                 # result) was passed
                 log.err()
                 self._preenDescriptorsInThread()
-            except (select.error, IOError), se:
+            except (select.error, IOError) as se:
                 # select(2) encountered an error
                 if se.args[0] in (0, 2):
                     # windows does this if it got an empty list
@@ -243,9 +243,9 @@ class ThreadedSelectReactor(posixbase.PosixReactorBase):
         loop = self._interleave()
         def mainWaker(waker=waker, loop=loop):
             #print >>sys.stderr, "mainWaker()"
-            waker(loop.next)
+            waker(loop.__next__)
         self.mainWaker = mainWaker
-        loop.next()
+        next(loop)
         self.ensureWorkerThread()
 
     def _mainLoopShutdown(self):
@@ -315,11 +315,11 @@ class ThreadedSelectReactor(posixbase.PosixReactorBase):
 
 
     def getReaders(self):
-        return self.reads.keys()
+        return list(self.reads.keys())
 
 
     def getWriters(self):
-        return self.writes.keys()
+        return list(self.writes.keys())
 
 
     def stop(self):
