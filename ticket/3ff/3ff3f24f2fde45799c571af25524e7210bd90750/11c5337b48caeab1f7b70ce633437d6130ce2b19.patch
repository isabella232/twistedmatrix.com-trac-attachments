Index: twisted/internet/test/test_udp.py
===================================================================
--- twisted/internet/test/test_udp.py	(revision 33095)
+++ twisted/internet/test/test_udp.py	(working copy)
@@ -191,4 +191,52 @@
         self.runReactor(reactor)
 
 
+    def test_undeliverableConnectedDatagram(self):
+        """
+        Notifications that datagram could not be delivered result in
+        connected transport's C{protocol.connectionRefused} being called.
+        """
+        reactor = self.buildReactor()
+
+        class Receiver(DatagramProtocol):
+
+            received = ""
+            sender = None
+
+            def datagramReceived(self, datagram, address):
+                self.received = datagram
+                d = maybeDeferred(self.transport.stopListening)
+                d.addCallback(self.sender.sendMore)
+
+        class Sender(DatagramProtocol):
+
+            refused = False
+
+            def __init__(self, host, port):
+                self.host = host
+                self.port = port
+
+            def startProtocol(self):
+                self.transport.connect(self.host, self.port)
+                self.transport.write("hello")
+
+            def sendMore(self, ignored):
+                self.transport.write("how are you")
+
+            def connectionRefused(self):
+                self.refused = True
+                d = maybeDeferred(self.transport.stopListening)
+                d.addBoth(lambda ignored: reactor.stop())
+
+        receiver = Receiver()
+        port = reactor.listenUDP(0, receiver)
+        sender = Sender("127.0.0.1", port.getHost().port)
+        receiver.sender = sender
+        reactor.callWhenRunning(reactor.listenUDP, 0, sender)
+        self.runReactor(reactor)
+        self.assertEqual(receiver.received, "hello")
+        self.assertTrue(sender.refused)
+
+
+
 globals().update(UDPServerTestsBuilder.makeTestCaseClasses())
