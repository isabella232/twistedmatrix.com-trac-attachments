Index: twisted/test/test_defer.py
===================================================================
--- twisted/test/test_defer.py	(revision 38209)
+++ twisted/test/test_defer.py	(working copy)
@@ -1897,6 +1897,20 @@
         self.assertImmediateFailure(d, defer.CancelledError)
 
 
+    def test_semaphoreRepr(self):
+        """
+        The C{repr()} of a L{DeferredSemaphore} contains its class name
+        as well as the max jobs, number of running jobs, and the number
+        of jobs waiting.
+        """
+        sem = defer.DeferredSemaphore(tokens=10)
+        self.assertEqual(
+            repr(sem), "<%s max=%i running=%i waiting=%i" % (sem.__class__.__name__,
+                                                              sem.limit,
+                                                              sem.limit - sem.tokens,
+                                                              len(sem.waiting)))
+
+
     def testQueue(self):
         N, M = 2, 2
         queue = defer.DeferredQueue(N, M)
Index: twisted/topfiles/4907.misc
===================================================================
--- twisted/topfiles/4907.misc	(revision 0)
+++ twisted/topfiles/4907.misc	(revision 0)
@@ -0,0 +1 @@
+twisted.internet.defer.DeferredSemaphore now has a __repr__ method with statistics
Index: twisted/internet/defer.py
===================================================================
--- twisted/internet/defer.py	(revision 38209)
+++ twisted/internet/defer.py	(working copy)
@@ -1343,6 +1343,17 @@
         self.limit = tokens
 
 
+    def __repr__(self):
+        """
+        Returns a string including the class name, max jobs, jobs running, 
+        and jobs waiting.
+        """
+        return "<%s max=%i running=%i waiting=%i" % (self.__class__.__name__,
+                                                     self.limit,
+                                                     self.limit - self.tokens,
+                                                     len(self.waiting))
+
+
     def _cancelAcquire(self, d):
         """
         Remove a deferred d from our waiting list, as the deferred has been
