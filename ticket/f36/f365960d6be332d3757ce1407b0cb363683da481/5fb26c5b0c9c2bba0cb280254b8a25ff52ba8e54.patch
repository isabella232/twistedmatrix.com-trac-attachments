Index: twisted/protocols/amp.py
===================================================================
--- twisted/protocols/amp.py	(revision 46241)
+++ twisted/protocols/amp.py	(working copy)
@@ -175,12 +175,11 @@
 
 import types, warnings
 
-from cStringIO import StringIO
 from struct import pack
 import decimal, datetime
 from itertools import count
 
-from zope.interface import Interface, implements
+from zope.interface import Interface, implementer
 
 from twisted.python.reflect import accumulateClassDict
 from twisted.python.failure import Failure
@@ -191,6 +190,7 @@
 from twisted.python import log, filepath
 
 from twisted.internet.interfaces import IFileDescriptorReceiver
+from twisted.python.compat import NativeStringIO as StringIO
 from twisted.internet.main import CONNECTION_LOST
 from twisted.internet.error import PeerVerifyError, ConnectionLost
 from twisted.internet.error import ConnectionClosed
@@ -703,6 +703,7 @@
 
 
 
+@implementer(IBoxReceiver)
 class BoxDispatcher:
     """
     A L{BoxDispatcher} dispatches '_ask', '_answer', and '_error' L{AmpBox}es,
@@ -728,11 +729,9 @@
     @type boxSender: L{IBoxSender}
     """
 
-    implements(IBoxReceiver)
-
     _failAllReason = None
     _outstandingRequests = None
-    _counter = 0L
+    _counter = 0
     boxSender = None
 
     def __init__(self, locator):
@@ -1012,6 +1011,7 @@
 
 
 
+@implementer(IResponderLocator)
 class CommandLocator:
     """
     A L{CommandLocator} is a collection of responders to AMP L{Command}s, with
@@ -1059,9 +1059,6 @@
             return subcls
 
 
-    implements(IResponderLocator)
-
-
     def _wrapWithSerialization(self, aCallable, command):
         """
         Wrap aCallable with its command's argument de-serialization
@@ -1137,14 +1134,13 @@
 
 
 
+@implementer(IResponderLocator)
 class SimpleStringLocator(object):
     """
     Implement the L{locateResponder} method to do simple, string-based
     dispatch.
     """
 
-    implements(IResponderLocator)
-
     baseDispatchPrefix = 'amp_'
 
     def locateResponder(self, name):
@@ -1200,6 +1196,7 @@
 
 
 
+@implementer(IArgumentType)
 class Argument:
     """
     Base-class of all objects that take values from Amp packets and convert
@@ -1210,7 +1207,6 @@
     which will be used to define the behavior of L{IArgumentType.toBox} and
     L{IArgumentType.fromBox}, respectively.
     """
-    implements(IArgumentType)
 
     optional = False
 
@@ -2062,6 +2058,7 @@
 
 
 
+@implementer(IFileDescriptorReceiver)
 class _DescriptorExchanger(object):
     """
     L{_DescriptorExchanger} is a mixin for L{BinaryBoxProtocol} which adds
@@ -2084,7 +2081,6 @@
         ordinals, starting from 0.  This is used to construct values for
         C{fileDescriptorReceived}.
     """
-    implements(IFileDescriptorReceiver)
 
     def __init__(self):
         self._descriptors = {}
@@ -2113,6 +2109,7 @@
 
 
 
+@implementer(IBoxSender)
 class BinaryBoxProtocol(StatefulStringProtocol, Int16StringReceiver,
                         _DescriptorExchanger):
     """
@@ -2146,8 +2143,6 @@
     method will be invoked for each L{AmpBox} that is received.
     """
 
-    implements(IBoxSender)
-
     _justStartedTLS = False
     _startingTLSBuffer = None
     _locked = False
Index: twisted/python/dist3.py
===================================================================
--- twisted/python/dist3.py	(revision 46241)
+++ twisted/python/dist3.py	(working copy)
@@ -138,6 +138,7 @@
     "twisted.positioning.ipositioning",
     "twisted.positioning.nmea",
     "twisted.protocols",
+    "twisted.protocols.amp",
     "twisted.protocols.basic",
     "twisted.protocols.policies",
     "twisted.protocols.test",
@@ -310,6 +311,7 @@
     "twisted.python.test.test_versions",
     "twisted.python.test.test_zippath",
     "twisted.test.test_abstract",
+    "twisted.test.test_amp",
     "twisted.test.test_application",
     "twisted.test.test_compat",
     "twisted.test.test_context",
Index: twisted/test/test_amp.py
===================================================================
--- twisted/test/test_amp.py	(revision 46241)
+++ twisted/test/test_amp.py	(working copy)
@@ -9,7 +9,7 @@
 import datetime
 import decimal
 
-from zope.interface import implements
+from zope.interface import implementer
 from zope.interface.verify import verifyClass, verifyObject
 
 from twisted.python import filepath
@@ -1682,8 +1682,8 @@
         if spuriousTraffic:
             self.assertRaises(amp.ProtocolSwitched, c.sendHello, 'world')
 
-        def cbConnsLost(((serverSuccess, serverData),
-                         (clientSuccess, clientData))):
+        def cbConnsLost(data):
+            ((serverSuccess, serverData), (clientSuccess, clientData)) = data
             self.failUnless(serverSuccess)
             self.failUnless(clientSuccess)
             self.assertEqual(''.join(serverData), SWITCH_CLIENT_DATA)
@@ -2938,7 +2938,7 @@
         self.assertEqual(objects, {'omitted': None})
 
 
-
+@implementer(interfaces.IUNIXTransport)
 class UNIXStringTransport(object):
     """
     An in-memory implementation of L{interfaces.IUNIXTransport} which collects
@@ -2948,7 +2948,6 @@
         eg via C{write} or C{sendFileDescriptor}.  Elements are two-tuples of a
         string (identifying the destination of the data) and the data itself.
     """
-    implements(interfaces.IUNIXTransport)
 
     def __init__(self, descriptorFuzz):
         """
