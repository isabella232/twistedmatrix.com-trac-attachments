Index: twisted/conch/test/test_conch.py
===================================================================
--- twisted/conch/test/test_conch.py	(revision 18378)
+++ twisted/conch/test/test_conch.py	(working copy)
@@ -2,12 +2,10 @@
 # Copyright (c) 2001-2004 Twisted Matrix Laboratories.
 # See LICENSE for details.
 
-import os, struct, sys, signal
-from twisted.conch import avatar
-from twisted.cred.credentials import IUsernamePassword
+import os, sys
 from twisted.cred import portal
 from twisted.internet import reactor, defer, protocol, error
-from twisted.python import log, failure, runtime
+from twisted.python import log, runtime
 from twisted.trial import unittest
 try:
     import Crypto
@@ -87,8 +85,8 @@
     def processEnded(self, reason):
         log.msg('FORWARDING PROCESS CLOSED')
         self.deferred.callback(None)
-        
 
+
 class ConchTestForwardingPort(protocol.Protocol):
 
     data  = 'test forwarding\n'
@@ -126,9 +124,8 @@
 if Crypto:
     from twisted.conch.client import options, default, connect
     from twisted.conch.error import ConchError
-    from twisted.conch.ssh import keys, transport, factory, forwarding
-    from twisted.conch.ssh import connection, common, session, channel
-    from Crypto.PublicKey import RSA, DSA
+    from twisted.conch.ssh import forwarding
+    from twisted.conch.ssh import connection
 
     from test_ssh import ConchTestServerFactory, ConchTestPublicKeyChecker
 
@@ -288,8 +285,8 @@
         p = ConchTestForwardingProcess(d, lport, self.fac)
         return self.execute('', p,
                             preargs='-N -R %i:127.0.0.1:%i' % (lport, port))
-    
 
+
 class OpenSSHClientTestCase(CmdLineClientTestBase, unittest.TestCase):
 
     def execute(self, args, p, preargs = ''):
Index: twisted/conch/test/test_telnet.py
===================================================================
--- twisted/conch/test/test_telnet.py	(revision 18378)
+++ twisted/conch/test/test_telnet.py	(working copy)
@@ -446,7 +446,7 @@
 
         d.addCallback(self.assertEquals, True)
         d.addCallback(lambda _:  self._enabledHelper(h, eR=['\x42']))
-        return d        
+        return d
 
     def testRefusedEnableRequest(self):
         # Try to enable an option through the user-level API.  This
@@ -500,7 +500,7 @@
 
         def _final(x):
             self.p.dataReceived(telnet.IAC + telnet.WONT + '\x24')
-            # an assertion that only passes if d2 has fired 
+            # an assertion that only passes if d2 has fired
             self._enabledHelper(self.p.protocol, dR=['\x24'])
             # Make sure we allow this
             self.p.protocol.remoteEnableable = ('\x24',)
Index: twisted/conch/test/test_cftp.py
===================================================================
--- twisted/conch/test/test_cftp.py	(revision 18378)
+++ twisted/conch/test/test_cftp.py	(working copy)
@@ -4,7 +4,6 @@
 
 import sys
 
-from twisted.trial import unittest
 try:
     from twisted.conch import unix
     from twisted.conch.scripts import cftp
@@ -25,12 +24,12 @@
 from twisted.cred import portal
 from twisted.internet import reactor, protocol, interfaces, defer, error
 from twisted.internet.utils import getProcessOutputAndValue
-from twisted.python import log, failure
+from twisted.python import log
 from twisted.test import test_process
 
 import test_ssh, test_conch
 from test_filetransfer import SFTPTestBase, FileTransferTestAvatar
-import sys, os, os.path, time, tempfile
+import sys, os, time, tempfile
 
 class FileTransferTestRealm:
 
@@ -243,7 +242,7 @@
         f2 = file(self.testDir + '/test"file2').read()
         self.failUnlessEqual(f1, f2, "put failed")
         self.failUnless(
-            putRes.endswith('Transferred %s/testfile1 to %s/%s/test"file2' 
+            putRes.endswith('Transferred %s/testfile1 to %s/%s/test"file2'
                             % (self.testDir, os.getcwd(), self.testDir)))
         self.failIf(self._getCmdResult('rm "test\\"file2"'))
         self.failIf(os.path.exists(self.testDir + '/test"file2'))
@@ -439,11 +438,11 @@
         self.server.factory.expectedLoseConnection = 1
 
         d = getProcessOutputAndValue(sys.executable, cmds, env=env)
-        
+
         def _cleanup(res):
             os.remove(fn)
             return res
-        
+
         d.addCallback(lambda res: res[0])
         d.addBoth(_cleanup)
 
Index: twisted/conch/test/test_ssh.py
===================================================================
--- twisted/conch/test/test_ssh.py	(revision 18378)
+++ twisted/conch/test/test_ssh.py	(working copy)
@@ -12,7 +12,6 @@
 from twisted.cred import portal
 from twisted.internet import defer, protocol, reactor
 from twisted.internet.error import ProcessTerminated
-from twisted.protocols import loopback
 from twisted.python import failure, log
 from twisted.trial import unittest
 
Index: twisted/conch/test/test_insults.py
===================================================================
--- twisted/conch/test/test_insults.py	(revision 18378)
+++ twisted/conch/test/test_insults.py	(working copy)
@@ -2,14 +2,12 @@
 # Copyright (c) 2001-2004 Twisted Matrix Laboratories.
 # See LICENSE for details.
 
-from StringIO import StringIO
-
 from twisted.trial import unittest
 from twisted.test.proto_helpers import StringTransport
 
 from twisted.conch.insults.insults import ServerProtocol, ClientProtocol
 from twisted.conch.insults.insults import CS_UK, CS_US, CS_DRAWING, CS_ALTERNATE, CS_ALTERNATE_SPECIAL
-from twisted.conch.insults.insults import G0, G1, G2, G3
+from twisted.conch.insults.insults import G0, G1
 from twisted.conch.insults.insults import modes
 
 def _getattr(mock, name):
Index: twisted/conch/test/test_text.py
===================================================================
--- twisted/conch/test/test_text.py	(revision 18378)
+++ twisted/conch/test/test_text.py	(working copy)
@@ -4,7 +4,7 @@
 
 from twisted.trial import unittest
 
-from twisted.conch.insults import helper, text, insults
+from twisted.conch.insults import helper, text
 
 A = text.attributes
 
Index: twisted/conch/test/test_filetransfer.py
===================================================================
--- twisted/conch/test/test_filetransfer.py	(revision 18378)
+++ twisted/conch/test/test_filetransfer.py	(working copy)
@@ -13,7 +13,7 @@
     try:
         del sys.modules['twisted.conch.unix'] # remove the bad import
     except KeyError:
-        # In Python 2.4, the bad import has already been cleaned up for us. 
+        # In Python 2.4, the bad import has already been cleaned up for us.
         # Hooray.
         pass
 
@@ -135,7 +135,7 @@
         self.failUnlessEqual(self._extData, {'conchTest' : 'ext data'})
 
     def testOpenFileIO(self):
-        d = self.client.openFile("testfile1", filetransfer.FXF_READ | 
+        d = self.client.openFile("testfile1", filetransfer.FXF_READ |
                                  filetransfer.FXF_WRITE, {})
         self._emptyBuffers()
 
@@ -144,7 +144,7 @@
             d = _readChunk(openFile)
             d.addCallback(_writeChunk, openFile)
             return d
-            
+
         def _readChunk(openFile):
             d = openFile.readChunk(0, 20)
             self._emptyBuffers()
@@ -167,7 +167,7 @@
         return d
 
     def testClosedFileGetAttrs(self):
-        d = self.client.openFile("testfile1", filetransfer.FXF_READ | 
+        d = self.client.openFile("testfile1", filetransfer.FXF_READ |
                                  filetransfer.FXF_WRITE, {})
         self._emptyBuffers()
 
@@ -191,7 +191,7 @@
         return d
 
     def testOpenFileAttributes(self):
-        d = self.client.openFile("testfile1", filetransfer.FXF_READ | 
+        d = self.client.openFile("testfile1", filetransfer.FXF_READ |
                                  filetransfer.FXF_WRITE, {})
         self._emptyBuffers()
 
@@ -213,7 +213,7 @@
     def testOpenFileSetAttrs(self):
         # XXX test setAttrs
         # Ok, how about this for a start?  It caught a bug :)  -- spiv.
-        d = self.client.openFile("testfile1", filetransfer.FXF_READ | 
+        d = self.client.openFile("testfile1", filetransfer.FXF_READ |
                                  filetransfer.FXF_WRITE, {})
         self._emptyBuffers()
 
@@ -357,7 +357,7 @@
         def _realPath(_):
             d = self.client.realPath('testLink')
             self._emptyBuffers()
-            d.addCallback(self.failUnlessEqual, 
+            d.addCallback(self.failUnlessEqual,
                           os.path.join(os.getcwd(), self.testDir, 'testfile1'))
             return d
         d.addCallback(_readLink)
Index: twisted/conch/test/test_mixin.py
===================================================================
--- twisted/conch/test/test_mixin.py	(revision 18378)
+++ twisted/conch/test/test_mixin.py	(working copy)
@@ -4,7 +4,7 @@
 
 import time
 
-from twisted.internet import reactor, protocol
+from twisted.internet import reactor, protocol, defer
 
 from twisted.trial import unittest
 from twisted.test.proto_helpers import StringTransport
@@ -63,7 +63,7 @@
         f3 = protocol.ClientCreator(reactor, UnbufferingProtocol)
         self.unbuffered = f3.connectTCP('127.0.0.1', self.server.getHost().port)
 
-    def benchmarkBuffering(self, clock=time.clock, sleep=time.sleep):
+    def testBenchmarkBuffering(self, clock=time.clock, sleep=time.sleep):
         def cbGotTransports(results):
             bufp, unbufp = results[0][1], results[1][1]
 
@@ -82,7 +82,10 @@
                     write(ten)
 
                 end = clock()
-                print 'Took', end - start
+            bufp.transport.loseConnection()
+            unbufp.transport.loseConnection()
+            self.server.stopListening()
+            
         return defer.DeferredList(
             [self.buffered, self.unbuffered],
-            fireOnOneErrback=True)
+            fireOnOneErrback=True).addCallback(cbGotTransports)
