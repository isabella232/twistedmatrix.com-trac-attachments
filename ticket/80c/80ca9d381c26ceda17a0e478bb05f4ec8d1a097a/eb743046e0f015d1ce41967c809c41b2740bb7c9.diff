Index: twisted/test/test_ftp.py
===================================================================
--- twisted/test/test_ftp.py	(revision 34577)
+++ twisted/test/test_ftp.py	(working copy)
@@ -901,6 +901,48 @@
                             'incorrect unparsable lines: %s' % repr(others))
         return self.getFilesForLines(['ABC', 'not a file']).addCallback(check)
 
+    def test_filenameWithUnescapedSpace(self):
+        '''
+        Will parse filenames and linktargets containing unescaped
+        space characters.
+        '''
+        line1 = 'drw-r--r--   2 root     other        531 Jan  9  2003 A B'
+        line2 = (
+            'lrw-r--r--   1 root     other          1 Jan 29 03:26 '
+            'B A -> D C/A B'
+            )
+
+        def check((files, others)):
+            self.assertEqual([], others, 'unexpected others entries')
+            self.assertEqual(
+                'A B', files[0]['filename'], 'misparsed filename')
+            self.assertEqual(
+                'B A', files[1]['filename'], 'misparsed filename')
+            self.assertEqual(
+                'D C/A B', files[1]['linktarget'], 'misparsed linktarget')
+        return self.getFilesForLines([line1, line2]).addCallback(check)
+
+    def test_filenameWithEscapedSpace(self):
+        '''
+        Will parse filenames and linktargets containing escaped
+        space characters.
+        '''
+        line1 = 'drw-r--r--   2 root     other        531 Jan  9  2003 A\ B'
+        line2 = (
+            'lrw-r--r--   1 root     other          1 Jan 29 03:26 '
+            'B A -> D\ C/A B'
+            )
+
+        def check((files, others)):
+            self.assertEqual([], others, 'unexpected others entries')
+            self.assertEqual(
+                'A B', files[0]['filename'], 'misparsed filename')
+            self.assertEqual(
+                'B A', files[1]['filename'], 'misparsed filename')
+            self.assertEqual(
+                'D C/A B', files[1]['linktarget'], 'misparsed linktarget')
+        return self.getFilesForLines([line1, line2]).addCallback(check)
+
     def testYear(self):
         # This example derived from bug description in issue 514.
         fileList = ftp.FTPFileListProtocol()
Index: twisted/protocols/ftp.py
===================================================================
--- twisted/protocols/ftp.py	(revision 34577)
+++ twisted/protocols/ftp.py	(working copy)
@@ -2870,12 +2870,24 @@
     date.  Check U{http://cr.yp.to/ftp.html} if you really want to try to parse
     it.
 
+    If also matches the followings:
+        -rw-r--r--   1 root     other        531 Jan 29 03:26 I HAVE\ SPACE
+            - filename:   e.g. 'I HAVE SPACE'
+
+        -rw-r--r--   1 root     other        531 Jan 29 03:26 LINK -> TARGET
+           - filename:   e.g. 'LINK'
+           - linktarget: e.g. 'TARGET'
+
+        -rw-r--r--   1 root     other        531 Jan 29 03:26 N S -> L S
+           - filename:   e.g. 'N S'
+           - linktarget: e.g. 'L S'
+
     @ivar files: list of dicts describing the files in this listing
     """
     fileLinePattern = re.compile(
         r'^(?P<filetype>.)(?P<perms>.{9})\s+(?P<nlinks>\d*)\s*'
         r'(?P<owner>\S+)\s+(?P<group>\S+)\s+(?P<size>\d+)\s+'
-        r'(?P<date>...\s+\d+\s+[\d:]+)\s+(?P<filename>([^ ]|\\ )*?)'
+        r'(?P<date>...\s+\d+\s+[\d:]+)\s+(?P<filename>.{1,}?)'
         r'( -> (?P<linktarget>[^\r]*))?\r?$'
     )
     delimiter = '\n'
Index: twisted/topfiles/4986.bug
===================================================================
--- twisted/topfiles/4986.bug	(revision 0)
+++ twisted/topfiles/4986.bug	(revision 0)
@@ -0,0 +1 @@
+twisted.protocols.ftp.FTPFileListProtocol fixed to support files with space characters in their name.
\ No newline at end of file
