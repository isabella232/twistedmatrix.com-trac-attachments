Index: twisted/web/tap.py
===================================================================
--- twisted/web/tap.py	(revision 37884)
+++ twisted/web/tap.py	(working copy)
@@ -9,10 +9,10 @@
 
 # Twisted Imports
 from twisted.web import server, static, twcgi, script, demo, distrib, wsgi
-from twisted.internet import interfaces, reactor
+from twisted.internet import interfaces, reactor, endpoints
 from twisted.python import usage, reflect, threadpool
 from twisted.spread import pb
-from twisted.application import internet, service, strports
+from twisted.application import internet, service
 
 
 class Options(usage.Options):
@@ -21,8 +21,7 @@
     """
     synopsis = "[web options]"
 
-    optParameters = [["port", "p", None, "strports description of the port to "
-                      "start the server on."],
+    optParameters = [["port", "p", None, "The port to start the server on."],
                      ["logfile", "l", None, "Path to web CLF (Combined Log Format) log file."],
                      ["https", None, None, "Port to listen on for Secure HTTP."],
                      ["certificate", "c", "server.pem", "SSL certificate to use for HTTPS. "],
@@ -217,8 +216,10 @@
     site.displayTracebacks = not config["notracebacks"]
 
     if config['personal']:
-        personal = strports.service(
-            config['port'], makePersonalServerFactory(site))
+        personal = internet.StreamServerEndpointService(
+            endpoints._serverFromStringLegacy(reactor, config['port'], None),
+            makePersonalServerFactory(site))
+        personal._raiseSynchronously = True
         personal.setServiceParent(s)
     else:
         if config['https']:
@@ -227,6 +228,10 @@
                           DefaultOpenSSLContextFactory(config['privkey'],
                                                        config['certificate']))
             i.setServiceParent(s)
-        strports.service(config['port'], site).setServiceParent(s)
+        svc = internet.StreamServerEndpointService(
+                endpoints._serverFromStringLegacy(reactor, config['port'], None),
+                site)
+        svc._raiseSynchronously = True
+        svc.setServiceParent(s)
 
     return s
