Index: twisted/words/test/test_msn.py
===================================================================
--- twisted/words/test/test_msn.py	(revision 30568)
+++ twisted/words/test/test_msn.py	(working copy)
@@ -494,9 +494,21 @@
         d.addCallback(check)
         return d
 
+class ExceptionTests(unittest.TestCase):
 
+    def setUp(self):
+        #Simulating a failed import of PyOpenSSL
+        msn.ClientContextFactory = None
+        #exception we expect it to raise
+        self.exception = msn.PyOpenSSLRequired
+    
+    def test_pyopensslrequired(self):
+        #We care not for the values of _logins args, only that the 
+        #ClientContextFactory is caught in the correct place
+        self.assertRaises(self.exception, msn._login, None, None, None)
+
 if msn is None:
-    for testClass in [PassportTests, NotificationTests,
+    for testClass in [ExceptionTests, PassportTests, NotificationTests,
                       MessageHandlingTests, FileTransferTestCase]:
         testClass.skip = (
             "MSN requires an HTTP client but none is available, "
Index: twisted/words/protocols/msn.py
===================================================================
--- twisted/words/protocols/msn.py	(revision 30568)
+++ twisted/words/protocols/msn.py	(working copy)
@@ -1,5 +1,5 @@
 # -*- test-case-name: twisted.words.test -*-
-# Copyright (c) 2001-2008 Twisted Matrix Laboratories.
+# Copyright (c) 2001-2011 Twisted Matrix Laboratories.
 # See LICENSE for details.
 
 """
@@ -125,6 +125,19 @@
 CR = "\r"
 LF = "\n"
 
+
+class PyOpenSSLRequired(Exception):
+    """
+    If there is an import error with PyOpenSSL then it is silently
+    set to None, this causes _login to fail with a TypeError,
+    this is because ClientContextFactory is None.
+    
+    @since: 11.0
+    """
+    pass
+
+
+
 def checkParamLen(num, expected, cmd, error=None):
     if error == None:
         error = "Invalid Number of Parameters for %s" % cmd
@@ -163,8 +176,12 @@
 def _login(userHandle, passwd, nexusServer, cached=0, authData=''):
     """
     This function is used internally and should not ever be called
-    directly.
+    directly. If ClientContextFactory is None, PyOpenSSLRequired is
+    raised.
     """
+    if ClientContextFactory is None:
+        raise PyOpenSSLRequired('PyOpenSSL is required for logging in.')
+
     cb = Deferred()
     def _cb(server, auth):
         loginFac = ClientFactory()
