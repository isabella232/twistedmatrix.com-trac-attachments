Index: twisted/mail/smtp.py
===================================================================
--- twisted/mail/smtp.py	(revision 27280)
+++ twisted/mail/smtp.py	(working copy)
@@ -1633,7 +1633,7 @@
         if code not in SUCCESS:
             errlog = []
             for addr, acode, aresp in addresses:
-                if code not in SUCCESS:
+                if acode not in SUCCESS:
                     errlog.append("%s: %03d %s" % (addr, acode, aresp))
 
             errlog.append(log.str())
Index: twisted/mail/test/test_smtp.py
===================================================================
--- twisted/mail/test/test_smtp.py	(revision 27280)
+++ twisted/mail/test/test_smtp.py	(working copy)
@@ -1409,3 +1409,33 @@
             "100 test error\n"
             "testlog\n"
             "secondline\n")
+
+
+
+class SenderMixinSentMail(unittest.TestCase):
+    """
+    Test L{smtp.SenderMixin.sentMail}, used in particular by
+    L{smtp.SMTPSenderFactory} and L{smtp.ESMTPSenderFactory}.
+    """
+    def test_SMTPSenderFactorySentMail(self):
+        """
+        sentMail should only add addresses with failing SMTP response codes to
+        the log passed to the factory's errback.
+        """
+        onDone = self.assertFailure(defer.Deferred(), smtp.SMTPDeliveryError)
+        onDone.addCallback(lambda e: self.assertEquals(
+                e.log, "bob@example.com: 199 Error in sending.\n"))
+
+        clientFactory = smtp.SMTPSenderFactory(
+            'source@address', 'recipient@address',
+            StringIO("Message body"), onDone,
+            retries=0, timeout=0.5)
+
+        client = clientFactory.buildProtocol(
+            address.IPv4Address('TCP', 'example.net', 25))
+
+        addresses = [("alice@example.com", 200, "No errors here!"),
+                     ("bob@example.com", 199, "Error in sending.")]
+        client.sentMail(199, "Test response", 1, addresses, client.log)
+
+        return onDone
