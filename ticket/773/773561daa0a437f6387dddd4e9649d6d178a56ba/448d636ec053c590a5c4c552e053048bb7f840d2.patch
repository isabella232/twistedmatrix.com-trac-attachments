Index: twisted/web/test/test_httpauth.py
===================================================================
--- twisted/web/test/test_httpauth.py	(revision 34408)
+++ twisted/web/test/test_httpauth.py	(working copy)
@@ -244,7 +244,7 @@
         self.assertEqual(request.responseCode, 401)
         self.assertEqual(
             request.responseHeaders.getRawHeaders('www-authenticate'),
-            ['basic realm="example.com"'])
+            ['Basic realm="example.com"'])
 
 
     def test_render(self):
@@ -282,7 +282,7 @@
         request.render(resource)
         self.assertEqual(
             request.responseHeaders.getRawHeaders('www-authenticate'),
-            ['basic realm="example\\\\\\"foo"'])
+            ['Basic realm="example\\\\\\"foo"'])
 
 
 
@@ -571,7 +571,7 @@
             pass
 
         class BadFactory(object):
-            scheme = 'bad'
+            scheme = 'Bad'
 
             def getChallenge(self, client):
                 return {}
Index: twisted/web/_auth/digest.py
===================================================================
--- twisted/web/_auth/digest.py	(revision 34408)
+++ twisted/web/_auth/digest.py	(working copy)
@@ -19,7 +19,7 @@
     """
     implements(ICredentialFactory)
 
-    scheme = 'digest'
+    scheme = 'Digest'
 
     def __init__(self, algorithm, authenticationRealm):
         """
Index: twisted/web/_auth/wrapper.py
===================================================================
--- twisted/web/_auth/wrapper.py	(revision 34408)
+++ twisted/web/_auth/wrapper.py	(working copy)
@@ -218,7 +218,7 @@
             factory can decode the header value.
         """
         elements = header.split(' ')
-        scheme = elements[0].lower()
+        scheme = elements[0].title()
         for fact in self._credentialFactories:
             if fact.scheme == scheme:
                 return (fact, ' '.join(elements[1:]))
Index: twisted/web/_auth/basic.py
===================================================================
--- twisted/web/_auth/basic.py	(revision 34408)
+++ twisted/web/_auth/basic.py	(working copy)
@@ -28,7 +28,7 @@
     """
     implements(ICredentialFactory)
 
-    scheme = 'basic'
+    scheme = 'Basic'
 
     def __init__(self, authenticationRealm):
         self.authenticationRealm = authenticationRealm
