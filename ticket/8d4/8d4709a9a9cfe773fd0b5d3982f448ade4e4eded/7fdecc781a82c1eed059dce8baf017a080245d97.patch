Index: twisted/test/test_amp.py
===================================================================
--- twisted/test/test_amp.py	(revision 31158)
+++ twisted/test/test_amp.py	(working copy)
@@ -371,7 +371,11 @@
 
 
 
-class AmpBoxTest(unittest.TestCase):
+class AmpBoxTests(unittest.TestCase):
+    """
+    Test a few essential properties of AMP boxes, mostly with respect to
+    serialization correctness.
+    """
 
     def test_serializeStr(self):
         """
@@ -380,11 +384,18 @@
         a = amp.AmpBox(key='value')
         self.assertEquals(type(a.serialize()), str)
 
-    def test_serializeUnicodeRaises(self):
+    def test_serializeUnicodeKeyRaises(self):
         """
-        Verify that TypeError is raised when trying to serialize unicode
-        objects.
+        Verify that TypeError is raised when trying to serialize Unicode keys.
         """
+        a = amp.AmpBox(**{u'key': 'value'})
+        self.assertRaises(TypeError, a.serialize)
+
+    def test_serializeUnicodeValueRaises(self):
+        """
+        Verify that TypeError is raised when trying to serialize Unicode
+        values.
+        """
         a = amp.AmpBox(key=u'value')
         self.assertRaises(TypeError, a.serialize)
 
Index: twisted/protocols/amp.py
===================================================================
--- twisted/protocols/amp.py	(revision 31158)
+++ twisted/protocols/amp.py	(working copy)
@@ -545,9 +545,10 @@
         w = L.append
         for k, v in i:
             if type(k) == unicode:
-                raise TypeError("Unicode key not allowed: %s" % k)
+                raise TypeError("Unicode key not allowed: %r" % k)
             if type(v) == unicode:
-                raise TypeError("Unicode value not allowed: %s" % v)
+                raise TypeError(
+                    "Unicode value for key %r not allowed: %r" % (k, v))
             if len(k) > MAX_KEY_LENGTH:
                 raise TooLong(True, True, k, None)
             if len(v) > MAX_VALUE_LENGTH:
