=== modified file 'twisted/web/_newclient.py'
--- twisted/web/_newclient.py	2010-02-25 03:48:17 +0000
+++ twisted/web/_newclient.py	2010-10-21 17:24:25 +0000
@@ -1291,7 +1291,8 @@
                 self._finishedRequest.errback(
                     Failure(RequestGenerationFailed([err])))
             else:
-                log.err(err, "foo")
+                log.err(err, 'Error writing request, but not in valid state '
+                             'to finalize request: %s' % self._state)
 
         _requestDeferred.addCallbacks(cbRequestWrotten, ebRequestWriting)
 

=== modified file 'twisted/web/test/test_newclient.py'
--- twisted/web/test/test_newclient.py	2010-02-25 03:48:17 +0000
+++ twisted/web/test/test_newclient.py	2010-10-21 17:46:31 +0000
@@ -10,6 +10,7 @@
 from zope.interface import implements
 from zope.interface.verify import verifyObject
 
+from twisted.python import log
 from twisted.python.failure import Failure
 from twisted.internet.interfaces import IConsumer, IPushProducer
 from twisted.internet.error import ConnectionDone
@@ -940,6 +941,26 @@
         """
         return self.test_connectionLostDuringRequestGeneration('errback')
 
+    def test_errorMessageOnConnectionLostBeforeGenerationFailedDoesNotConfuse(self):
+        """
+        If the request passed to L{HTTP11ClientProtocol} finished generation
+        with an error after the L{HTTP11ClientProtocol}'s connection has been
+        lost, an error is logged that gives a non-confusing hint to user on what
+        went wrong.
+        """
+        messages = []
+
+        errors = []
+        log.addObserver(errors.append)
+        self.addCleanup(log.removeObserver, errors.append)
+
+        def check(ignore):
+            error = errors[0]
+            self.assertEquals(error['why'],
+                'Error writing request, but not in valid state to finalize request: CONNECTION_LOST')
+
+        return self.test_connectionLostDuringRequestGeneration('errback').addCallback(check)
+
 
     def test_receiveSimplestResponse(self):
         """

