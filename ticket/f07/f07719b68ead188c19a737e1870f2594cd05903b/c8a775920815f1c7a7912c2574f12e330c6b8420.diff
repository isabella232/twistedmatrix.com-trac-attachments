commit d6e270a465d371c3bed01bf369af497b77eb9f1e
Author: Christopher tofu Zorn <tofu@stanziq.com>
Date:   Thu Oct 29 14:34:47 2009 -0400

    add tests for setMechanism, also some doc formatting and exception bug fixes

diff --git a/twisted/words/protocols/jabber/sasl.py b/twisted/words/protocols/jabber/sasl.py
index 94435c7..97a6da9 100644
--- a/twisted/words/protocols/jabber/sasl.py
+++ b/twisted/words/protocols/jabber/sasl.py
@@ -138,7 +138,7 @@ class SASLInitiatingInitializer(xmlstream.BaseFeatureInitiatingInitializer):
             if 'ANONYMOUS' in mechanisms:
                 self.mechanism = sasl_mechanisms.Anonymous()
             else:
-                raise sasl.SASLNoAccetableMechanisms()
+                raise SASLNoAcceptableMechanism()
 
     def start(self):
         """
diff --git a/twisted/words/protocols/jabber/sasl_mechanisms.py b/twisted/words/protocols/jabber/sasl_mechanisms.py
index 6b84ef6..1636732 100644
--- a/twisted/words/protocols/jabber/sasl_mechanisms.py
+++ b/twisted/words/protocols/jabber/sasl_mechanisms.py
@@ -38,7 +38,8 @@ class ISASLMechanism(Interface):
 
 
 class Anonymous(object):
-    """Implements the ANONYMOUS SASL authentication mechanism.
+    """
+    Implements the ANONYMOUS SASL authentication mechanism.
 
     This mechanism is defined in RFC 2245.
     """
diff --git a/twisted/words/test/test_jabbersasl.py b/twisted/words/test/test_jabbersasl.py
index 81b2484..4e46f19 100644
--- a/twisted/words/test/test_jabbersasl.py
+++ b/twisted/words/test/test_jabbersasl.py
@@ -4,7 +4,7 @@
 from zope.interface import implements
 from twisted.internet import defer
 from twisted.trial import unittest
-from twisted.words.protocols.jabber import sasl, sasl_mechanisms, xmlstream
+from twisted.words.protocols.jabber import sasl, sasl_mechanisms, xmlstream, jid
 from twisted.words.xish import domish
 
 NS_XMPP_SASL = 'urn:ietf:params:xml:ns:xmpp-sasl'
@@ -169,3 +169,103 @@ class SASLInitiatingInitializerTest(unittest.TestCase):
         self.init.onChallenge(challenge)
         self.assertFailure(d, sasl.SASLIncorrectEncodingError)
         return d
+
+
+class SASLInitiatingInitializerFeaturesTest(unittest.TestCase):
+    """
+    Testing mechanism features for L{twisted.words.protocols.jabber.sasl.SASLInitiatingInitializer}.
+    """
+
+    def setUp(self):
+        self.output = []
+
+        self.authenticator = xmlstream.Authenticator()
+        self.xmlstream = xmlstream.XmlStream(self.authenticator)
+        self.xmlstream.send = self.output.append
+        self.xmlstream.connectionMade()
+        self.xmlstream.dataReceived("<stream:stream xmlns='jabber:client' "
+                        "xmlns:stream='http://etherx.jabber.org/streams' "
+                        "from='example.com' id='12345' version='1.0'>")
+
+        self.init = sasl.SASLInitiatingInitializer(self.xmlstream)
+
+
+    def _setMechanism(self, name):
+        
+        feature = domish.Element((NS_XMPP_SASL,
+                                  'mechanisms'))
+        feature.addElement('mechanism', content=name)
+        self.xmlstream.features[(feature.uri, feature.name)] = feature
+
+        self.init.setMechanism()
+        return self.init.mechanism.name
+        
+    def testSettingAnonymousMechanism(self):
+        """
+        Test setting ANONYMOUS as the authentication mechanism.
+        """
+        self.authenticator.jid = jid.JID('example.com')
+        self.authenticator.password = None
+        name = "ANONYMOUS"
+        
+        self.failUnless(self._setMechanism(name)==name)
+        
+
+    def testSettingPlainMechanism(self):
+        """
+        Test setting PLAIN as the authentication mechanism.
+        """
+        self.authenticator.jid = jid.JID('test@example.com')
+        self.authenticator.password = 'secret'
+        name = "PLAIN"
+
+        self.failUnless(self._setMechanism(name)==name)
+
+
+    def testSettingDigestMD5Mechanism(self):
+        """
+        Test setting DIGEST-MD5 as the authentication mechanism.
+        
+        """
+        self.authenticator.jid = jid.JID('test@example.com')
+        self.authenticator.password = 'secret'
+        name = "DIGEST-MD5"
+
+        self.failUnless(self._setMechanism(name)==name)
+        
+
+    def testSettingInvalidMechanism(self):
+        """
+        Test using a bad SASL authentication mechanism.
+        """
+
+        self.authenticator.jid = jid.JID('test@example.com')
+        self.authenticator.password = 'secret'
+
+        feature = domish.Element((NS_XMPP_SASL,
+                                  'mechanisms'))
+        feature.addElement('mechanism', content="BAD")
+        self.xmlstream.features[(feature.uri, feature.name)] = feature
+        try:
+            self.init.setMechanism()
+            failed = False
+        except sasl.SASLNoAcceptableMechanism:
+            failed = True
+
+        self.failUnless(failed)
+
+        ## also test anonymous fail        
+        self.authenticator.jid = jid.JID('example.com')
+        self.authenticator.password = 'secret'
+
+        feature = domish.Element((NS_XMPP_SASL,
+                                  'mechanisms'))
+        feature.addElement('mechanism', content="BAD")
+        self.xmlstream.features[(feature.uri, feature.name)] = feature
+        try:
+            self.init.setMechanism()
+            failed = False
+        except sasl.SASLNoAcceptableMechanism:
+            failed = True
+
+        self.failUnless(failed)
diff --git a/twisted/words/test/test_jabbersaslmechanisms.py b/twisted/words/test/test_jabbersaslmechanisms.py
index f848579..6b92d54 100644
--- a/twisted/words/test/test_jabbersaslmechanisms.py
+++ b/twisted/words/test/test_jabbersaslmechanisms.py
@@ -19,6 +19,9 @@ class PlainTest(unittest.TestCase):
 
 
 class AnonymousTest(unittest.TestCase):
+    """
+    Tests for L{twisted.words.protocols.jabber.sasl_mechanisms.Anonymous}.
+    """
     def test_getInitialResponse(self):
         """
         Test the initial response.

commit 2c56ad30da7c3746675f9730a56390d524e85117
Author: Christopher tofu Zorn <tofu@stanziq.com>
Date:   Thu Oct 29 10:40:20 2009 -0400

    anonymous sasl initializer, need to add it to the authenticator

diff --git a/twisted/words/protocols/jabber/sasl.py b/twisted/words/protocols/jabber/sasl.py
index 9a9b8e3..94435c7 100644
--- a/twisted/words/protocols/jabber/sasl.py
+++ b/twisted/words/protocols/jabber/sasl.py
@@ -126,13 +126,19 @@ class SASLInitiatingInitializer(xmlstream.BaseFeatureInitiatingInitializer):
         password = self.xmlstream.authenticator.password
 
         mechanisms = get_mechanisms(self.xmlstream)
-        if 'DIGEST-MD5' in mechanisms:
-            self.mechanism = sasl_mechanisms.DigestMD5('xmpp', jid.host, None,
-                                                       jid.user, password)
-        elif 'PLAIN' in mechanisms:
-            self.mechanism = sasl_mechanisms.Plain(None, jid.user, password)
+        if jid.user is not None:
+            if 'DIGEST-MD5' in mechanisms:
+                self.mechanism = sasl_mechanisms.DigestMD5('xmpp', jid.host, None,
+                                                           jid.user, password)
+            elif 'PLAIN' in mechanisms:
+                self.mechanism = sasl_mechanisms.Plain(None, jid.user, password)
+            else:
+                raise SASLNoAcceptableMechanism()
         else:
-            raise SASLNoAcceptableMechanism()
+            if 'ANONYMOUS' in mechanisms:
+                self.mechanism = sasl_mechanisms.Anonymous()
+            else:
+                raise sasl.SASLNoAccetableMechanisms()
 
     def start(self):
         """
diff --git a/twisted/words/protocols/jabber/sasl_mechanisms.py b/twisted/words/protocols/jabber/sasl_mechanisms.py
index 83d2280..6b84ef6 100644
--- a/twisted/words/protocols/jabber/sasl_mechanisms.py
+++ b/twisted/words/protocols/jabber/sasl_mechanisms.py
@@ -37,6 +37,17 @@ class ISASLMechanism(Interface):
 
 
 
+class Anonymous(object):
+    """Implements the ANONYMOUS SASL authentication mechanism.
+
+    This mechanism is defined in RFC 2245.
+    """
+    implements(ISASLMechanism)
+    name = 'ANONYMOUS'
+    
+    def getInitialResponse(self):
+        return None
+
 class Plain(object):
     """
     Implements the PLAIN SASL authentication mechanism.
diff --git a/twisted/words/test/test_jabbersaslmechanisms.py b/twisted/words/test/test_jabbersaslmechanisms.py
index 67b9876..f848579 100644
--- a/twisted/words/test/test_jabbersaslmechanisms.py
+++ b/twisted/words/test/test_jabbersaslmechanisms.py
@@ -17,6 +17,15 @@ class PlainTest(unittest.TestCase):
         m = sasl_mechanisms.Plain(None, 'test', 'secret')
         self.assertEquals(m.getInitialResponse(), '\x00test\x00secret')
 
+
+class AnonymousTest(unittest.TestCase):
+    def test_getInitialResponse(self):
+        """
+        Test the initial response.
+        """
+        m = sasl_mechanisms.Anonymous()
+        self.assertEquals(m.getInitialResponse(), None)
+
 class DigestMD5Test(unittest.TestCase):
     def setUp(self):
         self.mechanism = sasl_mechanisms.DigestMD5('xmpp', 'example.org', None,
