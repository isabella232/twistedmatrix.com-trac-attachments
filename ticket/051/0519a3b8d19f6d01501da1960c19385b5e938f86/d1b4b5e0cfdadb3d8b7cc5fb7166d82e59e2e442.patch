=== modified file 'twisted/conch/ssh/factory.py'
--- twisted/conch/ssh/factory.py	2011-02-14 04:45:15 +0000
+++ twisted/conch/ssh/factory.py	2011-05-10 20:09:13 +0000
@@ -124,7 +124,7 @@
         @rtype:     C{tuple}
         """
         primesKeys = self.primes.keys()
-        primesKeys.sort(lambda x, y: cmp(abs(x - bits), abs(y - bits)))
+        primesKeys.sort(key=lambda x: abs(x - bits))
         realBits = primesKeys[0]
         return random.choice(self.primes[realBits])
 

=== modified file 'twisted/internet/defer.py'
--- twisted/internet/defer.py	2011-06-24 07:38:26 +0000
+++ twisted/internet/defer.py	2011-07-02 18:52:29 +0000
@@ -683,20 +683,60 @@
         return 'FirstError[#%d, %s]' % (self.index, self.subFailure)
 
 
-    def __cmp__(self, other):
-        """
-        Comparison between L{FirstError} and other L{FirstError} instances
-        is defined as the comparison of the index and sub-failure of each
-        instance.  L{FirstError} instances don't compare equal to anything
-        that isn't a L{FirstError} instance.
-
-        @since: 8.2
-        """
-        if isinstance(other, FirstError):
-            return cmp(
-                (self.index, self.subFailure),
-                (other.index, other.subFailure))
-        return -1
+    def _cmp_attrs(self):
+        """
+        Return the attributes used for comparison.
+        """
+        return (self.index, self.subFailure)
+
+    def __eq__(self, other):
+        """
+        Comparison between L{FirstError} and other L{FirstError} instances
+        is defined as the comparison of the index and sub-failure of each
+        instance.  L{FirstError} instances don't compare equal to anything
+        that isn't a L{FirstError} instance.
+
+        @since: 8.2
+        """
+        if isinstance(other, FirstError):
+            return self._cmp_attrs() == other._cmp_attrs()
+        return False
+
+
+    def __ne__(self, other):
+        """
+        Comparison between L{FirstError} and other L{FirstError} instances
+        is defined as the comparison of the index and sub-failure of each
+        instance.  L{FirstError} instances don't compare equal to anything
+        that isn't a L{FirstError} instance.
+
+        @since: 8.2
+        """
+        return not self.__eq__(other)
+
+
+    def __lt__(self, other):
+        """
+        Comparison between L{FirstError} and other L{FirstError} instances
+        is defined as the comparison of the index and sub-failure of each
+        instance.  L{FirstError} instances are arbitrarily smaller than
+        other objects.
+        """
+        if isinstance(other, FirstError):
+            return self._cmp_attrs() < other._cmp_attrs()
+        return True
+
+
+    def __le__(self, other):
+        """
+        Comparison between L{FirstError} and other L{FirstError} instances
+        is defined as the comparison of the index and sub-failure of each
+        instance.  L{FirstError} instances are arbitrarily smaller than
+        other objects.
+        """
+        if isinstance(other, FirstError):
+            return self._cmp_attrs() <= other._cmp_attrs()
+        return True
 
 
 

=== modified file 'twisted/internet/task.py'
--- twisted/internet/task.py	2011-06-24 00:42:51 +0000
+++ twisted/internet/task.py	2011-07-02 17:53:52 +0000
@@ -683,7 +683,7 @@
         """
         Sort the pending calls according to the time they are scheduled.
         """
-        self.calls.sort(lambda a, b: cmp(a.getTime(), b.getTime()))
+        self.calls.sort(key=lambda x: x.getTime())
 
 
     def callLater(self, when, what, *a, **kw):

=== added file 'twisted/internet/test/test_defer.py'
--- twisted/internet/test/test_defer.py	1970-01-01 00:00:00 +0000
+++ twisted/internet/test/test_defer.py	2011-07-02 18:52:18 +0000
@@ -0,0 +1,69 @@
+# Copyright (c) Twisted Matrix Laboratories.
+# See LICENSE for details.
+
+"""
+Tests for L{twisted.internet.defer}.
+"""
+
+from twisted.trial.unittest import TestCase
+from twisted.internet.defer import FirstError
+
+
+class FirstErrorTests(TestCase):
+    """
+    Tests for L{twisted.internet.defer.FirstError}
+    """
+
+    def test_cmp_other(self):
+        """
+        Compare a FirstError to something else.
+        """
+        fe = FirstError('failure', 'index')
+        other = Exception()
+        self.assertFalse(fe == other)
+        self.assertTrue(fe != other)
+
+
+    def test_cmp_attributes(self):
+        """
+        Check the comparison attributes.
+        """
+        fe = FirstError('failure', 'index')
+        self.assertEqual(fe._cmp_attrs(), ('index', 'failure'))
+
+
+    def test_cmp_equal(self):
+        """
+        Compare instances by equality.
+        """
+        fe1 = FirstError('failure', 'index')
+        fe2 = FirstError('failure', 'index')
+        fe3 = FirstError('failure', 'other')
+        self.assertTrue(fe1 == fe2)
+        self.assertFalse(fe1 != fe2)
+        self.assertTrue(fe1 != fe3)
+        self.assertFalse(fe1 == fe3)
+
+
+    def test_cmp_lessthan(self):
+        """
+        Compare instances by less than.
+        """
+        fe1 = FirstError('failure', 'index')
+        fe2 = FirstError('failure', 'index')
+        fe3 = FirstError('greater', 'index')
+        self.assertTrue(fe1 < fe3)
+        self.assertFalse(fe1 < fe2)
+        self.assertTrue(fe1 <= fe2)
+
+
+    def test_cmp_greaterthan(self):
+        """
+        Compare instances by greater than.
+        """
+        fe1 = FirstError('failure', 'index')
+        fe2 = FirstError('failure', 'index')
+        fe3 = FirstError('a smaller', 'index')
+        self.assertTrue(fe1 > fe3)
+        self.assertFalse(fe1 > fe2)
+        self.assertTrue(fe1 >= fe2)

