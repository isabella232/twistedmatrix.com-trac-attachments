Index: /Users/vincent/Documents/workspace/twisted/web2/static.py
===================================================================
--- /Users/vincent/Documents/workspace/twisted/web2/static.py	(revision 17511)
+++ /Users/vincent/Documents/workspace/twisted/web2/static.py	(working copy)
@@ -374,25 +374,11 @@
             return responsecode.NOT_FOUND
 
         if self.fp.isdir():
-            if req.uri[-1] != "/":
-                # Redirect to include trailing '/' in URI
-                return http.RedirectResponse(req.unparseURL(path=req.path+'/'))
-            else:
-                ifp = self.fp.childSearchPreauth(*self.indexNames)
-                if ifp:
-                    # Render from the index file
-                    standin = self.createSimilarFile(ifp.path)
-                else:
-                    # Render from a DirectoryLister
-                    standin = dirlist.DirectoryLister(
-                        self.fp.path,
-                        self.listChildren(),
-                        self.contentTypes,
-                        self.contentEncodings,
-                        self.defaultType
-                    )
-                return standin.render(req)
+            return self.renderDirectory(req)
+
+        return self.renderFile()
 
+    def renderFile(self):
         try:
             f = self.fp.open()
         except IOError, e:
@@ -403,10 +389,10 @@
                 return responsecode.NOT_FOUND
             else:
                 raise
-
+        
         response = http.Response()
         response.stream = stream.FileStream(f, 0, self.fp.getsize())
-
+        
         for (header, value) in (
             ("content-type", self.contentType()),
             ("content-encoding", self.contentEncoding()),
@@ -413,9 +399,29 @@
         ):
             if value is not None:
                 response.headers.setHeader(header, value)
-
+        
         return response
 
+    def renderDirectory(self, req):
+        if req.uri[-1] != "/":
+            # Redirect to include trailing '/' in URI
+            return http.RedirectResponse(req.unparseURL(path=req.path+'/'))
+        else:
+            ifp = self.fp.childSearchPreauth(*self.indexNames)
+            if ifp:
+                # Render from the index file
+                standin = self.createSimilarFile(ifp.path)
+            else:
+                # Render from a DirectoryLister
+                standin = dirlist.DirectoryLister(
+                    self.fp.path,
+                    self.listChildren(),
+                    self.contentTypes,
+                    self.contentEncodings,
+                    self.defaultType
+                )
+            return standin.render(req)
+
     def createSimilarFile(self, path):
         return self.__class__(path, self.defaultType, self.ignoredExts,
                               self.processors, self.indexNames[:])
