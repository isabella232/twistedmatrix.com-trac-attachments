Index: twisted/test/test_web.py
===================================================================
RCS file: /cvs/Twisted/twisted/test/test_web.py,v
retrieving revision 1.44
diff -u -r1.44 test_web.py
--- twisted/test/test_web.py	9 Oct 2003 10:40:36 -0000	1.44
+++ twisted/test/test_web.py	17 Jan 2004 18:09:41 -0000
@@ -76,6 +76,7 @@
         r = resource.Resource()
         self.failUnlessEqual([], r.listEntities())
         
+
 class SimpleResource(resource.Resource):
     def render(self, request):
         if http.CACHED in (request.setLastModified(10),
@@ -92,6 +93,7 @@
         site = server.Site(sres1)
         assert site.getResourceFor(DummyRequest([''])) is sres2, "Got the wrong resource."
 
+
 # Conditional requests:
 # If-None-Match, If-Modified-Since
 
@@ -359,7 +361,46 @@
             request.gotLength(0)
             request.requestReceived('GET', '/foo/bar/baz', 'HTTP/1.0')
             self.assertEqual(request.getRootURL(), "http://example.com/foo")
-        
+
+
+class NewRenderResource(resource.Resource):
+    def render_GET(self, request):
+        return "hi hi"
+
+    def render_HEH(self, request):
+        return "ho ho"
+
+
+class NewRenderTestCase(unittest.TestCase):
+    def _getReq(self):
+        d = DummyChannel()
+        d.site.resource.putChild('newrender', NewRenderResource())
+        d.transport = DummyChannel.Baz()
+        d.transport.port = 81
+        request = server.Request(d, 1)
+        request.setHost('example.com', 81)
+        request.gotLength(0)
+        return request
+
+    def testGoodMethods(self):
+        req = self._getReq()
+        req.requestReceived('GET', '/newrender', 'HTTP/1.0')
+        self.assertEquals(req.transport.getvalue().splitlines()[-1], 'hi hi')
+
+        req = self._getReq()
+        req.requestReceived('HEH', '/newrender', 'HTTP/1.0')
+        self.assertEquals(req.transport.getvalue().splitlines()[-1], 'ho ho')
+
+    def testBadMethods(self):
+        req = self._getReq()
+        req.requestReceived('CONNECT', '/newrender', 'HTTP/1.0')
+        self.assertEquals(req.code, 501)
+
+        req = self._getReq()
+        req.requestReceived('hlalauguG', '/newrender', 'HTTP/1.0')
+        self.assertEquals(req.code, 501)
+
+
 class SDResource(resource.Resource):
     def __init__(self,default):  self.default=default
     def getChildWithDefault(self,name,request):
Index: twisted/web/resource.py
===================================================================
RCS file: /cvs/Twisted/twisted/web/resource.py,v
retrieving revision 1.35
diff -u -r1.35 resource.py
--- twisted/web/resource.py	16 Jan 2004 18:27:46 -0000	1.35
+++ twisted/web/resource.py	17 Jan 2004 18:09:41 -0000
@@ -186,8 +186,14 @@
         this class's responsibility to write the results to
         request.write(data), then call request.finish().
         """
-        raise NotImplementedError("%s.render called" %
-                                  reflect.qual(self.__class__))
+
+        m = getattr(self, 'render_' + request.method, None)
+        if not m:
+            from twisted.web.server import UnsupportedMethod
+            raise UnsupportedMethod("%s doesn't support %s" %
+                                    (reflect.qual(self.__class__), request.method))
+        return m(request)
+        
 
 
 #t.w imports
