Index: twisted/mail/test/test_mail.py
===================================================================
--- twisted/mail/test/test_mail.py	(revision 38302)
+++ twisted/mail/test/test_mail.py	(working copy)
@@ -642,7 +642,19 @@
         creds = cred.credentials.UsernamePassword('user', 'password')
         self.assertEqual(database.requestAvatarId(creds), 'user')
 
+    def testUserDirectory(self):
+        self.D.addUser('user', 'password')
+        self.assertEqual(self.D.userDirectory('user'),
+                         os.path.join(self.D.root, 'user'))
 
+        self.D.postmaster = False
+        self.assertIsNone(self.D.userDirectory('nouser'))
+
+        self.D.postmaster = True
+        self.assertEqual(self.D.userDirectory('nouser'),
+                         os.path.join(self.D.root, 'postmaster'))
+
+
 class StubAliasableDomain(object):
     """
     Minimal testable implementation of IAliasableDomain.
@@ -720,7 +732,7 @@
          fp = StringIO.StringIO(hdr)
          m = rfc822.Message(fp)
          self.assertEqual(len(m.items()), 1)
-         self.failUnless(m.has_key('Received'))
+         self.failUnless('Received' in m)
 
     def testValidateTo(self):
         user = smtp.User('user@test.domain', 'helo', None, 'wherever@whatever')
Index: twisted/mail/maildir.py
===================================================================
--- twisted/mail/maildir.py	(revision 38302)
+++ twisted/mail/maildir.py	(working copy)
@@ -477,7 +477,7 @@
         Otherwise, returns postmaster's mailbox instead if bounces
         go to postmaster, otherwise return None
         """
-        if not self.dbm.has_key(name):
+        if not name in self.dbm:
             if not self.postmaster:
                 return None
             name = 'postmaster'
