diff --git a/twisted/protocols/finger.py b/twisted/protocols/finger.py
index 303aec0..fcb9396 100644
--- a/twisted/protocols/finger.py
+++ b/twisted/protocols/finger.py
@@ -5,12 +5,11 @@
 """The Finger User Information Protocol (RFC 1288)"""
 
 from twisted.protocols import basic
-import string
 
 class Finger(basic.LineReceiver):
 
     def lineReceived(self, line):
-        parts = string.split(line)
+        parts = line.split()
         if not parts:
             parts = ['']
         if len(parts) == 1:
@@ -19,7 +18,7 @@ class Finger(basic.LineReceiver):
             slash_w = 1
         user = parts[-1]
         if '@' in user:
-            host_place = string.rfind(user, '@')
+            host_place = user.rfind('@')
             user = user[:host_place]
             host = user[host_place+1:]
             return self.forwardQuery(slash_w, user, host)
diff --git a/twisted/protocols/socks.py b/twisted/protocols/socks.py
index 445b9f3..4539f72 100644
--- a/twisted/protocols/socks.py
+++ b/twisted/protocols/socks.py
@@ -8,7 +8,6 @@ Implementation of the SOCKSv4 protocol.
 
 # python imports
 import struct
-import string
 import socket
 import time
 
@@ -191,7 +190,7 @@ class SOCKSv4(protocol.Protocol):
                                         their_peer.host,their_peer.port))
         while data:
             p,data=data[:16],data[16:]
-            f.write(string.join(map(lambda x:'%02X'%ord(x),p),' ')+' ')
+            f.write(' '.join(map(lambda x:'%02X'%ord(x),p))+' ')
             f.write((16-len(p))*3*' ')
             for c in p:
                 if len(repr(c))>3: f.write('.')
