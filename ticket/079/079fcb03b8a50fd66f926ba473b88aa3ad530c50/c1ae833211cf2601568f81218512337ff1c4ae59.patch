Index: C:/Python27/Lib/site-packages/twisted/mail/imap4.py
===================================================================
--- C:/Python27/Lib/site-packages/twisted/mail/imap4.py	(revision )
+++ C:/Python27/Lib/site-packages/twisted/mail/imap4.py	(revision )
@@ -4360,7 +4360,7 @@
     """
     pieces = []
     for i in items:
-        if i is None:
+        if i is None or i == "" or i == () or i == []:
             pieces.extend([' ', 'NIL'])
         elif isinstance(i, (DontQuoteMe, int, long)):
             pieces.extend([' ', str(i)])
@@ -4817,6 +4817,14 @@
         return s[1:-1]
     return s
 
+
+def make_attributes(attrs):
+    unquotedAttrs = []
+    for (k, v) in attrs.iteritems():
+        unquotedAttrs.extend((k, unquote(v)))
+    return unquotedAttrs
+
+
 def getBodyStructure(msg, extended=False):
     # XXX - This does not properly handle multipart messages
     # BODYSTRUCTURE is obscenely complex and criminally under-documented.
@@ -4844,8 +4852,8 @@
         major = minor = None
 
 
-    size = str(msg.getSize())
-    unquotedAttrs = [(k, unquote(v)) for (k, v) in attrs.iteritems()]
+    size = int(msg.getSize())
+    unquotedAttrs = make_attributes(attrs)
     result = [
         major, minor,                       # Main and Sub MIME types
         unquotedAttrs,                      # content-type parameter list
@@ -4855,58 +4863,61 @@
         size,                               # Number of octets total
     ]
 
-    if major is not None:
+    if major is None:
+        return result
+
+
+
+    if major.lower() != 'multipart':
         if major.lower() == 'text':
-            result.append(str(getLineCount(msg)))
+            result.append(int(getLineCount(msg)))
         elif (major.lower(), minor.lower()) == ('message', 'rfc822'):
             contained = msg.getSubPart(0)
             result.append(getEnvelope(contained))
             result.append(getBodyStructure(contained, False))
             result.append(str(getLineCount(contained)))
 
-    if not extended or major is None:
-        return result
-
-    if major.lower() != 'multipart':
+        if extended:
-        headers = 'content-md5', 'content-disposition', 'content-language'
-        headers = msg.getHeaders(False, *headers)
-        disp = headers.get('content-disposition')
+            headers = 'content-md5', 'content-disposition', 'content-language'
+            headers = msg.getHeaders(False, *headers)
+            disp = headers.get('content-disposition')
 
-        # XXX - I dunno if this is really right
-        if disp:
-            disp = disp.split('; ')
-            if len(disp) == 1:
-                disp = (disp[0].lower(), None)
-            elif len(disp) > 1:
-                disp = (disp[0].lower(), [x.split('=') for x in disp[1:]])
+            # XXX - I dunno if this is really right
+            if disp:
+                disp = disp.split('; ')
+                if len(disp) == 1:
+                    disp = (disp[0].lower(), None)
+                elif len(disp) > 1:
+                    disp = (disp[0].lower(), [x.split('=') for x in disp[1:]])
 
-        result.append(headers.get('content-md5'))
-        result.append(disp)
-        result.append(headers.get('content-language'))
+            result.append(headers.get('content-md5'))
+            result.append(disp)
+            result.append(headers.get('content-language'))
     else:
-        result = [result]
+        result = []
         try:
             i = 0
             while True:
                 submsg = msg.getSubPart(i)
-                result.append(getBodyStructure(submsg))
+                result.append(getBodyStructure(submsg, extended))
                 i += 1
         except IndexError:
             result.append(minor)
-            result.append(attrs.items())
+            if extended:
+                result.append(unquotedAttrs)
 
-            # XXX - I dunno if this is really right
-            headers = msg.getHeaders(False, 'content-disposition', 'content-language')
-            disp = headers.get('content-disposition')
-            if disp:
-                disp = disp.split('; ')
-                if len(disp) == 1:
-                    disp = (disp[0].lower(), None)
-                elif len(disp) > 1:
-                    disp = (disp[0].lower(), [x.split('=') for x in disp[1:]])
+                # XXX - I dunno if this is really right
+                headers = msg.getHeaders(False, 'content-disposition', 'content-language')
+                disp = headers.get('content-disposition')
+                if disp:
+                    disp = disp.split('; ')
+                    if len(disp) == 1:
+                        disp = (disp[0].lower(), None)
+                    elif len(disp) > 1:
+                        disp = (disp[0].lower(), [x.split('=') for x in disp[1:]])
 
-            result.append(disp)
-            result.append(headers.get('content-language'))
+                result.append(disp)
+                result.append(headers.get('content-language'))
 
     return result
 
