Index: twisted/python/log.py
===================================================================
--- twisted/python/log.py	(revision 18201)
+++ twisted/python/log.py	(working copy)
@@ -289,11 +289,16 @@
 
     def formatTime(self, when):
         """
-        Return the given UTC value formatted as a human-readable string
-        representing that time in the local timezone.
+        Format the given UTC value as a string representing that time in the
+        local timezone.
+        
+        By default it's formatted as a ISO8601-like string
+        (ISO8601 date and ISO8601 time separated by a space). It can be
+        customized using the C{timeFormat} attribute, which will be used as
+        input for the underlying C{time.strftime} call.
 
         @type when: C{int}
-        @param when: POSIX timestamp to convert to a human-readable string.
+        @param when: POSIX timestamp to convert.
 
         @rtype: C{str}
         """
@@ -304,9 +309,9 @@
         when = datetime.datetime.utcfromtimestamp(when + tzOffset)
         tzHour = int(tzOffset / 60 / 60)
         tzMin = int(tzOffset / 60 % 60)
-        return '%d/%02d/%02d %02d:%02d %+03d%02d' % (
+        return '%d-%02d-%02d %02d:%02d:%02d%+03d%02d' % (
             when.year, when.month, when.day,
-            when.hour, when.minute,
+            when.hour, when.minute, when.second,
             tzHour, tzMin)
 
 
Index: twisted/test/test_log.py
===================================================================
--- twisted/test/test_log.py	(revision 18201)
+++ twisted/test/test_log.py	(working copy)
@@ -162,23 +162,23 @@
 
         # Pretend to be in US/Eastern for a moment
         self.flo.getTimezoneOffset = lambda: 18000
-        self.assertEquals(self.flo.formatTime(when), '2001/02/02 23:05 -0500')
+        self.assertEquals(self.flo.formatTime(when), '2001-02-02 23:05:06-0500')
 
         # Okay now we're in Eastern Europe somewhere
         self.flo.getTimezoneOffset = lambda: -3600
-        self.assertEquals(self.flo.formatTime(when), '2001/02/03 05:05 +0100')
+        self.assertEquals(self.flo.formatTime(when), '2001-02-03 05:05:06+0100')
 
         # And off in the Pacific or someplace like that
         self.flo.getTimezoneOffset = lambda: -39600
-        self.assertEquals(self.flo.formatTime(when), '2001/02/03 15:05 +1100')
+        self.assertEquals(self.flo.formatTime(when), '2001-02-03 15:05:06+1100')
 
         # One of those weird places with a half-hour offset timezone
         self.flo.getTimezoneOffset = lambda: 5400
-        self.assertEquals(self.flo.formatTime(when), '2001/02/03 02:35 -0130')
+        self.assertEquals(self.flo.formatTime(when), '2001-02-03 02:35:06-0130')
 
         # Half-hour offset in the other direction
         self.flo.getTimezoneOffset = lambda: -5400
-        self.assertEquals(self.flo.formatTime(when), '2001/02/03 05:35 +0130')
+        self.assertEquals(self.flo.formatTime(when), '2001-02-03 05:35:06+0130')
 
         # If a strftime-format string is present on the logger, it should
         # use that instead.  Note we don't assert anything about day, hour
