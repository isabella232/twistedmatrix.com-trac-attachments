Index: twisted/enterprise/util.py
===================================================================
--- twisted/enterprise/util.py	(revision 23010)
+++ twisted/enterprise/util.py	(working copy)
@@ -7,6 +7,7 @@
 
 from twisted.python.versions import Version, getVersionString
 from twisted.python.deprecate import deprecated
+from twisted.enterprise.adbapi import _safe
 
 # Common deprecation decorator used for all deprecations.
 _unreleasedVersion = Version("Twisted", 2, 6, 0)
@@ -59,13 +60,8 @@
 getKeyColumn = _unreleasedDeprecation(getKeyColumn)
 
 
-def safe(text):
-    """Make a string safe to include in an SQL statement
-    """
-    return text.replace("'", "''").replace("\\", "\\\\")
 
-
-def quote(value, typeCode, string_escaper=safe):
+def quote(value, typeCode, string_escaper=_safe):
     """Add quotes for text types and no quotes for integer types.
     NOTE: uses Postgresql type codes.
     """
@@ -102,8 +98,8 @@
         return "'%s'" % string_escaper(value)
 quote = _unreleasedDeprecation(quote)
 
-# Do this one here to let quote get an undeprecated version for internal
-# use.
+def safe(text):
+    return _safe(text)
 safe = _unreleasedDeprecation(safe)
 
 def makeKW(rowClass, args):
Index: twisted/enterprise/adbapi.py
===================================================================
--- twisted/enterprise/adbapi.py	(revision 23010)
+++ twisted/enterprise/adbapi.py	(working copy)
@@ -9,7 +9,6 @@
 
 from twisted.internet import defer, threads
 from twisted.python import reflect, log
-from twisted.enterprise.util import safe # backwards compat
 
 
 class ConnectionLost(Exception):
@@ -412,4 +411,25 @@
         return d
 
 
-__all__ = ['Transaction', 'ConnectionPool']
+
+# Common deprecation decorator used for all deprecations.
+from twisted.python.deprecate import deprecated
+from twisted.python.versions import Version
+_unreleasedVersion = Version("Twisted", 2, 6, 0)
+_unreleasedDeprecation = deprecated(_unreleasedVersion)
+
+
+
+def _safe(text):
+    """Make a string safe to include in an SQL statement
+    """
+    return text.replace("'", "''").replace("\\", "\\\\")
+
+
+def safe(text):
+    return _safe(text)
+
+safe = _unreleasedDeprecation(safe)
+
+
+__all__ = ['Transaction', 'ConnectionPool', 'safe']
Index: twisted/test/test_adbapi.py
===================================================================
--- twisted/test/test_adbapi.py	(revision 23010)
+++ twisted/test/test_adbapi.py	(working copy)
@@ -555,3 +555,21 @@
 # GadflyReconnectTestCase SQLiteReconnectTestCase PyPgSQLReconnectTestCase
 # PsycopgReconnectTestCase MySQLReconnectTestCase FirebirdReconnectTestCase
 makeSQLTests(ReconnectTestBase, 'ReconnectTestCase', globals())
+
+
+
+class DeprecationTestCase(unittest.TestCase):
+    """
+    Test deprecations in twisted.enterprise.adbapi
+    """
+
+    def test_safe(self):
+        """
+        Test deprecation of twisted.enterprise.adbapi.safe()
+        """
+        from twisted.enterprise import adbapi
+        result = self.callDeprecated(adbapi._unreleasedVersion,
+                                     adbapi.safe, "test'")
+
+        # make sure safe still behaves like the original
+        self.assertEqual(result, "test''")
