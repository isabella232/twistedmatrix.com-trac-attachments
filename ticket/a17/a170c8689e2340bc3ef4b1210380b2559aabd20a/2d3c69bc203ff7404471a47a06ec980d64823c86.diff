Index: twisted/test/test_ftp.py
===================================================================
--- twisted/test/test_ftp.py	(revision 33404)
+++ twisted/test/test_ftp.py	(working copy)
@@ -546,6 +546,35 @@
         return d
 
 
+    def testDownloadFolder(self):
+        # Make a directory in the current working directory
+        self.dirPath.child('foo').createDirectory()
+        # Login
+        d = self._anonymousLogin()
+        d.addCallback(self._makeDataConnection)
+
+        def retrFolder(downloader):
+            downloader.transport.loseConnection()
+            deferred = self.client.queueStringCommand('RETR foo')
+            return deferred
+        d.addCallback(retrFolder)
+
+        def failOnSuccess(result):
+            raise AssertionError('Downloading a file should not succeed.')
+        d.addCallback(failOnSuccess)
+
+        def checkError(failure):
+            failure.trap(ftp.CommandFailed)
+            self.assertEqual(
+                ['550 foo: is a directory'], failure.value.message)
+            current_errors = self.flushLoggedErrors()
+            self.assertEqual(
+                0, len(current_errors),
+                'No errors should be logged while downloading a folder.')
+        d.addErrback(checkError)
+        return d
+
+
     def test_NLSTEmpty(self):
         """
         NLST with no argument returns the directory listing for the current
Index: twisted/protocols/ftp.py
===================================================================
--- twisted/protocols/ftp.py	(revision 33404)
+++ twisted/protocols/ftp.py	(working copy)
@@ -1071,7 +1071,7 @@
             return d
 
         def ebOpened(err):
-            if not err.check(PermissionDeniedError, FileNotFoundError, IsNotADirectoryError):
+            if not err.check(PermissionDeniedError, FileNotFoundError, IsADirectoryError):
                 log.msg("Unexpected error attempting to open file for transmission:")
                 log.err(err)
             if err.check(FTPCmdError):
