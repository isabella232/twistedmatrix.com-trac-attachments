# Bazaar merge directive format 2 (Bazaar 0.90)
# revision_id: hs@ox.cx-20130131093050-oj7fiwa0a3dzkppc
# target_branch: file:///Users/hynek/Projects/Twisted/trunk/
# testament_sha1: 2eb7c9b6eae2ba0bb1f5665c1246dc7ebdabc256
# timestamp: 2013-01-31 10:32:11 +0100
# base_revision_id: svn-v4:bbbe8e31-12d6-0310-92fd-\
#   ac37d47ddeeb:trunk:37018
# 
# Begin patch
=== modified file 'twisted/internet/_sslverify.py'
--- twisted/internet/_sslverify.py	2013-01-02 01:05:08 +0000
+++ twisted/internet/_sslverify.py	2013-01-31 09:16:19 +0000
@@ -696,15 +696,19 @@
         ticket extensions in the hello.
         """
 
-        assert (privateKey is None) == (certificate is None), "Specify neither or both of privateKey and certificate"
+        if (privateKey is None) != (certificate is None):
+            raise ValueError(
+                "Specify neither or both of privateKey and certificate")
         self.privateKey = privateKey
         self.certificate = certificate
         if method is not None:
             self.method = method
 
+        if any((caCerts, verify)) and not all((caCerts, verify)):
+            raise ValueError(
+                "Specify client CA certificate information if and only if "
+                "enabling certificate verification and vice versa")
         self.verify = verify
-        assert ((verify and caCerts) or
-                (not verify)), "Specify client CA certificate information if and only if enabling certificate verification"
 
         self.caCerts = caCerts
         self.verifyDepth = verifyDepth
@@ -753,10 +757,9 @@
                 verifyFlags |= SSL.VERIFY_FAIL_IF_NO_PEER_CERT
             if self.verifyOnce:
                 verifyFlags |= SSL.VERIFY_CLIENT_ONCE
-            if self.caCerts:
-                store = ctx.get_cert_store()
-                for cert in self.caCerts:
-                    store.add_cert(cert)
+            store = ctx.get_cert_store()
+            for cert in self.caCerts:
+                store.add_cert(cert)
 
         # It'd be nice if pyOpenSSL let us pass None here for this behavior (as
         # the underlying OpenSSL API call allows NULL to be passed).  It

=== modified file 'twisted/test/test_sslverify.py'
--- twisted/test/test_sslverify.py	2012-10-30 17:06:40 +0000
+++ twisted/test/test_sslverify.py	2013-01-31 09:09:44 +0000
@@ -174,6 +174,44 @@
         self.clientConn = reactor.connectSSL('127.0.0.1',
                 self.serverPort.getHost().port, clientFactory, clientCertOpts)
 
+
+    def test_constructorEnforcesNeitherOrBothPrivateKeyAndCertificate(self):
+        """
+        C{privateKey} and C{certificate} make only sense if both are set.
+        """
+        self.assertRaises(
+            ValueError,
+            sslverify.OpenSSLCertificateOptions, privateKey=self.sKey
+        )
+        self.assertRaises(
+            ValueError,
+            sslverify.OpenSSLCertificateOptions, certificate=self.sCert
+        )
+        sslverify.OpenSSLCertificateOptions(privateKey=self.sKey,
+                                            certificate=self.sCert)
+
+
+    def test_constructorEnforcesNeitherOrBothCaCertsAndVerify(self):
+        """
+        C{caCerts} and C{verify} are required to be specified neither or both.
+        """
+        fakeCACerts = [self.sCert, self.cCert]
+        self.assertRaises(
+            ValueError,
+            sslverify.OpenSSLCertificateOptions,
+            privateKey=self.sKey, certificate=self.sCert, verify=True
+        )
+        self.assertRaises(
+            ValueError,
+            sslverify.OpenSSLCertificateOptions,
+            privateKey=self.sKey, certificate=self.sCert, caCerts=fakeCACerts
+        )
+        sslverify.OpenSSLCertificateOptions(privateKey=self.sKey,
+                                            certificate=self.sCert,
+                                            verify=True,
+                                            caCerts=fakeCACerts)
+
+
     def test_abbreviatingDistinguishedNames(self):
         """
         Check that abbreviations used in certificates correctly map to

=== added file 'twisted/topfiles/6288.misc'
# Begin bundle
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
QkE5mgS4
