Index: twisted/news/nntp.py
===================================================================
--- twisted/news/nntp.py	(revision 30184)
+++ twisted/news/nntp.py	(working copy)
@@ -99,6 +99,19 @@
         self._newState(self._statePassive, None, self._headerInitial)
 
 
+    def authenticated(self):
+        "Override for notification when authenticate() action is completed"
+        
+        
+    def authWantsPassword(self):
+        "You must override this if you want to use authenticate().  Return the password."
+        raise NotImplementedError("You must implement authWantsPassword() if you're calling authenticate()")
+    
+
+    def authFailed(self, error):
+        "Override for notification when authenticate() action fails"
+        
+
     def gotAllGroups(self, groups):
         "Override for notification when fetchGroups() action is completed"
     
@@ -193,7 +206,25 @@
 
     def setStreamFailed(self, error):
         "Override for notification when setStream() action fails"
+        
 
+    def authenticate(self, username):
+        """
+        Authenticate with the server.
+        
+        authenticated() is called on success, authFailed() on failure.
+        
+        authWantsPassword() is called if a password is required.
+        Your implementation of authWantsPassword() should return the password
+        to authenticate with as a string.
+        
+        username: The name to log in with.
+        """
+        print "NEW STATE"
+        self._newState(self._statePassive, self.authFailed, self._authHandler)
+        print "AUTHINFO USER"
+        self.sendLine('AUTHINFO USER %s' % username)
+        
 
     def fetchGroups(self):
         """
@@ -435,7 +466,27 @@
         else:
             self.gotSubscriptions(self._endState())
 
+          
+    def _authHandler(self, (code, message)):
+        "Handles server response codes for authentication"
+        if code == 381:
+            # 381 Enter Password
+            password = self.authWantsPassword()
+            self.sendLine("AUTHINFO PASS %s" % password)
+            self._setResponseCode(None)
+        elif code == 281:
+            # 281 Authentication succeeded
+            self._endState()
+            self.authenticated()
+        elif code == 481:
+            # 481 Authentication failed
+            self._endState()
+            self.authFailed("Incorrect username or password")
+        else:
+            self._endState()
+            self.authFailed("Unrecognised response from server")
 
+
     def _headerGroup(self, (code, line)):
         self.gotGroup(tuple(line.split()))
         self._endState()
