diff --git twisted/web/server.py twisted/web/server.py
index d8dbe80..829d3ac 100644
--- twisted/web/server.py
+++ twisted/web/server.py
@@ -612,12 +612,12 @@ class Site(http.HTTPFactory):
     @ivar sessionCheckTime: Deprecated.  See L{Session.sessionTimeout} instead.
     """
     counter = 0
-    requestFactory = Request
+    requestFactory = None
     displayTracebacks = True
     sessionFactory = Session
     sessionCheckTime = 1800
 
-    def __init__(self, resource, requestFactory=None, *args, **kwargs):
+    def __init__(self, resource, requestFactory=Request, *args, **kwargs):
         """
         @param resource: The root of the resource hierarchy.  All request
             traversal for requests received by this factory will begin at this
@@ -632,8 +632,7 @@ class Site(http.HTTPFactory):
         http.HTTPFactory.__init__(self, *args, **kwargs)
         self.sessions = {}
         self.resource = resource
-        if requestFactory:
-            self.requestFactory = requestFactory
+        self.requestFactory = requestFactory
 
     def _openLogFile(self, path):
         from twisted.python import logfile
diff --git twisted/web/test/test_web.py twisted/web/test/test_web.py
index f369e6d..3103da9 100644
--- twisted/web/test/test_web.py
+++ twisted/web/test/test_web.py
@@ -75,7 +75,6 @@ class SiteTest(unittest.TestCase):
     Unit tests for L{server.Site}.
     """
 
-
     def test_simplestSite(self):
         """
         L{Site.getResourceFor} returns the C{b""} child of the root resource it
@@ -90,33 +89,31 @@ class SiteTest(unittest.TestCase):
             sres2, "Got the wrong resource.")
 
 
-    def test_constructorRequestFactory(self):
+    def test_defaultRequestFactory(self):
         """
-        Can be initialized with a custom requestFactory.
+        L{server.Request} is the default request factory.
         """
-        def customFactory(channel, queued):
-            """
-            Custom factory to help with test.
+        site = server.Site(resource=SimpleResource())
 
-            @param channel: HTTP protocol for the request.
-            @type channel: L{http.HTTPChannel}
+        self.assertIs(server.Request, site.requestFactory)
 
-            @param queued: Flag if request is queued.
-            @type queued: C{bool}
-            """
 
-        rootResource = SimpleResource()
+    def test_constructorRequestFactory(self):
+        """
+        Can be initialized with a custom requestFactory.
+        """
+        customFactory = object()
 
         site = server.Site(
-            resource=rootResource, requestFactory=customFactory)
+            resource=SimpleResource(), requestFactory=customFactory)
 
         self.assertIs(customFactory, site.requestFactory)
 
 
     def test_buildProtocol(self):
         """
-        Set `site` and `requestFactory` members the created protocol based on
-        values from itself.
+        Returns a C{Channel} whose C{site} and C{requestFactory} attributes are
+        assigned from the C{site} instance.
         """
         site = server.Site(SimpleResource())
 
