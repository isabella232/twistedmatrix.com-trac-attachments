Index: docs/core/examples/pbsimpleclient.py
===================================================================
--- docs/core/examples/pbsimpleclient.py	(revision 42594)
+++ docs/core/examples/pbsimpleclient.py	(working copy)
@@ -5,14 +5,32 @@
 
 from twisted.spread import pb
 from twisted.internet import reactor
-from twisted.python import util
 
+def gotRootObject(remoteRefToRoot):
+    """Remotely invoke the 'echo' method on the remote object"""
+    return remoteRefToRoot.callRemote("echo", "hello network")
+
+def handleEchoReceived(response):
+    """Handle data coming back from the remote object's echo method"""
+    return "server echoed: %s"%(response,)
+
+def handleFailure(reason):
+    """
+    Handle the case in which we fail to get a remote reference to the root
+    object.
+    """
+    return "error: %s"%str(reason.value)
+
+def output(message):
+    """Display a success or failure message"""
+    print(message)
+
 factory = pb.PBClientFactory()
 reactor.connectTCP("localhost", 8789, factory)
-d = factory.getRootObject()
-d.addCallback(lambda object: object.callRemote("echo", "hello network"))
-d.addCallback(lambda echo: 'server echoed: '+echo)
-d.addErrback(lambda reason: 'error: '+str(reason.value))
-d.addCallback(util.println)
-d.addCallback(lambda _: reactor.stop())
+d = factory.getRootObject() #Get a remote reference to server-side root object
+d.addCallback(gotRootObject) #and ask that object to echo some data.
+d.addCallback(handleEchoReceived) #Prepare a message indicating the echo worked,
+d.addErrback(handleFailure) #or, prepare a message indicating something failed.
+d.addCallback(output) #Display the message.
+d.addCallback(lambda _: reactor.stop())  #Finally, stop the reactor.
 reactor.run()
