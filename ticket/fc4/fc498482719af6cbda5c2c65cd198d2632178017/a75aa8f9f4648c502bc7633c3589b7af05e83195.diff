diff --git a/docs/index.rst b/docs/index.rst
index d5ead54..e69de29 100644
--- a/docs/index.rst
+++ b/docs/index.rst
@@ -1,23 +0,0 @@
-.. twisteddocs documentation master file, created by
-   sphinx-quickstart on Thu Oct 08 13:48:27 2009.
-   You can adapt this file completely to your liking, but it should at least
-   contain the root `toctree` directive.
-
-Welcome to the Twisted documentation!
-=====================================
-
-Contents:
-
-.. toctree::
-    :maxdepth: 2
-    :includehidden:
-
-    projects/core/index
-    projects/conch/index
-    projects/lore/index
-    projects/mail/index
-    projects/names/index
-    projects/pair/index
-    projects/web/index
-    projects/words/index
-    projects/historic/index
diff --git a/docs/projects/core/development/policy/test-standard.rst b/docs/projects/core/development/policy/test-standard.rst
index ac3d33a..3d3533f 100644
--- a/docs/projects/core/development/policy/test-standard.rst
+++ b/docs/projects/core/development/policy/test-standard.rst
@@ -495,7 +495,7 @@ or
 This format is understood by emacs to mark "File Variables" . The
 intention is to accept ``test-case-name`` anywhere emacs would on
 the first or second line of the file (but not in the ``File Variables:`` block that emacs accepts at the end of the file). If you
-need to define other emacs file variables, you can either put them in the``File Variables:`` block or use a semicolon-separated list of
+need to define other emacs file variables, you can either put them in the ``File Variables:`` block or use a semicolon-separated list of
 variable definitions:
 
 
@@ -528,7 +528,7 @@ handle this yet.. ``trial --testmodule`` does, though)
 
 The ``test-case-name`` tag will allow ``trial --testmodule twisted/dir/myfile.py`` to determine which test cases need
 to be run to exercise the code in ``myfile.py`` . Several tools (as
-well as http://launchpad.net/twisted-emacs's``twisted-dev.el`` 's F9 command) use this to automatically
+well as http://launchpad.net/twisted-emacs's ``twisted-dev.el`` 's F9 command) use this to automatically
 run the right tests.
 
 
diff --git a/docs/projects/core/howto/application.rst b/docs/projects/core/howto/application.rst
index 43448d8..01e6a94 100644
--- a/docs/projects/core/howto/application.rst
+++ b/docs/projects/core/howto/application.rst
@@ -121,7 +121,7 @@ not over until the result fires. For example:
 
 
 
-See :doc:`Writing Servers <servers>` for an explanation of``EchoFactory`` and ``listenTCP`` .
+See :doc:`Writing Servers <servers>` for an explanation of ``EchoFactory`` and ``listenTCP`` .
 
 
 
@@ -168,7 +168,7 @@ with the command ``twistd -y service.tac`` .
 
 
 
-By default, ``twistd`` daemonizes and logs to a file called``twistd.log`` . More usually, when debugging, you will want your
+By default, ``twistd`` daemonizes and logs to a file called ``twistd.log`` . More usually, when debugging, you will want your
 application to run in the foreground and log to the command line. To run the
 above file like this, use the command ``twistd -noy service.tac`` 
 
@@ -216,7 +216,7 @@ replaced with use of the ``--logfile`` parameter to twistd).
 
 Alternatively, the logging behavior can be customized through an API
 accessible from ``.tac`` files.  The :api:`twisted.python.log.ILogObserver <ILogObserver>` component can be
-set on an Application in order to customize the default log observer that``twistd`` will use.
+set on an Application in order to customize the default log observer that ``twistd`` will use.
 
 
 
diff --git a/docs/projects/core/howto/defer.rst b/docs/projects/core/howto/defer.rst
index c0a20a8..9346a74 100644
--- a/docs/projects/core/howto/defer.rst
+++ b/docs/projects/core/howto/defer.rst
@@ -719,7 +719,7 @@ reasons:
 
 
 Calling ``cancel()`` will always succeed without an error
-regardless of whether or not cancellation was possible. In cases 1 and 2 the``Deferred`` may well errback with a``twisted.internet.defer.CancelledError`` while the underlying
+regardless of whether or not cancellation was possible. In cases 1 and 2 the ``Deferred`` may well errback with a ``twisted.internet.defer.CancelledError`` while the underlying
 operation continues. ``Deferred`` s that support cancellation should
 document what they do when cancelled, if they are uncancellable in certain edge
 cases, etc..
@@ -727,7 +727,7 @@ cases, etc..
 
 
 
-If the cancelled ``Deferred`` is waiting on another``Deferred`` , the cancellation will be forwarded to the other``Deferred`` .
+If the cancelled ``Deferred`` is waiting on another ``Deferred`` , the cancellation will be forwarded to the other ``Deferred`` .
 
 
 
@@ -764,7 +764,7 @@ Consider this example of a Deferred which is ignorant of cancellation:
 
 
 
-A caller of an API that receives ``operation`` may call``cancel`` on it.  Since ``operation`` does not have a
+A caller of an API that receives ``operation`` may call ``cancel`` on it.  Since ``operation`` does not have a
 cancellation function, one of two things will happen.
 
 
@@ -775,13 +775,13 @@ cancellation function, one of two things will happen.
    completed, nothing much will change.  ``operation`` will still have a
    result, and there are no more callbacks, so there's no observable change in
    behavior.
-#. If ``operationDone`` has *not* yet been invoked, then``operation`` will be immediately errbacked with a``CancelledError`` .
+#. If ``operationDone`` has *not* yet been invoked, then ``operation`` will be immediately errbacked with a ``CancelledError`` .
    
    However, once it's cancelled, there's no way to tell ``operationDone`` 
    not to run; it will eventually call ``operation.callback`` later.  In
    normal operation, issuing ``callback`` on a ``Deferred`` that
    has already called back results in an ``AlreadyCalledError`` , and this
-   would cause an ugly traceback that could not be caught.  Therefore,``.callback`` can be invoked exactly once, causing a no-op, on a``Deferred`` which has been cancelled but has no canceller.  If you
+   would cause an ugly traceback that could not be caught.  Therefore,``.callback`` can be invoked exactly once, causing a no-op, on a ``Deferred`` which has been cancelled but has no canceller.  If you
    call it multiple times, you will still get an ``AlreadyCalledError`` 
    exception.
 
@@ -821,7 +821,7 @@ with the Deferred that is being cancelled):
 
 Now if someone calls ``cancel()`` on the ``Deferred`` 
 returned from ``HTTPClient.request()`` , the HTTP request will be
-cancelled (assuming it's not too late to do so). Care should be taken not to``callback()`` a Deferred that has already been cancelled.
+cancelled (assuming it's not too late to do so). Care should be taken not to ``callback()`` a Deferred that has already been cancelled.
 
 
 
@@ -1044,7 +1044,7 @@ shortcut:
 
 
 The ``consumeErrors`` argument has the same meaning as it does
-for :ref:`NEEDS A TITLE <core-howto-defer-deferredlist>` : if true, it causes``gatherResults`` to consume any errors in the passed-in Deferreds.
+for :ref:`NEEDS A TITLE <core-howto-defer-deferredlist>` : if true, it causes ``gatherResults`` to consume any errors in the passed-in Deferreds.
 Always use this argument unless you are adding further callbacks or errbacks to
 the passed-in Deferreds, or unless you know that they will not fail.
 Otherwise, a failure will result in an unhandled error being logged by Twisted.
diff --git a/docs/projects/core/howto/endpoints.rst b/docs/projects/core/howto/endpoints.rst
index 8501b9a..08c5c1e 100644
--- a/docs/projects/core/howto/endpoints.rst
+++ b/docs/projects/core/howto/endpoints.rst
@@ -43,7 +43,7 @@ There's Not Much To It
 
 Each type of endpoint is just an interface with a single method that
 takes an argument. ``serverEndpoint.listen(factory)`` will start
-listening on that endpoint with your protocol factory, and``clientEndpoint.connect(factory)`` will start a single connection
+listening on that endpoint with your protocol factory, and ``clientEndpoint.connect(factory)`` will start a single connection
 attempt. Each of these APIs returns a value, though, which can be important.
 
 However, if you are not already, you *should* be very familiar with :doc:`Deferreds <defer>`, as they are returned by both ``connect`` and ``listen`` methods, to indicate when the connection has connected or the listening port is up and running.
@@ -80,7 +80,7 @@ It returns a ``Deferred`` which fires with the ``IProtocol`` returned from the f
 
 Connection attempts may also take a long time, and your users may become bored and wander off.
 If this happens, and your code decides, for whatever reason, that you've been waiting for the connection too long, you can call :api:`twisted.internet.defer.Deferred.cancel <Deferred.cancel>` on the ``Deferred`` returned from :api:`twisted.internet.interfaces.IStreamClientEndpoint.connect <connect>` or :api:`twisted.internet.endpoints.connectProtocol <connectProtocol>`, and the underlying machinery should give up on the connection.
-This should cause the``Deferred`` to errback, usually with :api:`twisted.internet.defer.CancelledError <CancelledError>`;
+This should cause the ``Deferred`` to errback, usually with :api:`twisted.internet.defer.CancelledError <CancelledError>`;
 although you should consult the documentation for your particular endpoint type to see if it may do something different.
 
 Although some endpoint types may imply a built-in timeout, the
diff --git a/docs/projects/core/howto/trial.rst b/docs/projects/core/howto/trial.rst
index 9ff0707..235fd71 100644
--- a/docs/projects/core/howto/trial.rst
+++ b/docs/projects/core/howto/trial.rst
@@ -1036,7 +1036,7 @@ employ the use of a debugger. This can be particularly helpful in tracking down
 where the source of a troublesome bug is in your code. Python's standard library
 includes a debugger in the form of the`pdb <http://docs.python.org/library/pdb.html>`_ module.
 Running your tests with ``pdb`` is as simple as invoking
-twisted with the ``--debug`` option, which will start``pdb`` at the beginning of the execution of your test
+twisted with the ``--debug`` option, which will start ``pdb`` at the beginning of the execution of your test
 suite.
 
 
@@ -1046,8 +1046,8 @@ Trial also provides a ``--debugger`` option which can
 run your test suite using another debugger instead. To specify a debugger other
 than ``pdb`` , pass in the fully-qualified name of an
 object that provides the same interface as ``pdb`` .
-Most third-party debuggers tend to implement an interface similar to``pdb`` , or at least provide a wrapper object that
-does. For example, invoking trial with the line``trial --debug --debugger pudb`` will open the`PuDB <http://pypi.python.org/pypi/pudb>`_ debugger instead, provided
+Most third-party debuggers tend to implement an interface similar to ``pdb`` , or at least provide a wrapper object that
+does. For example, invoking trial with the line ``trial --debug --debugger pudb`` will open the`PuDB <http://pypi.python.org/pypi/pudb>`_ debugger instead, provided
 it is properly installed.
 
 
diff --git a/docs/projects/web/howto/using-twistedweb.rst b/docs/projects/web/howto/using-twistedweb.rst
index 0be5c2f..2ef2b79 100644
--- a/docs/projects/web/howto/using-twistedweb.rst
+++ b/docs/projects/web/howto/using-twistedweb.rst
@@ -504,7 +504,7 @@ Here is an example of a simple but complete web proxy:
 
 
 
-With this proxy running, you can configure your web browser to use``localhost:8080`` as a proxy. After doing so, when browsing the web
+With this proxy running, you can configure your web browser to use ``localhost:8080`` as a proxy. After doing so, when browsing the web
 all requests will go through this proxy.
 
 
@@ -557,7 +557,7 @@ Here is an example of a basic reverse proxy:
 
 With this reverse proxy running locally, you can
 visit ``http://localhost:8080`` in your web browser, and the reverse
-proxy will proxy your connection to``www.yahoo.com`` .
+proxy will proxy your connection to ``www.yahoo.com`` .
 
 
 
diff --git a/docs/projects/web/howto/web-in-60/static-content.rst b/docs/projects/web/howto/web-in-60/static-content.rst
index 69a750f..4938a2f 100644
--- a/docs/projects/web/howto/web-in-60/static-content.rst
+++ b/docs/projects/web/howto/web-in-60/static-content.rst
@@ -113,7 +113,7 @@ the command
 
 
 will accomplish the same thing as the above server. See :doc:`helper programs <../../../core/howto/basics>` in the
-Twisted Core documentation for more information on using``twistd`` .
+Twisted Core documentation for more information on using ``twistd`` .
 
 
 
