Index: twisted/mail/topfiles/6547.removal
===================================================================
--- twisted/mail/topfiles/6547.removal	(revision 0)
+++ twisted/mail/topfiles/6547.removal	(revision 0)
@@ -0,0 +1 @@
+twisted.mail.MaildirBroker removed because both its methods are obsolete and fail with an AttributeError if invoked.
Index: twisted/mail/pb.py
===================================================================
--- twisted/mail/pb.py	(revision 38628)
+++ twisted/mail/pb.py	(working copy)
@@ -89,24 +89,6 @@
     remote_getSubFolder = getSubFolder
 
 
-class MaildirBroker(pb.Broker):
-
-    def proto_getCollection(self, requestID, name, domain, password):
-        collection = self._getCollection()
-        if collection is None:
-            self.sendError(requestID, "permission denied")
-        else:
-            self.sendAnswer(requestID, collection)
-
-    def getCollection(self, name, domain, password):
-        if not self.domains.has_key(domain):
-            return
-        domain = self.domains[domain]
-        if (domain.dbm.has_key(name) and
-            domain.dbm[name] == password):
-            return MaildirCollection(domain.userDirectory(name))
-
-
 class MaildirClient(pb.Broker):
 
     def getCollection(self, name, domain, password, callback, errback):
