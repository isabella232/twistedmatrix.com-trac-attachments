diff --git twisted/persisted/sob.py twisted/persisted/sob.py
index 89d9caa..1906ce4 100644
--- twisted/persisted/sob.py
+++ twisted/persisted/sob.py
@@ -9,19 +9,19 @@ Save and load Small OBjects to and from files, using various formats.
 Maintainer: Moshe Zadka
 """
 
+from __future__ import print_function,division,absolute_import
+from twisted.python.compat import _PY3,NativeStringIO
+
 import os, sys
 try:
     import cPickle as pickle
 except ImportError:
     import pickle
-try:
-    import cStringIO as StringIO
-except ImportError:
-    import StringIO
+
 from hashlib import md5
 from twisted.python import log, runtime
 from twisted.persisted import styles
-from zope.interface import implements, Interface
+from zope.interface import implementer, Interface
 
 # Note:
 # These encrypt/decrypt functions only work for data formats
@@ -58,10 +58,9 @@ class IPersistable(Interface):
         """
 
 
+@implementer(IPersistable)
 class Persistent:
 
-    implements(IPersistable)
-
     style = "pickle"
 
     def __init__(self, original, name):
@@ -92,7 +91,7 @@ class Persistent:
         if passphrase is None:
             dumpFunc(self.original, f)
         else:
-            s = StringIO.StringIO()
+            s = NativeStringIO()
             dumpFunc(self.original, s)
             f.write(_encrypt(passphrase, s.getvalue()))
         f.close()
@@ -164,7 +163,7 @@ def load(filename, style, passphrase=None):
     else:
         _load, mode = pickle.load, 'rb'
     if passphrase:
-        fp = StringIO.StringIO(_decrypt(passphrase,
+        fp = NativeStringIO(_decrypt(passphrase,
                                         open(filename, 'rb').read()))
     else:
         fp = open(filename, mode)
@@ -205,9 +204,9 @@ def loadValueFromFile(filename, variable, passphrase=None):
     if passphrase:
         data = fileObj.read()
         data = _decrypt(passphrase, data)
-        exec data in d, d
+        exec(data,d, d)
     else:
-        exec fileObj in d, d
+        exec(fileObj,d, d)
     value = d[variable]
     return value
 
