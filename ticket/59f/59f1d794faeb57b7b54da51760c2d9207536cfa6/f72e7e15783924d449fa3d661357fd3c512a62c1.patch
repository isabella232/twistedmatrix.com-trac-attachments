Index: twisted/words/protocols/irc.py
===================================================================
--- twisted/words/protocols/irc.py	(revision 24701)
+++ twisted/words/protocols/irc.py	(working copy)
@@ -494,11 +494,11 @@
     @ivar username: Supplied to the server during login as the \"User name\".
         May be C{None}
 
-    @ivar userinfo: Sent in reply to a X{USERINFO} CTCP query.  If C{None}, no
+    @ivar userinfo: Sent in reply to a C{USERINFO} CTCP query.  If C{None}, no
         USERINFO reply will be sent.
         \"This is used to transmit a string which is settable by
         the user (and never should be set by the client).\"
-    @ivar fingerReply: Sent in reply to a X{FINGER} CTCP query.  If C{None}, no
+    @ivar fingerReply: Sent in reply to a C{FINGER} CTCP query.  If C{None}, no
         FINGER reply will be sent.
     @type fingerReply: Callable or String
 
@@ -1604,7 +1604,8 @@
                  % (user, tag, data))
 
     def ctcpMakeReply(self, user, messages):
-        """Send one or more X{extended messages} as a CTCP reply.
+        """
+        Send one or more C{extended messages} as a CTCP reply.
 
         @type messages: a list of extended messages.  An extended
         message is a (tag, data) tuple, where 'data' may be C{None}.
@@ -1614,7 +1615,8 @@
     ### client CTCP query commands
 
     def ctcpMakeQuery(self, user, messages):
-        """Send one or more X{extended messages} as a CTCP query.
+        """
+        Send one or more C{extended messages} as a CTCP query.
 
         @type messages: a list of extended messages.  An extended
         message is a (tag, data) tuple, where 'data' may be C{None}.
@@ -1625,8 +1627,9 @@
     ### You may want to add methods here, or override UnknownReply.
 
     def ctcpReply(self, user, channel, messages):
-        """Dispatch method for any CTCP replies received.
         """
+        Dispatch method for any CTCP replies received.
+        """
         for m in messages:
             method = getattr(self, "ctcpReply_%s" % m[0], None)
             if method:
Index: twisted/web2/iweb.py
===================================================================
--- twisted/web2/iweb.py	(revision 24701)
+++ twisted/web2/iweb.py	(working copy)
@@ -221,7 +221,7 @@
         """
 
     def setLastModified(when):
-        """Set the X{Last-Modified} time for the response to this request.
+        """Set the C{Last-Modified} time for the response to this request.
 
         If I am called more than once, I ignore attempts to set
         Last-Modified earlier, only replacing the Last-Modified time
@@ -233,16 +233,16 @@
         @param when: The last time the resource being returned was
             modified, in seconds since the epoch.
         @type when: number
-        @return: If I am a X{If-Modified-Since} conditional request and
+        @return: If I am a C{If-Modified-Since} conditional request and
             the time given is not newer than the condition, I return
             L{http.CACHED<CACHED>} to indicate that you should write no
             body.  Otherwise, I return a false value.
         """
 
     def setETag(etag):
-        """Set an X{entity tag} for the outgoing response.
+        """Set an C{entity tag} for the outgoing response.
 
-        That's \"entity tag\" as in the HTTP/1.1 X{ETag} header, \"used
+        That's \"entity tag\" as in the HTTP/1.1 C{ETag} header, \"used
         for comparing two or more entities from the same requested
         resource.\"
 
@@ -252,7 +252,7 @@
 
         @param etag: The entity tag for the resource being returned.
         @type etag: string
-        @return: If I am a X{If-None-Match} conditional request and
+        @return: If I am a C{If-None-Match} conditional request and
             the tag matches one in the request, I return
             L{http.CACHED<CACHED>} to indicate that you should write
             no body.  Otherwise, I return a false value.
Index: twisted/web/http.py
===================================================================
--- twisted/web/http.py	(revision 24701)
+++ twisted/web/http.py	(working copy)
@@ -912,7 +912,8 @@
 
 
     def setLastModified(self, when):
-        """Set the X{Last-Modified} time for the response to this request.
+        """
+        Set the C{Last-Modified} time for the response to this request.
 
         If I am called more than once, I ignore attempts to set
         Last-Modified earlier, only replacing the Last-Modified time
@@ -924,7 +925,7 @@
         @param when: The last time the resource being returned was
             modified, in seconds since the epoch.
         @type when: number
-        @return: If I am a X{If-Modified-Since} conditional request and
+        @return: If I am a C{If-Modified-Since} conditional request and
             the time given is not newer than the condition, I return
             L{http.CACHED<CACHED>} to indicate that you should write no
             body.  Otherwise, I return a false value.
@@ -944,9 +945,10 @@
         return None
 
     def setETag(self, etag):
-        """Set an X{entity tag} for the outgoing response.
+        """
+        Set an C{entity tag} for the outgoing response.
 
-        That's \"entity tag\" as in the HTTP/1.1 X{ETag} header, \"used
+        That's \"entity tag\" as in the HTTP/1.1 C{ETag} header, \"used
         for comparing two or more entities from the same requested
         resource.\"
 
@@ -956,7 +958,7 @@
 
         @param etag: The entity tag for the resource being returned.
         @type etag: string
-        @return: If I am a X{If-None-Match} conditional request and
+        @return: If I am a C{If-None-Match} conditional request and
             the tag matches one in the request, I return
             L{http.CACHED<CACHED>} to indicate that you should write
             no body.  Otherwise, I return a false value.
