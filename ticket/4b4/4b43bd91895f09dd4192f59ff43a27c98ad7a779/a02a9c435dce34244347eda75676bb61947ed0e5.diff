Index: twisted/names/test/test_cache.py
===================================================================
--- twisted/names/test/test_cache.py	(revision 34045)
+++ twisted/names/test/test_cache.py	(working copy)
@@ -12,3 +12,41 @@
         c = cache.CacheResolver({
             dns.Query(name='example.com', type=dns.MX, cls=dns.IN): (time.time(), ([], [], []))})
         return c.lookupMailExchange('example.com').addCallback(self.assertEqual, ([], [], []))
+
+
+    def test_normalLookup(self):
+        """
+        A standard A lookup that hits a cached entry from 1 second ago
+        """
+        r = ([dns.RRHeader("example.com", dns.A, dns.IN, 60,
+                dns.Record_A("127.0.0.1", 60))], [], [])
+
+        c = cache.CacheResolver({
+            dns.Query(name="example.com", type=dns.A, cls=dns.IN) : (
+                time.time() - 1, r)})
+
+        def cbLookup(result):
+            self.failUnless(result[0][0].ttl >= 0)
+            self.assertEquals(result[0][0].name.name, "example.com")
+
+        return c.lookupAddress("example.com").addCallback(cbLookup)
+
+
+    def test_negativeTTLLookup(self):
+        """
+        Query the cache exactly as the cached entry should expire
+        but before it has actually been cleared
+        """
+        r = ([dns.RRHeader("example.com", dns.A, dns.IN, 60,
+                dns.Record_A("127.0.0.1", 60))], [], [])
+
+        c = cache.CacheResolver({
+            dns.Query(name="example.com", type=dns.A, cls=dns.IN) : (
+                time.time() - 60.0001, r)})
+
+        def cbLookup(result):
+            self.failUnless(result[0][0].ttl >= 0)
+            self.assertEquals(result[0][0].name.name, "example.com")
+
+        return c.lookupAddress("example.com").addCallback(cbLookup)
+
Index: twisted/names/cache.py
===================================================================
--- twisted/names/cache.py	(revision 34045)
+++ twisted/names/cache.py	(working copy)
@@ -63,9 +63,9 @@
                 log.msg('Cache hit for ' + repr(name))
             diff = now - when
             return defer.succeed((
-                [dns.RRHeader(str(r.name), r.type, r.cls, r.ttl - diff, r.payload) for r in ans],
-                [dns.RRHeader(str(r.name), r.type, r.cls, r.ttl - diff, r.payload) for r in auth],
-                [dns.RRHeader(str(r.name), r.type, r.cls, r.ttl - diff, r.payload) for r in add]
+                [dns.RRHeader(str(r.name), r.type, r.cls, max(0, r.ttl - diff), r.payload) for r in ans],
+                [dns.RRHeader(str(r.name), r.type, r.cls, max(0, r.ttl - diff), r.payload) for r in auth],
+                [dns.RRHeader(str(r.name), r.type, r.cls, max(0, r.ttl - diff), r.payload) for r in add]
             ))
 
 
