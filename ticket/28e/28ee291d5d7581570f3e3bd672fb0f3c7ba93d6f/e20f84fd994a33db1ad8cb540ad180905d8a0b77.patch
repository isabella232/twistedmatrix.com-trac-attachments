Index: twisted/mail/topfiles/4623.bugfix
===================================================================
--- twisted/mail/topfiles/4623.bugfix	(revision 0)
+++ twisted/mail/topfiles/4623.bugfix	(revision 0)
@@ -0,0 +1 @@
+Interface IQueue has been implemented.
Index: twisted/mail/relaymanager.py
===================================================================
--- twisted/mail/relaymanager.py	(revision 35819)
+++ twisted/mail/relaymanager.py	(working copy)
@@ -28,6 +28,8 @@
 except ImportError:
     import pickle
 
+from zope.interface import Interface, implements
+
 from twisted.python import log
 from twisted.python.failure import Failure
 from twisted.python.compat import set
@@ -131,9 +133,124 @@
         protocol.factory = self
         return protocol
 
+class IQueue(Interface):
+    """
+    A queue of mail messages to be relayed.
+    """
+
+
+    def createNewMessage():
+        """
+        Create a new message in the queue.
+
+        @return: A tuple containing the message header and a file-like object containing references to the message file.
+        @rtype:  C{tuple}
+        """
+
+
+    def readDirectory():
+        """
+        Look for new messages in the messages directory adding them to queue of messages waiting to be relayed.
+
+        @return: C{None}
+        @rtype:  C{NoneType}
+        """
+
+
+    def done(message):
+        """
+        Remove message from the queue and delete it from the file system.
+
+        @param message: Message to be removed.
+        @type message: C{str}
+        """ 
+
+
+    def getPath(message):
+        """
+        Get the filesystem path of the given message.
+
+        @param message: Message for which the filesystem path of the file object is required
+        @type message: C{str}
+
+        @return: a string representing the filesystem path where the message is stored.
+        @rtype:  C{str}
+        """
+
+
+    def hasWaiting():
+        """
+        Check if there are any messages to be relayed.
+
+        @return: a boolean value which is C{True} if there are any messages waiting to be transferred and C{False} if there are no messages waiting to be transferred.
+        @rtype:  C{bool}
+        """
+
+
+    def getWaiting():
+        """
+        Return a list of messages waiting to be relayed.
+
+        @return: a list of messages waiting in the queue to be relayed.
+        @rtype:  C{list}
+        """
+
+
+    def setWaiting(message):
+        """
+        Add a message to the queue of messages waiting to be relayed.
+
+        @param message: Message to be added to the queue of messages waiting to be relayed. 
+        @type message: C{str}
+        """
+
+
+    def getRelayed():
+        """
+        Get the list of relayed messages.
+
+        @return: a list of messages relayed by the system.
+        @rtype:  C{list}
+        """
+ 
+
+    def setRelaying(message):
+        """
+        Add a message from the waiting queue to the queue of messages to be relayed.
+
+        @param message: Message to be added to the queue of messages to be relayed.
+        @type message: C{str}
+        """
+
+
+    def getEnvelope(message):
+        """
+        Get a message file object for the given message.
+
+        @type message: C{str}
+        @param message: Message for which the file object is to be obtained.
+
+        @return: Message file object for the message.
+        @rtype:  C{object}
+        """
+
+ 
+    def getEnvelopeFile(message):
+        """
+        Get the file handle to the message file object of a given message.
+
+        @type message: C{str}
+        @param message: The message for which the file handle to its message file object is to be obtained.
+
+        @return: File handle of the message file object of message.
+        @rtype: C{file}
+        """
+
 class Queue:
     """A queue of ougoing emails."""
 
+    implements(IQueue)
+
     noisy = True
 
     def __init__(self, directory):
Index: twisted/mail/test/test_mail.py
===================================================================
--- twisted/mail/test/test_mail.py	(revision 35819)
+++ twisted/mail/test/test_mail.py	(working copy)
@@ -15,6 +15,7 @@
 import signal
 
 from zope.interface import Interface, implements
+from zope.interface.verify import verifyObject
 
 from twisted.trial import unittest
 from twisted.mail import smtp
@@ -51,6 +52,7 @@
 
 from twisted.test.proto_helpers import LineSendingProtocol
 
+from twisted.mail.relaymanager import IQueue
 class DomainWithDefaultsTestCase(unittest.TestCase):
     def testMethods(self):
         d = dict([(x, x + 10) for x in range(10)])
@@ -1002,6 +1004,12 @@
                 ['header', i]
             )
 
+    def test_queueInterface(self):
+        """
+        Verify that L{Queue} implements L{IQueue}.
+        """
+        self.assertTrue(verifyObject(IQueue, self.queue))
+
 from twisted.names import server
 from twisted.names import client
 from twisted.names import common
