diff --git a/twisted/manhole/explorer.py b/twisted/manhole/explorer.py
index 428b3e2..41db66e 100644
--- a/twisted/manhole/explorer.py
+++ b/twisted/manhole/explorer.py
@@ -15,7 +15,7 @@ L{inspect} module available in Python 2.1.
 """
 
 # System Imports
-import inspect, string, sys, types
+import inspect, sys, types
 import UserDict
 
 # Twisted Imports
@@ -210,7 +210,7 @@ class ExplorerInstance(Explorer):
             # TODO: Make screening of private attributes configurable.
             if i[0] == '_':
                 continue
-            mIdentifier = string.join([identifier, i], ".")
+            mIdentifier = ".".join([identifier, i])
             member = getattr(instance, i)
             mType = type(member)
 
@@ -249,7 +249,7 @@ class ExplorerClass(Explorer):
             if (i[0] == '_') and (i != '__init__'):
                 continue
 
-            mIdentifier = string.join([identifier, i], ".")
+            mIdentifier = ".".join([identifier, i])
             member = getattr(theClass, i)
             mType = type(member)
 
@@ -496,7 +496,7 @@ class Signature(pb.Copyable):
                 a = name
             arglist.append(a)
 
-        return string.join(arglist,", ")
+        return ", ".join(arglist)
 
 
 
diff --git a/twisted/manhole/service.py b/twisted/manhole/service.py
index 332bc81..c0ef169 100644
--- a/twisted/manhole/service.py
+++ b/twisted/manhole/service.py
@@ -20,7 +20,6 @@ import explorer
 # system imports
 from cStringIO import StringIO
 
-import string
 import sys
 import traceback
 import types
@@ -32,7 +31,7 @@ class FakeStdIO:
         self.list = list
 
     def write(self, text):
-        log.msg("%s: %s" % (self.type, string.strip(str(text))))
+        log.msg("%s: %s" % (self.type, str(text).strip()))
         self.list.append((self.type, text))
 
     def flush(self):
@@ -61,7 +60,7 @@ class FakeStdIO:
                 else:
                     messages = map(lambda l: l[1],
                                    inlist[block_begin:i])
-                    message = string.join(messages, '')
+                    message = ''.join(messages)
                     outlist.append((last_type, message))
                 last_type = mtype
                 block_begin = i
