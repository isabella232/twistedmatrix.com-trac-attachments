Index: twisted/python/logfile.py
===================================================================
--- twisted/python/logfile.py	(revision 30568)
+++ twisted/python/logfile.py	(working copy)
@@ -1,6 +1,6 @@
 # -*- test-case-name: twisted.test.test_logfile -*-
 
-# Copyright (c) 2001-2007 Twisted Matrix Laboratories.
+# Copyright (c) 2001-2011 Twisted Matrix Laboratories.
 # See LICENSE for details.
 
 """
@@ -29,9 +29,10 @@
         @param directory: directory holding the file
         @param defaultMode: permissions used to create the file. Default to
         current permissions of the file if the file exists.
+
+        @return: a C{BaseLogFile} object, or an C{IOError} exception.
         """
         self.directory = directory
-        assert os.path.isdir(self.directory)
         self.name = name
         self.path = os.path.join(directory, name)
         if defaultMode is None and os.path.exists(self.path):
Index: twisted/python/test/test_logfile.py
===================================================================
--- twisted/python/test/test_logfile.py	(revision 0)
+++ twisted/python/test/test_logfile.py	(revision 0)
@@ -0,0 +1,37 @@
+# Copyright (c) 2001-2011 Twisted Matrix Laboratories.
+# See LICENSE for details.
+
+"""
+Tests for L{twisted.python.logfile}.
+"""
+
+import os
+from twisted.trial import unittest
+from twisted.python.logfile import BaseLogFile
+
+class BaseLogFileTest(unittest.TestCase):
+    """
+    Tests for L{BaseLogFile}
+    """
+
+    def setUp(self):
+        """
+        Generate a valid directory to use for test file creation
+        """
+        self._dir = self.mktemp()
+        os.mkdir(self._dir)
+
+    def test_validPath(self):
+        """
+        Check L{BaseLogFile._openFile} returns correctly for the happy path
+        """
+        logfile = BaseLogFile("foo.txt", self._dir)
+        self.assertTrue(isinstance(logfile, BaseLogFile))
+        logfile.close()
+
+    def test_invalidPath(self):
+        """
+        Ensure the correct exception is returned for invalid path upon
+        instantiation
+        """
+        self.assertRaises(IOError, BaseLogFile, "bar.txt", self.mktemp())
Index: twisted/topfiles/4259.bugfix
===================================================================
--- twisted/topfiles/4259.bugfix	(revision 0)
+++ twisted/topfiles/4259.bugfix	(revision 0)
@@ -0,0 +1 @@
+twisted.python.logfile.BaseLogFile no longer uses assert() to check for valid file paths.  IOError Exceptions are allowed to return from later file() calls instead.
