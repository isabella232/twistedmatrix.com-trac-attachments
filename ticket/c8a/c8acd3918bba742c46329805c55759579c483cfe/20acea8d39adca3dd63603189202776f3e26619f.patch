From dab41a73e067665899e640aeff5d520e908f916e Mon Sep 17 00:00:00 2001
From: Will Thompson <will@willthompson.co.uk>
Date: Mon, 9 Mar 2015 18:17:06 +0000
Subject: [PATCH] ReverseProxyResource.getChild: return same class

Fixes: #7806
---
 twisted/web/proxy.py           |  2 +-
 twisted/web/test/test_proxy.py | 15 +++++++++++++++
 2 files changed, 16 insertions(+), 1 deletion(-)

diff --git a/twisted/web/proxy.py b/twisted/web/proxy.py
index 9e69293..d0910c6 100644
--- a/twisted/web/proxy.py
+++ b/twisted/web/proxy.py
@@ -274,7 +274,7 @@ class ReverseProxyResource(Resource):
         as this one, except that its path also contains the segment given by
         C{path} at the end.
         """
-        return ReverseProxyResource(
+        return self.__class__(
             self.host, self.port, self.path + '/' + urlquote(path, safe=""),
             self.reactor)
 
diff --git a/twisted/web/test/test_proxy.py b/twisted/web/test/test_proxy.py
index 3ed1893..fa94b91 100644
--- a/twisted/web/test/test_proxy.py
+++ b/twisted/web/test/test_proxy.py
@@ -97,6 +97,21 @@ class ReverseProxyResourceTests(TestCase):
         self.assertEqual(child.path, "/path/%20%2F%25")
 
 
+    def test_getChildOfSubclass(self):
+        """
+        The L{ReverseProxyResource.getChild} method, when called on a subclass of
+        L{ReverseProxyResource}, should return an instance of that subclass.
+        """
+        class MyReverseProxyResource(ReverseProxyResource):
+            pass
+
+        reactor = MemoryReactor()
+        resource = MyReverseProxyResource("127.0.0.1", 1234, "/path", reactor)
+        child = resource.getChild('foo', None)
+        # The child should keep the same class
+        self.assertIsInstance(child, ReverseProxyResource)
+        self.assertIsInstance(child, MyReverseProxyResource)
+
 
 class DummyChannel(object):
     """
-- 
2.1.4

