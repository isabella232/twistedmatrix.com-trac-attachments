Index: twisted/mail/relaymanager.py
===================================================================
--- twisted/mail/relaymanager.py	(revision 38615)
+++ twisted/mail/relaymanager.py	(working copy)
@@ -306,7 +306,8 @@
         if self.manager.queue.noisy:
             log.msg("Backing off on delivery of " + str(msgs))
         def setWaiting(queue, messages):
-            map(queue.setWaiting, messages)
+            for message in messages:
+                queue.setWaiting(message)
         from twisted.internet import reactor
         reactor.callLater(30, setWaiting, self.manager.queue, msgs)
         del self.manager.managed[relay]
@@ -435,7 +436,8 @@
         log.err('Error setting up managed relay factory for ' + domain)
         log.err(failure)
         def setWaiting(queue, messages):
-            map(queue.setWaiting, messages)
+            for message in messages:
+                queue.setWaiting(message)
         from twisted.internet import reactor
         reactor.callLater(30, setWaiting, self.queue, self.managed[factory])
         del self.managed[factory]
Index: twisted/mail/mail.py
===================================================================
--- twisted/mail/mail.py	(revision 38615)
+++ twisted/mail/mail.py	(working copy)
@@ -263,7 +263,8 @@
 
     def addDomain(self, name, domain):
         portal = Portal(domain)
-        map(portal.registerChecker, domain.getCredentialsCheckers())
+        for checker in domain.getCredentialsCheckers():
+            portal.registerChecker(checker)
         self.domains[name] = domain
         self.portals[name] = portal
         if self.aliases and IAliasableDomain.providedBy(domain):
Index: twisted/internet/process.py
===================================================================
--- twisted/internet/process.py	(revision 38615)
+++ twisted/internet/process.py	(working copy)
@@ -676,7 +676,8 @@
 
             self._fork(path, uid, gid, executable, args, environment, fdmap=fdmap)
         except:
-            map(os.close, _openedPipes)
+            for p in _openedPipes:
+                os.close(p)
             raise
 
         # we are the parent process:
Index: twisted/conch/ssh/connection.py
===================================================================
--- twisted/conch/ssh/connection.py	(revision 38615)
+++ twisted/conch/ssh/connection.py	(working copy)
@@ -59,7 +59,8 @@
         """
         Called when the connection is stopped.
         """
-        map(self.channelClosed, self.channels.values())
+        for chan in self.channels.values():
+            self.channelClosed(chan)
         self._cleanupGlobalDeferreds()
 
 
Index: twisted/conch/insults/window.py
===================================================================
--- twisted/conch/insults/window.py	(revision 38615)
+++ twisted/conch/insults/window.py	(working copy)
@@ -359,7 +359,8 @@
         for n, ch in enumerate(self.children):
             boxes[n % len(boxes)].addChild(ch)
         h = HBox()
-        map(h.addChild, boxes)
+        for box in boxes:
+            h.addChild(box)
         h.render(width, height, terminal)
 
 
