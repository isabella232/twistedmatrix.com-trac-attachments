Index: twisted/words/protocols/jabber/sasl_mechanisms.py
===================================================================
--- twisted/words/protocols/jabber/sasl_mechanisms.py	(revision 25680)
+++ twisted/words/protocols/jabber/sasl_mechanisms.py	(working copy)
@@ -7,7 +7,7 @@
 Protocol agnostic implementations of SASL authentication mechanisms.
 """
 
-import binascii, random, time, os
+import random, time, os
 
 from zope.interface import Interface, Attribute, implements
 
@@ -179,15 +179,6 @@
         from the challenge.
         """
 
-        def H(s):
-            return md5(s).digest()
-
-        def HEX(n):
-            return binascii.b2a_hex(n)
-
-        def KD(k, s):
-            return H('%s:%s' % (k, s))
-
         try:
             username = self.username.encode(charset)
             password = self.password.encode(charset)
@@ -200,15 +191,11 @@
         qop = 'auth'
 
         # TODO - add support for authzid
-        a1 = "%s:%s:%s" % (H("%s:%s:%s" % (username, realm, password)),
-                           nonce,
-                           cnonce)
-        a2 = "AUTHENTICATE:%s" % self.digest_uri
+        from twisted.cred._digest import calcHA1, calcHA2, calcResponse
+        ha1 = calcHA1('md5-sess', username, realm, password, nonce, cnonce)
+        ha2 = calcHA2('md5-sess', 'AUTHENTICATE', self.digest_uri, qop, None)
+        response = calcResponse(ha1, ha2, 'md5-sess', nonce, nc, cnonce, qop)
 
-        response = HEX( KD ( HEX(H(a1)),
-                             "%s:%s:%s:%s:%s" % (nonce, nc,
-                                                 cnonce, "auth", HEX(H(a2)))))
-
         directives = {'username': username,
                       'realm' : realm,
                       'nonce' : nonce,
