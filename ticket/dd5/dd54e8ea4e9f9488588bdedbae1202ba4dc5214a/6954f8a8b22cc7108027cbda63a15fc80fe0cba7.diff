Index: twisted/python/filepath.py
===================================================================
--- twisted/python/filepath.py	(revision 24105)
+++ twisted/python/filepath.py	(working copy)
@@ -620,7 +620,9 @@
 
     def setContent(self, content, ext='.new'):
         sib = self.siblingExtension(ext)
-        sib.open('w').write(content)
+        f = sib.open('w')
+        f.write(content)
+        f.close()
         if platform.isWindows() and exists(self.path):
             os.unlink(self.path)
         os.rename(sib.path, self.path)
Index: twisted/scripts/_twistd_unix.py
===================================================================
--- twisted/scripts/_twistd_unix.py	(revision 24105)
+++ twisted/scripts/_twistd_unix.py	(working copy)
@@ -254,7 +254,9 @@
         if not nodaemon:
             daemonize()
         if pidfile:
-            open(pidfile,'wb').write(str(os.getpid()))
+            f = open(pidfile,'wb')
+            f.write(str(os.getpid()))
+            f.close()
 
 
     def shedPrivileges(self, euid, uid, gid):
Index: twisted/scripts/tap2deb.py
===================================================================
--- twisted/scripts/tap2deb.py	(revision 24105)
+++ twisted/scripts/tap2deb.py	(working copy)
@@ -38,7 +38,9 @@
 }
 
 def save_to_file(file, text):
-    open(file, 'w').write(text)
+    f = open(file, 'w')
+    f.write(text)
+    f.close()
 
 
 def run():
Index: twisted/news/database.py
===================================================================
--- twisted/news/database.py	(revision 24105)
+++ twisted/news/database.py	(working copy)
@@ -413,7 +413,9 @@
 
 
     def flush(self):
-        pickle.dump(self.db, open(self.datafile, 'w'))
+        f = open(self.datafile, 'w')
+        pickle.dump(self.db, f)
+        f.close()
 
 
     def load(self, filename, groups = None, moderators = ()):
Index: twisted/news/tap.py
===================================================================
--- twisted/news/tap.py	(revision 24105)
+++ twisted/news/tap.py	(working copy)
@@ -29,11 +29,13 @@
         except ImportError:
             log.msg("Warning: Cannot import %s" % (self['module'],))
         
-        open(self['schema'], 'w').write(
+        f = open(self['schema'], 'w')
+        f.write(
             database.NewsStorageAugmentation.schema + '\n' +
             database.makeGroupSQL(self['groups']) + '\n' +
             database.makeOverviewSQL()
         )
+        f.close()
         
         info = {
             'host': self['dbhost'], 'user': self['dbuser'],
Index: twisted/test/test_twistd.py
===================================================================
--- twisted/test/test_twistd.py	(revision 24105)
+++ twisted/test/test_twistd.py	(working copy)
@@ -191,7 +191,9 @@
         Create a trivial Application and put it in a tap file on disk.
         """
         self.tapfile = self.mktemp()
-        cPickle.dump(service.Application("Hi!"), file(self.tapfile, 'wb'))
+        f = file(self.tapfile, 'wb')
+        cPickle.dump(service.Application("Hi!"), f)
+        f.close()
 
 
     def test_createOrGetApplicationWithTapFile(self):
Index: twisted/lore/tree.py
===================================================================
--- twisted/lore/tree.py	(revision 24105)
+++ twisted/lore/tree.py	(working copy)
@@ -898,4 +898,6 @@
           url, options, outfileGenerator)
     newFilename = outfileGenerator(filename, ext)
     makeSureDirectoryExists(newFilename)
-    clonedNode.writexml(open(newFilename, 'wb'))
+    f = open(newFilename, 'wb')
+    clonedNode.writexml(f)
+    f.close()
Index: twisted/lore/lmath.py
===================================================================
--- twisted/lore/lmath.py	(revision 24105)
+++ twisted/lore/lmath.py	(working copy)
@@ -34,7 +34,9 @@
                      \\begin{document}\[%s\]
                      \\end{document}''' % (macros, domhelpers.getNodeText(node))
         file = tempfile.mktemp()
-        open(file+'.tex', 'w').write(latexText)
+        f = open(file+'.tex', 'w')
+        f.write(latexText)
+        f.close()
         os.system('latex %s.tex' % file)
         os.system('dvips %s.dvi -o %s.ps' % (os.path.basename(file), file))
         baseimgname = 'latexformula%d.png' % i
Index: twisted/lore/latex.py
===================================================================
--- twisted/lore/latex.py	(revision 24105)
+++ twisted/lore/latex.py	(working copy)
@@ -181,7 +181,9 @@
         data = os.popen("gunzip -dc %s" % (src)).read()
         pre = '<dia:attribute name="scaling">\n          <dia:real val="1"/>'
         post = '<dia:attribute name="scaling">\n          <dia:real val="0.5"/>'
-        open('%s_hacked.dia' % (src), 'wb').write(data.replace(pre, post))
+        f = open('%s_hacked.dia' % (src), 'wb')
+        f.write(data.replace(pre, post))
+        f.close()
         os.system('gzip %s_hacked.dia' % (src,))
         os.system('mv %s_hacked.dia.gz %s_hacked.dia' % (src,src))
         # Let's pretend we never saw that.
Index: twisted/lore/nevowlore.py
===================================================================
--- twisted/lore/nevowlore.py	(revision 24105)
+++ twisted/lore/nevowlore.py	(working copy)
@@ -71,7 +71,9 @@
     newFilename = outfileGenerator(filename, ext)
 
     if options.has_key('nolore'):
-        open(newFilename, 'w').write(s)
+        f = open(newFilename, 'w')
+        f.write(s)
+        f.close()
         return
 
     doc = parseStringAndReport(s)
@@ -79,7 +81,9 @@
     tree.munge(doc, clonedNode, linkrel, os.path.dirname(filename), filename, ext,
                url, options, outfileGenerator)
     tree.makeSureDirectoryExists(newFilename)
-    clonedNode.writexml(open(newFilename, 'wb'))
+    f = open(newFilename, 'wb')
+    clonedNode.writexml(f)
+    f.close()
 
     
 
Index: twisted/lore/slides.py
===================================================================
--- twisted/lore/slides.py	(revision 24105)
+++ twisted/lore/slides.py	(working copy)
@@ -278,7 +278,9 @@
     for slide, index in zip(slides, range(len(slides))):
         newFilename = outfileGenerator(filename, ext, index)
         makeSureDirectoryExists(newFilename)
-        slide.dom.writexml(open(newFilename, 'wb'))
+        f = open(newFilename, 'wb')
+        slide.dom.writexml(f)
+        f.close()
 
 # Prosper output
 
