diff --git a/twisted/internet/test/test_core.py b/twisted/internet/test/test_core.py
index 76c1eef..4ebc1c0 100644
--- a/twisted/internet/test/test_core.py
+++ b/twisted/internet/test/test_core.py
@@ -270,7 +270,7 @@ class SystemEventTestsBuilder(ReactorBuilder):
         reactor.iterate(0) # Shouldn't block
         elapsed = time.time() - start
 
-        self.failUnless(elapsed < 2)
+        self.assertTrue(elapsed < 2)
         t.cancel()
 
 
diff --git a/twisted/internet/test/test_glibbase.py b/twisted/internet/test/test_glibbase.py
index 53524cd..26c3311 100644
--- a/twisted/internet/test/test_glibbase.py
+++ b/twisted/internet/test/test_glibbase.py
@@ -28,7 +28,7 @@ class EnsureNotImportedTests(TestCase):
         self.patch(sys, "modules", modules)
         ensureNotImported(["m1", "m2"], "A message.",
                           preventImports=["m1", "m2", "m3"])
-        self.assertEquals(modules, {"m1": None, "m2": None, "m3": None})
+        self.assertEqual(modules, {"m1": None, "m2": None, "m3": None})
 
 
     def test_ensureWhenNotImportedDontPrevent(self):
@@ -39,7 +39,7 @@ class EnsureNotImportedTests(TestCase):
         modules = {}
         self.patch(sys, "modules", modules)
         ensureNotImported(["m1", "m2"], "A message.")
-        self.assertEquals(modules, {})
+        self.assertEqual(modules, {})
 
 
     def test_ensureWhenFailedToImport(self):
@@ -50,7 +50,7 @@ class EnsureNotImportedTests(TestCase):
         modules = {"m2": None}
         self.patch(sys, "modules", modules)
         ensureNotImported(["m1", "m2"], "A message.", preventImports=["m1", "m2"])
-        self.assertEquals(modules, {"m1": None, "m2": None})
+        self.assertEqual(modules, {"m1": None, "m2": None})
 
 
     def test_ensureFailsWhenImported(self):
@@ -64,5 +64,5 @@ class EnsureNotImportedTests(TestCase):
         e = self.assertRaises(ImportError, ensureNotImported,
                               ["m1", "m2"], "A message.",
                               preventImports=["m1", "m2"])
-        self.assertEquals(modules, {"m2": module})
-        self.assertEquals(e.args, ("A message.",))
+        self.assertEqual(modules, {"m2": module})
+        self.assertEqual(e.args, ("A message.",))
diff --git a/twisted/internet/test/test_iocp.py b/twisted/internet/test/test_iocp.py
index 76d7646..ac93cdf 100644
--- a/twisted/internet/test/test_iocp.py
+++ b/twisted/internet/test/test_iocp.py
@@ -108,7 +108,7 @@ class IOCPReactorTestCase(unittest.TestCase):
         """
         ir = IOCPReactor()
         ir.wakeUp()
-        self.failIf(ir.doIteration(None))
+        self.assertFalse(ir.doIteration(None))
 
 
     def test_reactorInterfaces(self):
diff --git a/twisted/internet/test/test_threads.py b/twisted/internet/test/test_threads.py
index 1436918..ddb2c69 100644
--- a/twisted/internet/test/test_threads.py
+++ b/twisted/internet/test/test_threads.py
@@ -124,7 +124,7 @@ class ThreadTestsBuilder(ReactorBuilder):
                           reactor.callFromThread, threadCall)
         self.runReactor(reactor, 5)
 
-        self.assertEquals(result, [threading.currentThread()])
+        self.assertEqual(result, [threading.currentThread()])
 
 
     def test_stopThreadPool(self):
