--- test_imap.py	2006-08-14 16:33:23.000000000 -0700
+++ test_imap_1978.py	2006-08-14 16:32:05.000000000 -0700
@@ -2146,6 +2146,35 @@
         d = loopback.loopbackTCP(self.server, self.client, noisy=False)
         d.addCallback(lambda ign: self.assertEquals(self.result, self.expected))
         return d
+
+    def testFetchBodyPartOfNonMultipart(self):
+        self.function = self.client.fetchBodyParts
+        self.messages = '1'
+        parts = [1]
+        outerBody = 'DA body'
+        headers = util.OrderedDict()
+        headers['from'] = 'sender@host'
+        headers['to'] = 'recipient@domain'
+        headers['subject'] = 'booga booga boo'
+        headers['content-type'] = 'text/plain'
+        self.msgObjs = [FakeyMessage(
+            headers, (), None, outerBody, 123, None)]
+
+        self.expected = {
+            0: {'1': outerBody},
+        }
+
+        def result(R):
+            self.result = R
+
+        self.connected.addCallback(lambda _: self.function(self.messages, parts))
+        self.connected.addCallback(result)
+        self.connected.addCallback(self._cbStopClient)
+        self.connected.addErrback(self._ebGeneral)
+
+        d = loopback.loopbackTCP(self.server, self.client, noisy=False)
+        d.addCallback(lambda ign: self.assertEquals(self.result, self.expected))
+        return d
  
     def testFetchSize(self, uid=0):
         self.function = self.client.fetchSize
