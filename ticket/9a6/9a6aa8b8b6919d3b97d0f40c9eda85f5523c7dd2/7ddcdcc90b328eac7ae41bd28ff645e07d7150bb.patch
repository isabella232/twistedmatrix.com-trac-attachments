Index: twisted/internet/abstract.py
===================================================================
--- twisted/internet/abstract.py	(revision 33503)
+++ twisted/internet/abstract.py	(working copy)
@@ -329,9 +329,8 @@
         streaming producer is registered, it will be paused until the buffered
         data is written to the underlying file descriptor.
         """
-        for i in iovec:
-            if isinstance(i, unicode): # no, really, I mean it
-                raise TypeError("Data must not be unicode")
+        if unicode in map(type,  iovec):
+            raise TypeError("Data must not be unicode")
         if not self.connected or not iovec or self._writeDisconnected:
             return
         self._tempDataBuffer.extend(iovec)
Index: twisted/internet/test/test_abstract.py
===================================================================
--- twisted/internet/test/test_abstract.py	(revision 33503)
+++ twisted/internet/test/test_abstract.py	(working copy)
@@ -8,7 +8,7 @@
 
 from twisted.trial.unittest import TestCase
 
-from twisted.internet.abstract import isIPv6Address
+from twisted.internet.abstract import FileDescriptor, isIPv6Address
 
 class IPv6AddressTests(TestCase):
     """
@@ -54,3 +54,16 @@
         self.assertFalse(isIPv6Address("%eth0"))
         self.assertFalse(isIPv6Address(":%eth0"))
         self.assertFalse(isIPv6Address("hello%eth0"))
+
+class FileDescriptorTests(TestCase):
+    """
+    Test for L{FileDescriptor}, a class for creating objects that can be 
+    operated upon by select().
+    """
+    
+    def test_writeSequenceUnicodeData(self):
+        """
+        L{writeSequence} will raise a TypeError if a unicode object is passed
+        as part of the data sequence
+        """
+        self.assertRaises(TypeError, FileDescriptor.writeSequence,  [u''])
