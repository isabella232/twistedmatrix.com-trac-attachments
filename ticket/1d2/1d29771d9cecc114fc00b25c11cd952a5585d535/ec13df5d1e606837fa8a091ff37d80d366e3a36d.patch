Index: twisted/web/http.py
===================================================================
--- twisted/web/http.py	(revision 37854)
+++ twisted/web/http.py	(working copy)
@@ -791,7 +791,22 @@
 
 
     def __repr__(self):
-        return '<%s %s %s>'% (self.method, self.uri, self.clientproto)
+		"""
+		Return the class name, address, method, uri and client protocol of the 
+		C{Request} instance as a C{string} in the form
+			<CLASSNAME at ADDRESS method=METHOD uri=URI clientproto=CLIENTPROTOCOL>
+		
+		@return: C{string} in the form
+			<CLASSNAME at ADDRESS method=METHOD uri=URI clientproto=CLIENTPROTOCOL>
+		@rtype: C{string}
+		"""
+		return '<%s.%s at 0x%x method=%s uri=%s clientproto=%s>' % (
+			nativeString(self.__module__),
+			nativeString(self.__class__.__name__),
+			id(self),
+			nativeString(self.method),
+			nativeString(self.uri),
+			nativeString(self.clientproto)) 
 
     def process(self):
         """
@@ -847,7 +862,7 @@
 
         @rtype: C{bytes} or C{NoneType}
         @return: The value of the specified header, or C{None} if that header
-            was not present in the request.
+        	was not present in the request.
         """
         value = self.requestHeaders.getRawHeaders(key)
         if value is not None:
Index: twisted/web/test/test_http.py
===================================================================
--- twisted/web/test/test_http.py	(revision 37854)
+++ twisted/web/test/test_http.py	(working copy)
@@ -1653,7 +1653,24 @@
         self.assertRaises(RuntimeError, req.finish)
 
 
+	def test_repr(self):
+		"""
+		L{Request.__repr__} returns the class name, address, uri and client protocol of
+		the C{Request} instance as a C{string} in the form
+			<ClASSNAME at ADDRESS method=METHOD uri=URI clientproto=CLIENTPROTOCOL>
+		"""
+		request = http.Request(DummyChannel(), False)
+		self.assertEqual(repr(request),
+			'<twisted.web.http.Request at 0x%x method=(no method yet) uri=(no uri yet) clientproto=(no clientproto yet)>' % (
+			id(request),))
+		request.clientproto = b'HTTP/1.0'
+		request.method = b'GET'
+		request.uri = b'/foo/bar'
+		self.assertEqual(repr(request),
+			'<twisted.web.http.Request at 0x%x method=GET uri=/foo/bar/ clientproto=HTTP/1.0>' % (
+			id(request),))
 
+
 class MultilineHeadersTestCase(unittest.TestCase):
     """
     Tests to exercise handling of multiline headers by L{HTTPClient}.  RFCs 1945
