Index: twisted/words/test/test_irc.py
===================================================================
--- twisted/words/test/test_irc.py	(revision 24332)
+++ twisted/words/test/test_irc.py	(working copy)
@@ -566,6 +566,31 @@
         self.failIf(self.transport.getvalue())
 
 
+    def test_away(self):
+        """
+        Verify that L{IRCCLient.away} is sent correctly.
+        """
+        message = 'Sorry, I\'m not here.'
+        self.protocol.away(message)
+        expected = [
+            'AWAY :%s' % ('Sorry, I\'m not here.'),
+            '',
+        ]
+        self.assertEqual(self.transport.getvalue().split('\r\n'), expected)
+
+
+    def test_back(self):
+        """
+        Verify that L{IRCClient.back} simply sends an empty AWAY command.
+        """
+        self.protocol.back()
+        expected = [
+            'AWAY :',
+            '',
+        ]
+        self.assertEqual(self.transport.getvalue().split('\r\n'), expected)
+
+
     def test_register(self):
         """
         Verify that the L{IRCClient.register} method sends a a USER command
Index: twisted/words/protocols/irc.py
===================================================================
--- twisted/words/protocols/irc.py	(revision 24332)
+++ twisted/words/protocols/irc.py	(working copy)
@@ -918,6 +918,10 @@
     def away(self, message=''):
         self.sendLine("AWAY :%s" % message)
 
+    def back(self):
+        """Clear the away status"""
+        self.away() # An empty away marks us as back
+
     def register(self, nickname, hostname='foo', servername='bar'):
         if self.password is not None:
             self.sendLine("PASS %s" % self.password)
