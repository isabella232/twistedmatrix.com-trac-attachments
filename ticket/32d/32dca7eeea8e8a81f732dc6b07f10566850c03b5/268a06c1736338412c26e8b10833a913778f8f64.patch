diff --git a/twisted/web/test/requesthelper.py b/twisted/web/test/requesthelper.py
index 21239ee..09e4514 100644
--- a/twisted/web/test/requesthelper.py
+++ b/twisted/web/test/requesthelper.py
@@ -19,6 +19,7 @@ from twisted.internet.defer import Deferred
 from twisted.internet.address import IPv4Address
 from twisted.internet.interfaces import ISSLTransport
 
+from twisted.web.http import Request
 from twisted.web.http_headers import Headers
 from twisted.web.resource import Resource
 from twisted.web.server import NOT_DONE_YET, Session, Site
@@ -78,12 +79,12 @@ class DummyRequest(object):
         be called back with C{None} when C{finish} is called or which will be
         errbacked if C{processingFailed} is called.
 
-    @type headers: C{dict}
-    @ivar headers: A mapping of header name to header value for all request
+    @type requestheaders: C{Headers}
+    @ivar requestheaders: A Headers instance that stores values for all request
         headers.
 
-    @type outgoingHeaders: C{dict}
-    @ivar outgoingHeaders: A mapping of header name to header value for all
+    @type responseHeaders: C{Headers}
+    @ivar responseHeaders: A Headers instance that stores values for all
         response headers.
 
     @type responseCode: C{int}
@@ -115,15 +116,16 @@ class DummyRequest(object):
         self.session = None
         self.protoSession = session or Session(0, self)
         self.args = {}
-        self.outgoingHeaders = {}
         self.requestHeaders = Headers()
         self.responseHeaders = Headers()
         self.responseCode = None
-        self._headers = {}
         self._finishedDeferreds = []
         self._serverName = b"dummy"
         self.clientproto = b"HTTP/1.0"
 
+        # Steal functions and docstrings directly from twisted.web.http.Request
+        self.getAllHeaders = Request.getAllHeaders
+
     def getHeader(self, name):
         """
         Retrieve the value of a request header.
@@ -138,20 +140,6 @@ class DummyRequest(object):
         return self.requestHeaders.getRawHeaders(name.lower(), [None])[0]
 
 
-    def getAllHeaders(self):
-        """
-        Return dictionary mapping the names of all received headers to the last
-        value received for each.
-
-        Since this method does not return all header information,
-        C{self.requestHeaders.getAllRawHeaders()} may be preferred.
-        """
-        headers = {}
-        for k, v in self.requestHeaders.getAllRawHeaders():
-            headers[k.lower()] = v[-1]
-        return headers
-
-
     def setHeader(self, name, value):
         """TODO: make this assert on write() if the header is content-length
         """
diff --git a/twisted/web/test/test_static.py b/twisted/web/test/test_static.py
index 4e79536..5c2cf0e 100644
--- a/twisted/web/test/test_static.py
+++ b/twisted/web/test/test_static.py
@@ -19,7 +19,7 @@ from twisted.internet import abstract, interfaces
 from twisted.python.runtime import platform
 from twisted.python.filepath import FilePath
 from twisted.python import log
-from twisted.python.compat import iteritems, intToBytes, networkString
+from twisted.python.compat import intToBytes, networkString
 from twisted.trial.unittest import TestCase
 from twisted.web import static, http, script, resource
 from twisted.web.server import UnsupportedMethod
@@ -711,7 +711,7 @@ class StaticMakeProducerTests(TestCase):
         """
         request = DummyRequest([])
         request.requestHeaders.addRawHeader(b'range', b'bytes=4-10')
-        contentType = b"text/plain"
+        contentType = "text/plain"
         request.requestHeaders.addRawHeader(b'range', b'bytes=10-12,15-20')
         resource = self.makeResourceWithContent(b'abc', type=contentType)
         with resource.openForReading() as file:
diff --git a/twisted/web/test/test_web.py b/twisted/web/test/test_web.py
index ab6201c..0048d55 100644
--- a/twisted/web/test/test_web.py
+++ b/twisted/web/test/test_web.py
@@ -1246,8 +1246,9 @@ class LogEscapingTests(unittest.TestCase):
         """
         self.site._logDateTime = "[%02d/%3s/%4d:%02d:%02d:%02d +0000]" % (
             25, 'Oct', 2004, 12, 31, 59)
-        self.request.requestHeaders.addRawHeader(b'referer',
-                               b'http://malicious" ".website.invalid')
+        self.request.requestHeaders.addRawHeader(
+            b'referer',
+            b'http://malicious" ".website.invalid')
         self.assertLogs(
             b'"1.2.3.4" - - [25/Oct/2004:12:31:59 +0000] '
             b'"GET /dummy HTTP/1.0" 123 - '
diff --git a/twisted/web/topfiles/8140.misc b/twisted/web/topfiles/8140.misc
index e69de29..5222873 100644
--- a/twisted/web/topfiles/8140.misc
+++ b/twisted/web/topfiles/8140.misc
@@ -0,0 +1 @@
+twisted.web.test.requesthelper.DummyRequest's headers and outgoingHeaders attributes are removed.  All unit tests updated to use correct/current API.
