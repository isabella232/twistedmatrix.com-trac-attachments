Index: win32eventreactor.py
===================================================================
RCS file: /project/ci/cvsroot/v5/src/tools/test_sshd/win32eventreactor.py,v
retrieving revision 1.1
retrieving revision 1.2
diff -u -r1.1 -r1.2
--- win32eventreactor.py	25 Apr 2006 13:51:52 -0000	1.1
+++ win32eventreactor.py	25 Apr 2006 14:31:11 -0000	1.2
@@ -197,7 +197,7 @@
 
     doIteration = doWaitForMultipleEvents
 
-    def spawnProcess(self, processProtocol, executable, args=(), env={}, path=None, usePTY=0):
+    def spawnProcess(self, processProtocol, executable, args=(), env=None, path=None, usePTY=0):
         """Spawn a process."""
         Process(self, processProtocol, executable, args, env, path)
 
@@ -242,7 +242,7 @@
 
     buffer = ''
 
-    def __init__(self, reactor, protocol, command, args, environment, path):
+    def __init__(self, reactor, protocol, command, args, env, path):
         self.reactor = reactor
         self.protocol = protocol
 
@@ -277,11 +277,8 @@
         win32file.CloseHandle(self.hStdinW)
         self.hStdinW = tmp
 
-        # Add the specified environment to the current environment - this is
-        # necessary because certain operations are only supported on Windows
-        # if certain environment variables are present.
-        env = os.environ.copy()
-        env.update(environment or {})
+        if env is None:
+            env = os.environ
 
         # create the process
         cmdline = ' '.join([_cmdLineQuote(a) for a in args])
