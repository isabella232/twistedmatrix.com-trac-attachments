--- logfile.py.old	2005-06-15 19:33:52.000000000 +0200
+++ logfile.py	2005-06-29 10:06:06.000000000 +0200
@@ -151,6 +151,28 @@
 
 threadable.synchronize(LogFile)
 
+class FixedLogFile(logfile.LogFile):
+    """ A log file that can be rotated on a fixed number of files, erasing the older logs """
+    def __init__(self, name, directory, rotateLength=1000000, defaultMode=None, nbLogFiles=4):
+        logfile.LogFile.__init__(self, name, directory, rotateLength, defaultMode)
+        self.nbLogFiles = nbLogFiles
+        
+    def rotate(self):
+        if not (os.access(self.directory, os.W_OK) and os.access(self.path, os.W_OK)):
+            return
+        logs = self.listLogs()
+        logs.reverse()
+        for i in logs:
+            if i >= self.nbLogFiles:
+                os.remove("%s.%d" % (self.path,i))
+            else:
+                os.rename("%s.%d" % (self.path, i), "%s.%d" % (self.path, i + 1))
+                
+        self._file.close()
+        os.rename(self.path, "%s.1" % self.path)
+        self._openFile()
+
+threadable.synchronize(FixedLogFile)
 
 class DailyLogFile(BaseLogFile):
     """A log file that is rotated daily (at or after midnight localtime)
