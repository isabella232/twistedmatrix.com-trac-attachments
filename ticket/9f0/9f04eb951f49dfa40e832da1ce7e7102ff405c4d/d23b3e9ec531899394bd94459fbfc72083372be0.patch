--- twisted\test\test_process.py~	2008-09-02 09:12:21.000000000 +0200
+++ twisted\test\test_process.py	2009-06-30 17:15:17.944727200 +0200
@@ -2068,6 +2068,55 @@
         """
         return self._testSignal('KILL')
 
+    def test_closeHandles(self):
+        """
+        The win32 handles should be properly closed when the process exits.
+        """
+        import win32api
+
+        connected = defer.Deferred()
+        ended = defer.Deferred()
+
+        class SimpleProtocol(protocol.ProcessProtocol):
+            """
+            A protocol that fires deferreds when connected and disconnected.
+            """
+            def makeConnection(self, transport):
+                connected.callback(transport)
+
+            def processEnded(self, reason):
+                ended.callback(None)
+
+        p = SimpleProtocol()
+
+        pyExe = sys.executable
+        pyArgs = [pyExe, "-u", "-c", "print 'hello'"]
+        proc = reactor.spawnProcess(p, pyExe, pyArgs)
+
+        def cbConnected(transport):
+            self.assertIdentical(transport, proc)
+            # perform a basic validity test on the handles
+            win32api.GetHandleInformation(proc.hProcess)
+            win32api.GetHandleInformation(proc.hThread)
+            # And save their values for later
+            self.hProcess = proc.hProcess
+            self.hThread = proc.hThread
+        connected.addCallback(cbConnected)
+
+        def checkTerminated(ignored):
+            # The attributes on the process object must be reset...
+            self.assertIdentical(proc.pid, None)
+            self.assertIdentical(proc.hProcess, None)
+            self.assertIdentical(proc.hThread, None)
+            # ...and the handles must be closed.
+            self.assertRaises(win32api.error,
+                              win32api.GetHandleInformation, self.hProcess)
+            self.assertRaises(win32api.error,
+                              win32api.GetHandleInformation, self.hThread)
+        ended.addCallback(checkTerminated)
+
+        return ended
+
 
 
 class Dumbwin32procPidTest(unittest.TestCase):
--- twisted\internet\_dumbwin32proc.py~	2008-07-26 22:37:37.000000000 +0200
+++ twisted\internet\_dumbwin32proc.py	2009-06-29 13:55:55.879196500 +0200
@@ -205,8 +205,6 @@
                                     origcmd, sheb))
                         raise OSError(pwte2)
 
-        win32file.CloseHandle(self.hThread)
-
         # close handles which only the child will use
         win32file.CloseHandle(hStderrW)
         win32file.CloseHandle(hStdoutW)
@@ -310,6 +308,10 @@
 
     def maybeCallProcessEnded(self):
         if self.closedNotifies == 3 and self.lostProcess:
+            win32file.CloseHandle(self.hProcess)
+            win32file.CloseHandle(self.hThread)
+            self.hProcess = None
+            self.hThread = None
             BaseProcess.maybeCallProcessEnded(self)
 
 
