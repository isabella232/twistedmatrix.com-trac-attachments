# Bazaar merge directive format 2 (Bazaar 0.90)
# revision_id: esteve@fluidinfo.com-20090330165750-o7m0l3ypi8mkelpu
# target_branch: ../trunk/
# testament_sha1: 658294ae32fb53f7518994ea0f6cce33718efcbd
# timestamp: 2009-04-02 01:49:23 +0200
# base_revision_id: svn-v4:bbbe8e31-12d6-0310-92fd-\
#   ac37d47ddeeb:trunk:26540
# 
# Begin patch
=== modified file 'twisted/python/failure.py'
--- twisted/python/failure.py	2008-09-01 00:38:28 +0000
+++ twisted/python/failure.py	2009-03-30 16:57:50 +0000
@@ -282,15 +282,15 @@
         automatically re-raised if it is not a type that you expect.
 
         The reason for having this particular API is because it's very useful
-        in Deferred errback chains:
+        in Deferred errback chains::
 
-        | def _ebFoo(self, failure):
-        |     r = failure.trap(Spam, Eggs)
-        |     print 'The Failure is due to either Spam or Eggs!'
-        |     if r == Spam:
-        |         print 'Spam did it!'
-        |     elif r == Eggs:
-        |         print 'Eggs did it!'
+            def _ebFoo(self, failure):
+                r = failure.trap(Spam, Eggs)
+                print 'The Failure is due to either Spam or Eggs!'
+                if r == Spam:
+                    print 'Spam did it!'
+                elif r == Eggs:
+                    print 'Eggs did it!'
 
         If the failure is not a Spam or an Eggs, then the Failure
         will be 'passed on' to the next errback.

# Begin bundle
IyBCYXphYXIgcmV2aXNpb24gYnVuZGxlIHY0CiMKQlpoOTFBWSZTWaRIYcQAAb1/gARUQAB75///
VwAMAL/v3/BQA9k9zpzcZAu4CSSExo1T1T9TwTEptT0IxPapmoD1HqY0CSiU9oZGp5E1PSBpoAAA
0AAJIQSZTATJlMyNHqRkZGg00ep6maHMAmAEwAAmAAJgACSU0yEmxTynpiap4KNg1T1PUeFBpo0E
zNp6jZj/ftwKa9tDTYsCmMsTVnWJIOie2K7ZyxiSmBx/6rzHlnYZjf6LkrOo1+F5s7RTgrG3d/nx
aUekb2r6+jbeXrS+ae7dK6NxFE+DoDJmDVcQus4X0HThn18mytAc+2ICqctVvx70y1tjbsnl11pX
pRCqSpSoz9IxT1BETpOCukfbH3RO9L3zOSzij8+yUpnA6JdxWjB4ECFg0xFBK16TGJY0LVoNC3tM
5pRWwayJIXlxWscN5MHinVDpYE2rJqKA8EMSxImSUhg9LGZkppTtcVSyQ+dKDPSRmxWlwx6i000u
9oxA0oaPfkl+hIpcXbKVcyBncX1q4impOVREJYXSS/DB1JgSoUYiqMxYoF0m1wLqRNrKk5J6WoTi
i4c9mKzjTPLclkK0UDJJ5ZGQJqRxaYF/l9OrwB743XhlSnqOM6AkxVaT1vG8StheTGh1b8crHkRf
KO6Q7VNm07tUUcqzxZ1kAYmTG+1/u6qy5jQyjd6NE1U06YGn50vNw4PA5HiYFh2Y3pPIX0PJy8P0
SCy8ZQqPHpK5lxeLesbCkeYYuAtJnB6qxKUgRJcDCbUjAypQJDE5PHnXyt8IyKDuiTTEYyxSp0S7
EnqJNqR4GoqJUqNqX86J4GZQlumj28H8DZcyTrDHxSbGxL517jmQSy1nbCQK5EHPM7DpdMtMy0B/
tfj69hPrTIplzZZeWSzYGwuXp1OKbIBQBNEp5L5hsNhiaibbUUOglAqJsh+OMn1Pkl5gOXPWLuG4
PbaaQb+yYBODahaCfQcEckoGnc8vVYDzy/e8KJEoTr753y2ANwA/yiNO2khVesyTPFmDmKCu1rIV
37nC0T0JSASH0ZhdRRXJjjdAq6ClhrGeOC8GSuMj3g0cQGNaUQVAzIZU64RJQFprz0MBNomS03yI
qpChYuUPgrdXsDYYXqQlDiJz7+Zy2WDMRa1eqbi3akxNDTes8QGcFQo8b8zFRB01aoulIICTEknX
frZXzmM3YfHWrSwBpqihfN0pi+zGBZaF2qCX8MLMrmAylLOhZNBNUDAuPPfGNJirK2FBoFeYUt0k
roAwBygWpgJBkVxAW2Scd28hQpZ6D+4u5IpwoSFIkMOI
