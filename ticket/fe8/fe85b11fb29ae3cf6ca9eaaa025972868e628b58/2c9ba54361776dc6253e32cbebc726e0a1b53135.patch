Index: twisted/python/modules.py
===================================================================
--- twisted/python/modules.py	(revision 25240)
+++ twisted/python/modules.py	(working copy)
@@ -504,10 +504,7 @@
         # even though zip files specify that slashes are always the separator,
         # regardless of platform.
         segs = itsPath.segmentsFrom(myPath)
-        zp = za
-        for seg in segs:
-            zp = zp.child(seg)
-        return zp
+        return za.child(*segs)
 
 registerAdapter(_ZipMapImpl, zipimport.zipimporter, IPathImportMapper)
 
Index: twisted/python/_release.py
===================================================================
--- twisted/python/_release.py	(revision 25240)
+++ twisted/python/_release.py	(working copy)
@@ -122,7 +122,7 @@
                               version)
         _changeVersionInFile(
             oldVersion, version,
-            self.directory.child("topfiles").child("README").path)
+            self.directory.child("topfiles", "README").path)
 
 
 
@@ -597,8 +597,8 @@
         @param howtoPath: The "resource path" as L{DocBuilder} describes it.
         @type howtoPath: L{FilePath}
         """
-        templatePath = self.rootDirectory.child("doc").child("core"
-            ).child("howto").child("template.tpl")
+        templatePath = self.rootDirectory.child("doc", "core", "howto",
+                                                "template.tpl")
         if path.basename() == "man":
             self.manBuilder.build(path)
         if path.isdir():
@@ -718,7 +718,7 @@
             elif not path.basename() in self.subprojects + ["topfiles"]:
                 tarball.add(path.path, buildPath("twisted", path.basename()))
 
-        tarball.add(self.rootDirectory.child("twisted").child("topfiles").path,
+        tarball.add(self.rootDirectory.child("twisted", "topfiles").path,
                     releaseName)
         tarball.close()
 
@@ -741,7 +741,7 @@
         releaseName = "Twisted%s-%s" % (projectName.capitalize(), version)
         outputFile = self.outputDirectory.child(releaseName + ".tar.bz2")
         buildPath = lambda *args: '/'.join((releaseName,) + args)
-        subProjectDir = self.rootDirectory.child("twisted").child(projectName)
+        subProjectDir = self.rootDirectory.child("twisted", projectName)
 
         tarball = self._createBasicSubprojectTarball(projectName, version,
                                                      outputFile)
@@ -756,7 +756,7 @@
                     child.path,
                     buildPath("twisted", projectName, name))
 
-        pluginsDir = self.rootDirectory.child("twisted").child("plugins")
+        pluginsDir = self.rootDirectory.child("twisted", "plugins")
         # Include the plugin for the subproject.
         pluginFileName = "twisted_%s.py" % (projectName,)
         pluginFile = pluginsDir.child(pluginFileName)
@@ -765,7 +765,7 @@
                         buildPath("twisted", "plugins", pluginFileName))
 
         # Include the bin directory for the subproject.
-        binPath = self.rootDirectory.child("bin").child(projectName)
+        binPath = self.rootDirectory.child("bin", projectName)
         if binPath.isdir():
             tarball.add(binPath.path, buildPath("bin"))
         tarball.close()
@@ -793,7 +793,7 @@
         tarball.add(self.rootDirectory.child("LICENSE").path,
                     buildPath("LICENSE"))
 
-        docPath = self.rootDirectory.child("doc").child(projectName)
+        docPath = self.rootDirectory.child("doc", projectName)
 
         if docPath.isdir():
             for child in docPath.walk():
