diff --git a/twisted/web/http.py b/twisted/web/http.py
index 417ec04..f63b011 100644
--- a/twisted/web/http.py
+++ b/twisted/web/http.py
@@ -428,7 +428,10 @@ class HTTPClient(basic.LineReceiver):
             'field-name: value'.
         @type header: C{bytes}
         """
-        key, val = header.split(b':', 1)
+        try:
+            key, val = header.split(b':', 1)
+        except ValueError:
+            return
         val = val.lstrip()
         self.handleHeader(key, val)
         if key.lower() == b'content-length':
diff --git a/twisted/web/test/test_http.py b/twisted/web/test/test_http.py
index 02ee44a..94a3c3f 100644
--- a/twisted/web/test/test_http.py
+++ b/twisted/web/test/test_http.py
@@ -2566,6 +2566,26 @@ class MultilineHeadersTests(unittest.TestCase):
         self.assertEqual(c.length, 10)
 
 
+    def test_extractIncorrectHeader(self):
+        """
+        An invalid header (e.g. header without colon) does not raise exception in
+        L{HTTPClient.extractHeader}.
+        """
+        c = ClientDriver()
+        c.handleHeader = self.ourHandleHeader
+        c.handleEndHeaders = self.ourHandleEndHeaders
+        c.lineReceived(b'HTTP/1.0 200')
+        c.lineReceived(b'X-Invalid-Header 0')
+        self.assertFalse(self.handleHeaderCalled)
+
+        # Signal end of headers.
+        c.lineReceived(b'')
+        self.assertFalse(self.handleHeaderCalled)
+        self.assertTrue(self.handleEndHeadersCalled)
+        self.assertEqual(c.version, b'HTTP/1.0')
+        self.assertEqual(c.status, b'200')
+
+
     def test_noHeaders(self):
         """
         An HTTP request with no headers will not cause any calls to
diff --git a/twisted/web/topfiles/8212.bugfix b/twisted/web/topfiles/8212.bugfix
new file mode 100644
index 0000000..991703c
--- /dev/null
+++ b/twisted/web/topfiles/8212.bugfix
@@ -0,0 +1 @@
+twisted.web.http.HttpClient does not raise unhandled exceptions when receiving malformed headers from server
