Index: python/filepath.py
===================================================================
--- python/filepath.py	(revision 23090)
+++ python/filepath.py	(working copy)
@@ -362,12 +362,22 @@
     def siblingExtension(self, ext):
         return self.clonePath(self.path+ext)
 
-    def open(self, mode='r'):
-        if self.alwaysCreate:
-            assert 'a' not in mode, "Appending not supported when alwaysCreate == True"
-            return self.create()
-        return open(self.path, mode+'b')
+    def open(self, mode='r', flags=None):
+        """
+        Opens self with given mode.  If option flags is provided (such as
+        os.O_RDONLY, os.O_CREAT, etc or-ed together - see os module 
+        documentation), ignores mode completely. 
 
+        @returns: file handle to self
+        """
+        if flags is None:
+            if self.alwaysCreate:
+                assert 'a' not in mode, "Appending not supported when alwaysCreate == True"
+                return self.create()
+            return open(self.path, mode+'b')
+        else:
+            return os.open(self.path, flags)
+
     # stat methods below
 
     def restat(self, reraise=True):
Index: test/test_paths.py
===================================================================
--- test/test_paths.py	(revision 23090)
+++ test/test_paths.py	(working copy)
@@ -543,6 +543,17 @@
         del nonexistent
         self.assertRaises((OSError, IOError), existent.open)
 
+    def testOpenWithFlags(self):
+        """
+        Verify that opening with flags works - no need to test flags, because
+        they are just passed straight to os.open
+        """
+        # Opening a file for reading when it does not already exist is an error
+        create = self.path.child('createdFile')
+        f = create.open(flags=(os.O_RDWR | os.O_CREAT ))
+        self.failUnless(create.exists())
+        self.assertRaises(OSError, create.open, 
+                          flags=(os.O_RDWR | os.O_CREAT | os.O_EXCL))
 
     def test_existsCache(self):
         """
