--- procmon.py.orig	2007-01-11 15:47:14.000000000 +0100
+++ procmon.py	2007-01-11 16:45:47.000000000 +0100
@@ -49,9 +49,15 @@
 """
 
 import os, time
-from signal import SIGTERM, SIGKILL
+try:
+   from signal import SIGTERM, SIGKILL
+except:
+   # this is what _dumbwin32proc expects
+   # in signalProcess()
+   SIGTERM="TERM"
+   SIGKILL="KILL"
 from twisted.python import log
-from twisted.internet import protocol, reactor, process
+from twisted.internet import protocol, reactor, error
 from twisted.application import service
 from twisted.protocols import basic
 
@@ -123,7 +129,7 @@
             proc = protocol.transport
             try:
                 proc.signalProcess(0)
-            except (OSError, process.ProcessExitedAlready):
+            except (OSError, error.ProcessExitedAlready):
                 log.msg("Lost process %r somehow, restarting." % name)
                 del self.protocols[name]
                 self.startProcess(name)
@@ -182,7 +188,7 @@
     def _forceStopProcess(self, proc):
         try:
             proc.signalProcess(SIGKILL)
-        except process.ProcessExitedAlready:
+        except error.ProcessExitedAlready:
             pass
 
     def stopProcess(self, name):
@@ -192,7 +198,7 @@
         del self.protocols[name]
         try:
             proc.signalProcess(SIGTERM)
-        except process.ProcessExitedAlready:
+        except error.ProcessExitedAlready:
             pass
         else:
             self.murder[name] = reactor.callLater(self.killTime, self._forceStopProcess, proc)
