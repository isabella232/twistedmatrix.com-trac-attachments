Index: twisted/python/filepath.py
===================================================================
--- twisted/python/filepath.py	(revision 31541)
+++ twisted/python/filepath.py	(working copy)
@@ -937,6 +937,8 @@
         """
         Copies self to destination.
 
+        If self doesn't exist, an OSError is raised.
+
         If self is a directory, this method copies its children (but not
         itself) recursively to destination - if destination does not exist as a
         directory, this method creates it.  If destination is a file, an
@@ -1000,6 +1002,8 @@
                     readfile.close()
             finally:
                 writefile.close()
+        elif not self.exists():
+            raise OSError(errno.ENOENT, "Can not copy - source doesn't exist")
         else:
             # If you see the following message because you want to copy
             # symlinks, fifos, block devices, character devices, or unix
Index: twisted/python/test/test_filepath.py
===================================================================
--- twisted/python/test/test_filepath.py	(revision 0)
+++ twisted/python/test/test_filepath.py	(revision 0)
@@ -0,0 +1,26 @@
+# Copyright (c) Twisted Matrix Laboratories.
+# See LICENSE for details.
+
+"""
+Tests for L{twisted.python.filepath} helper.
+"""
+
+import errno
+
+from twisted.trial.unittest import TestCase
+
+from twisted.python.filepath import FilePath
+
+
+class FilePathTests(TestCase):
+    """
+    Tests for L{FilePath}.
+    """
+
+    def test_copyToMissingSource(self):
+        """
+        Check that L{FilePath.copyTo} throws OSError if source is missing.
+        """
+        filepath = FilePath('idon\'t exist')
+        exc = self.assertRaises(OSError, filepath.copyTo, 'some other path')
+        self.assertEquals(exc.errno, errno.ENOENT)
