### Eclipse Workspace Patch 1.0
#P Twisted_5412
Index: twisted/internet/_pollingfile.py
===================================================================
--- twisted/internet/_pollingfile.py	(revision 33504)
+++ twisted/internet/_pollingfile.py	(working copy)
@@ -235,9 +235,29 @@
         self.lostCallback()
 
     def writeSequence(self, seq):
+        """
+        Append a data sequence to the output buffer
+        
+        @param seq: C{sequence} containing the data to be appended to the output buffer. 
+        @type seq:  : A C{sequence}
+        
+        @raise TypeError: If seq contains C{unicode}
+        """
+        if unicode in map(type, seq):
+            raise TypeError("Unicode not allowed in output buffer")
         self.outQueue.extend(seq)
 
     def write(self, data):
+        """
+        Append data to the output buffer
+        
+        @param data: C{str} containing data to be appended to the output buffer
+        @type data: A C{str}
+        
+        @raise TypeError: If the type of data is C{unicode} instead of C{str}
+        """
+        if isinstance(data, unicode):
+            raise TypeError("Unicode not allowed in output buffer") 
         if self.disconnecting:
             return
         self.outQueue.append(data)
@@ -257,9 +277,7 @@
                 return numBytesWritten
         while self.outQueue:
             data = self.outQueue.pop(0)
-            errCode = 0
-            if isinstance(data, unicode):
-                raise TypeError("unicode not allowed")
+            errCode = 0            
             try:
                 errCode, nBytesWritten = win32file.WriteFile(self.writePipe,
                                                              data, None)
Index: twisted/internet/test/test_pollingfile.py
===================================================================
--- twisted/internet/test/test_pollingfile.py	(revision 33504)
+++ twisted/internet/test/test_pollingfile.py	(working copy)
@@ -19,21 +19,28 @@
     """
     Tests for L{_pollingfile._PollableWritePipe}.
     """
-
-    def test_checkWorkUnicode(self):
+    
+    
+    def test_writeUnicode(self):
         """
-        When one tries to pass unicode to L{_pollingfile._PollableWritePipe}, a
-        C{TypeError} is raised instead of passing the data to C{WriteFile}
-        call which is going to mangle it.
+        L{_pollingfile._PollableWritePipe.write} raises a C{TypeError} if
+        an attempt is made to append unicode data to the output buffer
         """
         p = _pollingfile._PollableWritePipe(1, lambda: None)
-        p.write("test")
-        p.checkWork()
+        self.assertRaises(TypeError, p.write, u"test")
+       
+        
+    def test_writeSequenceUnicode(self):
+        """
+        L{_pollingfile._PollableWritePipe.writeSequence} raises a C{TypeError} if
+        unicode data is part of the data sequence to be appended to the output
+        buffer         
+        """
+        p = _pollingfile._PollableWritePipe(1, lambda: None)
+        self.assertRaises(TypeError, p.writeSequence, [u"test"])
+        self.assertRaises(TypeError, p.writeSequence, (u"test",))
+        self.assertRaises(TypeError, p.writeSequence, {u"test":"foo",1:"bar"})
 
-        p.write(u"test")
-        self.assertRaises(TypeError, p.checkWork)
 
-
-
 if _pollingfile is None:
     TestPollableWritePipe.skip = "_pollingfile is only avalable under Windows."
