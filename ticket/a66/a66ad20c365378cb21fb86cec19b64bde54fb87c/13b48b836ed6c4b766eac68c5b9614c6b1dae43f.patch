=== modified file 'doc/web/howto/client.xhtml'
--- doc/web/howto/client.xhtml	2012-03-18 01:04:00 +0000
+++ doc/web/howto/client.xhtml	2013-01-10 22:18:04 +0000
@@ -242,6 +242,19 @@
       <code>stopProducing</code> on its transport.
     </p>
 
+    <p>
+      If the body of the resposnse isn't going to be consumed incrementaly,
+      then <code class="API" base="twisted.web.client">getBody</code> can be
+      used to get the body as a byte-string. This function returns ar
+      <code>Deferred</code> that fires with the body, after the request has
+      been completed.
+    </p>
+
+    <a href="listings/client/responseBody.py" class="py-listing">
+      Inspect the response.
+    </a>
+
+
     <h3>HTTP over SSL</h3>
 
     <p>

=== added file 'doc/web/howto/listings/client/responseBody.py'
--- doc/web/howto/listings/client/responseBody.py	1970-01-01 00:00:00 +0000
+++ doc/web/howto/listings/client/responseBody.py	2013-01-10 22:11:33 +0000
@@ -0,0 +1,31 @@
+from pprint import pformat
+
+from twisted.internet.task import react
+from twisted.web.client import Agent, getBody
+from twisted.web.http_headers import Headers
+
+
+def cbRequest(response):
+    print 'Response version:', response.version
+    print 'Response code:', response.code
+    print 'Response phrase:', response.phrase
+    print 'Response headers:'
+    print pformat(list(response.headers.getAllRawHeaders()))
+    d = getBody(response)
+    d.addCallback(cbBody)
+    return d
+
+def cbBody(body):
+    print 'Rsponse body:'
+    print body
+
+def main(reactor):
+    agent = Agent(reactor)
+    d = agent.request(
+        'GET',
+        'http://example.com/',
+        Headers({'User-Agent': ['Twisted Web Client Example']}),
+        None)
+    d.addCallback(cbRequest)
+
+react(main, ())

=== modified file 'twisted/web/client.py'
--- twisted/web/client.py	2013-01-01 02:45:04 +0000
+++ twisted/web/client.py	2013-01-10 22:18:04 +0000
@@ -33,6 +33,7 @@
 from twisted.python import failure
 from twisted.python._utilpy3 import InsensitiveDict
 from twisted.python.components import proxyForInterface
+from twisted.test.proto_helpers import AccumulatingProtocol
 from twisted.web import error
 from twisted.web.iweb import UNKNOWN_LENGTH, IBodyProducer, IResponse
 from twisted.web.http_headers import Headers
@@ -1608,9 +1609,28 @@
 
 
 
+def getBody(response):
+    """
+    Get the body of an {IResponse} and return it as a byte string.
+
+    This is a helper function, for clients that don't want to incrementally
+    recieve the body of an HTTP response. 
+
+    @type response: L{IResponse}
+    @param response: An HTTP response
+    
+    @return: A L{Deferred} which will fire with the body of the response.
+    """
+    protocol = AccumulatingProtocol()
+    d = protocol.closedDeferred = defer.Deferred()
+    d.addCallback(lambda _: proto.data)
+    response.deliverBody(protocol))
+    return d
+
+
 __all__ = [
     'PartialDownloadError', 'HTTPPageGetter', 'HTTPPageDownloader',
     'HTTPClientFactory', 'HTTPDownloader', 'getPage', 'downloadPage',
     'ResponseDone', 'Response', 'ResponseFailed', 'Agent', 'CookieAgent',
     'ProxyAgent', 'ContentDecoderAgent', 'GzipDecoder', 'RedirectAgent',
-    'HTTPConnectionPool']
+    'HTTPConnectionPool', 'getBody' ]

=== modified file 'twisted/web/test/test_agent.py'
--- twisted/web/test/test_agent.py	2012-12-04 15:26:17 +0000
+++ twisted/web/test/test_agent.py	2013-01-10 22:18:04 +0000
@@ -38,25 +38,6 @@
     ssl = None
 
 
-class GetBodyProtocol(Protocol):
-
-    def __init__(self, deferred):
-        self.deferred = deferred
-        self.buf = ''
-
-    def dataReceived(self, bytes):
-        self.buf += bytes
-
-    def connectionLost(self, reason):
-        self.deferred.callback(self.buf)
-
-
-def getBody(response):
-    d = defer.Deferred()
-    response.deliverBody(GetBodyProtocol(d))
-    return d
-
-
 
 class StubHTTPProtocol(Protocol):
     """

