Index: doc/core/howto/tutorial/components.xhtml
===================================================================
--- doc/core/howto/tutorial/components.xhtml	(revision 25111)
+++ doc/core/howto/tutorial/components.xhtml	(working copy)
@@ -40,10 +40,10 @@
 
 <h2>Interfaces and Adapters</h2>
 
-<p>Zope is described as "an open source application server for building content 
-management systems, intranets, portals, and custom applications," but for our 
-purposes we're only going to be interested one particular part of Zope: 
-zope.interfaces.</p>
+<p>Twisted uses Zope Interface to define and document APIs (application 
+programming interfaces).  The Zope distribution itself is an open source 
+application server, all of which we are not concerned with aside from this
+individual package.</p>
 
 <p>If interfaces are completely new to you, you might want to read the 
 <a href="../components.xhtml">Components HOWTO</a> before going any further. 
@@ -58,14 +58,18 @@
 class IFingerService(Interface):
 
     def getUser(user):
-        """Return a deferred returning a string"""
+        """
+        Return a deferred returning a string
+        """
 
     def getUsers():
-        """Return a deferred returning a list of strings"""
+        """
+        Return a deferred returning a list of strings
+        """
 </pre>
 
-<p>(We are of course using the standard convention of a name that 
-starts with a capital "I" for the name of the interface.</p>
+<p>We are using the standard convention of a name that starts with a capital 
+"I" for the name of the interface.</p>
 
 <p>We indicate that <code>FingerService</code> implements this interface by 
 inserting this line into the <code>FingerService</code> definition:</p>
@@ -84,7 +88,9 @@
 <pre class="python">
 class IFingerFactory(Interface):
     def getUser(user):
-        """Return a deferred returning a string"""
+        """
+        Return a deferred returning a string
+        """
 </pre>
 
 <p>Now we'll define an adapter, <code>FingerFactoryFromService</code>.  As it
@@ -107,7 +113,7 @@
 </pre>
 
 <p>Finally, in order for the program to use this adapter, we'll have to 
-register it in the main function:</p>
+register outside of the adapter's specification:</p>
 
 <pre class="python">
 components.registerAdapter(FingerFactoryFromService,
@@ -144,7 +150,9 @@
 class IIRCClientFactory(Interface):
 
     def getUser(user):
-        """Return a deferred returning a string"""
+        """
+        Return a deferred returning a string
+        """
 
 class IRCClientFactoryFromService(protocol.ClientFactory):
 
Index: doc/core/howto/tutorial/listings/finger/finger19.tac
===================================================================
--- doc/core/howto/tutorial/listings/finger/finger19.tac	(revision 25323)
+++ doc/core/howto/tutorial/listings/finger/finger19.tac	(working copy)
@@ -40,7 +40,9 @@
 class IFingerFactory(Interface):
 
     def getUser(user):
-        """Return a deferred returning a string"""
+        """
+        Return a deferred returning a string
+        """
 
 
 class FingerFactoryFromService(protocol.ServerFactory):
Index: doc/core/howto/tutorial/listings/finger/finger19a.tac
===================================================================
--- doc/core/howto/tutorial/listings/finger/finger19a.tac	(revision 25111)
+++ doc/core/howto/tutorial/listings/finger/finger19a.tac	(working copy)
@@ -39,7 +39,9 @@
 class IFingerSetterFactory(Interface):
 
     def setUser(user, status):
-        """Return a deferred returning a string"""
+        """
+        Return a deferred returning a string
+        """
 
 
 class FingerSetterFactoryFromService(protocol.ServerFactory):
@@ -74,7 +76,9 @@
 class IFingerFactory(Interface):
 
     def getUser(user):
-        """Return a deferred returning a string"""
+        """
+        Return a deferred returning a string
+        """
 
 
 class FingerFactoryFromService(protocol.ServerFactory):
@@ -101,7 +105,9 @@
     """
 
     def getUser(user):
-        """Return a deferred returning a string"""
+        """
+        Return a deferred returning a string
+        """
 
 
 class IRCClientFactoryFromService(protocol.ClientFactory):
@@ -182,20 +188,28 @@
 class IFingerService(Interface):
 
     def getUser(user):
-        """Return a deferred returning a string"""
+        """
+        Return a deferred returning a string
+        """
 
     def getUsers():
-        """Return a deferred returning a list of strings"""
+        """
+        Return a deferred returning a list of strings
+        """
 
 
 class IFingerSetterService(Interface):
 
     def setUser(user, status):
-        """Set the user's status to something"""
+        """
+        Set the user's status to something
+        """
 
 
 class MemoryFingerService(service.Service):
-    """Reads and writes the user's status from memory"""
+    """
+    Reads and writes the user's status from memory
+    """
 
     implements([IFingerService, IFingerSetterService])
 
Index: doc/core/howto/tutorial/listings/finger/finger19a_changes.py
===================================================================
--- doc/core/howto/tutorial/listings/finger/finger19a_changes.py	(revision 25111)
+++ doc/core/howto/tutorial/listings/finger/finger19a_changes.py	(working copy)
@@ -17,7 +17,9 @@
 class IFingerSetterFactory(Interface):
 
     def setUser(user, status):
-        """Return a deferred returning a string"""
+        """
+        Return a deferred returning a string
+        """
 
 
 class FingerSetterFactoryFromService(protocol.ServerFactory):
@@ -36,11 +38,15 @@
 class IFingerSetterService(Interface):
 
     def setUser(user, status):
-        """Set the user's status to something"""
+        """
+        Set the user's status to something
+        """
 
 
 class MemoryFingerService(service.Service):
-    """Reads and writes the user's status from memory"""
+    """
+    Reads and writes the user's status from memory
+    """
 
     implements([IFingerService, IFingerSetterService])
 
