Index: doc/core/howto/tutorial/listings/finger/finger19.tac
===================================================================
--- doc/core/howto/tutorial/listings/finger/finger19.tac	(revision 25551)
+++ doc/core/howto/tutorial/listings/finger/finger19.tac	(working copy)
@@ -5,7 +5,6 @@
 from twisted.protocols import basic
 from twisted.python import components
 from twisted.web import resource, server, static, xmlrpc
-from zope.interface import Interface, implements
 import cgi
 
 def catchError(err):
@@ -37,45 +36,21 @@
             d.addCallback(lambda m: self.msg(user, m))
 
 
-class IFingerFactory(Interface):
-
-    def getUser(user):
-        """
-        Return a deferred returning a string
-        """
-
-
 class FingerFactoryFromService(protocol.ServerFactory):
 
-    implements(IFingerFactory)
-
     protocol = FingerProtocol
 
     def __init__(self, service):
         self.service = service
 
     def getUser(self, user):
+        """Return a deferred returning a string"""
         return self.service.getUser(user)
 
-components.registerAdapter(FingerFactoryFromService,
-                           IFingerService,
-                           IFingerFactory)
 
-
-class IIRCClientFactory(Interface):
-
-    """
-    @ivar nickname
-    """
-
-    def getUser(user):
-        """Return a deferred returning a string"""
-
-
 class IRCClientFactoryFromService(protocol.ClientFactory):
-
-    implements(IIRCClientFactory)
-
+    """@ivar nickname"""
+    
     protocol = IRCReplyBot
     nickname = None
 
@@ -83,16 +58,12 @@
         self.service = service
 
     def getUser(self, user):
+        """Return a deferred returning a string"""
         return self.service.getUser(user)
 
-components.registerAdapter(IRCClientFactoryFromService,
-                           IFingerService,
-                           IIRCClientFactory)
 
 class HTTPFactoryFromService(resource.Resource):
 
-    implements(resource.IResource)
-
     def __init__(self, service):
         resource.Resource.__init__(self)
         self.service = service
@@ -115,11 +86,7 @@
         else:
             return UserStatus(path, self.service)
 
-components.registerAdapter(HTTPFactoryFromService,
-                           IFingerService,
-                           resource.IResource)
 
-
 class UserStatus(resource.Resource):
 
     def __init__(self, user, service):
@@ -147,19 +114,8 @@
         return self.service.getUser(user)
 
 
-class IFingerService(Interface):
-
-    def getUser(user):
-        """Return a deferred returning a string"""
-
-    def getUsers():
-        """Return a deferred returning a list of strings"""
-
-
 class FingerService(service.Service):
 
-    implements(IFingerService)
-
     def __init__(self, filename):
         self.filename = filename
         self._read()
@@ -173,21 +129,26 @@
             self.users[user] = status
         self.call = reactor.callLater(30, self._read)
 
-    def getUser(self, user):
+    def getUser(self, user):        """Return a deferred returning a string"""
         return defer.succeed(self.users.get(user, "No such user"))
 
     def getUsers(self):
+        """Return a deferred returning a list of strings"""
         return defer.succeed(self.users.keys())
 
 
 application = service.Application('finger', uid=1, gid=1)
 f = FingerService('/etc/users')
 serviceCollection = service.IServiceCollection(application)
-internet.TCPServer(79, IFingerFactory(f)
-                   ).setServiceParent(serviceCollection)
-internet.TCPServer(8000, server.Site(resource.IResource(f))
-                   ).setServiceParent(serviceCollection)
-i = IIRCClientFactory(f)
-i.nickname = 'fingerbot'
-internet.TCPClient('irc.freenode.org', 6667, i
-                   ).setServiceParent(serviceCollection)
+
+fingerFactory = FingerFactoryFromService(f)
+fingerServer = internet.TCPServer(79, fingerFactory)
+fingerServer.setServiceParent(serviceCollection)
+
+httpFactory = httpFactoryFromService(f)
+webServer = internet.TCPServer(8000, server.Site(httpFactory))
+webServer.setServiceParent(serviceCollection)
+
+ircFactory = IRCClientFactoryFromSerivce(f, 'fingerbot')
+ircClient = internet.TCPClient('irc.freenode.org', 6667, ircFactory)
+ircClient.setServiceParent(serviceCollection)
