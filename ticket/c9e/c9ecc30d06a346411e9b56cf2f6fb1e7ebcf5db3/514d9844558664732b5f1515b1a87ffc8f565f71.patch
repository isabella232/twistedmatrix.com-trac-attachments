diff --git a/twisted/cred/checkers.py b/twisted/cred/checkers.py
index 92cdeee..5f8fcdb 100644
--- a/twisted/cred/checkers.py
+++ b/twisted/cred/checkers.py
@@ -9,9 +9,11 @@ import os
 from zope.interface import implementer, Interface, Attribute
 
 from twisted.internet import defer
-from twisted.python import failure, log
+from twisted.python import failure
 from twisted.cred import error, credentials
+from twisted.logger import Logger
 
+log = Logger()
 
 
 class ICredentialsChecker(Interface):
@@ -198,23 +200,20 @@ class FilePasswordDB:
 
     def _loadCredentials(self):
         try:
-            f = open(self.filename, "rb")
-        except:
-            log.err()
+            with open(self.filename, "rb") as f:
+                for line in f:
+                    line = line.rstrip()
+                    parts = line.split(self.delim)
+
+                    if self.ufield >= len(parts) or self.pfield >= len(parts):
+                        continue
+                    if self.caseSensitive:
+                        yield parts[self.ufield], parts[self.pfield]
+                    else:
+                        yield parts[self.ufield].lower(), parts[self.pfield]
+        except IOError as e:
+            log.error("Unable to load credentials db: {e!r}", e=e)
             raise error.UnauthorizedLogin()
-        else:
-            for line in f:
-                line = line.rstrip()
-                parts = line.split(self.delim)
-
-                if self.ufield >= len(parts) or self.pfield >= len(parts):
-                    continue
-                if self.caseSensitive:
-                    yield parts[self.ufield], parts[self.pfield]
-                else:
-                    yield parts[self.ufield].lower(), parts[self.pfield]
-        finally:
-            f.close()
 
 
     def getUser(self, username):
diff --git a/twisted/cred/test/test_cred.py b/twisted/cred/test/test_cred.py
index f2dafb8..bcac77d 100644
--- a/twisted/cred/test/test_cred.py
+++ b/twisted/cred/test/test_cred.py
@@ -206,6 +206,11 @@ class OnDiskDatabaseTests(unittest.TestCase):
                 f.write(u + b":" + p + b"\n")
 
 
+    def testNonexistentDatabase(self):
+        self.db = checkers.FilePasswordDB('test_thisbetternoteverexist.db')
+        self.failUnlessRaises(error.UnauthorizedLogin, self.db.getUser, 'user')
+
+
     def testUserLookup(self):
         self.db = checkers.FilePasswordDB(self.dbfile)
         for (u, p) in self.users:
diff --git a/twisted/topfiles/8028.bugfix b/twisted/topfiles/8028.bugfix
new file mode 100644
index 0000000..a38b921
--- /dev/null
+++ b/twisted/topfiles/8028.bugfix
@@ -0,0 +1 @@
+twisted.cred.checkers.FilePasswordDB no longer raises an unhandled error if the credentials db file does not exist.
